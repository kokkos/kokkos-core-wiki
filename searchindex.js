Search.setIndex({"docnames": ["API/algorithms-index", "API/algorithms/Random-Number", "API/algorithms/Sort", "API/algorithms/std-algorithms-index", "API/algorithms/std-algorithms/Iterators", "API/algorithms/std-algorithms/StdMinMaxElement", "API/algorithms/std-algorithms/StdModSeq", "API/algorithms/std-algorithms/StdNonModSeq", "API/algorithms/std-algorithms/StdNumeric", "API/algorithms/std-algorithms/StdPartitioningOps", "API/algorithms/std-algorithms/StdSorting", "API/algorithms/std-algorithms/all/StdAdjacentDifference", "API/algorithms/std-algorithms/all/StdAdjacentFind", "API/algorithms/std-algorithms/all/StdAllOf", "API/algorithms/std-algorithms/all/StdAnyOf", "API/algorithms/std-algorithms/all/StdCopy", "API/algorithms/std-algorithms/all/StdCopyBackward", "API/algorithms/std-algorithms/all/StdCopyIf", "API/algorithms/std-algorithms/all/StdCopy_n", "API/algorithms/std-algorithms/all/StdCount", "API/algorithms/std-algorithms/all/StdCountIf", "API/algorithms/std-algorithms/all/StdEqual", "API/algorithms/std-algorithms/all/StdExclusiveScan", "API/algorithms/std-algorithms/all/StdFill", "API/algorithms/std-algorithms/all/StdFill_n", "API/algorithms/std-algorithms/all/StdFind", "API/algorithms/std-algorithms/all/StdFindEnd", "API/algorithms/std-algorithms/all/StdFindFirstOf", "API/algorithms/std-algorithms/all/StdFindIf", "API/algorithms/std-algorithms/all/StdFindIfNot", "API/algorithms/std-algorithms/all/StdForEach", "API/algorithms/std-algorithms/all/StdForEachN", "API/algorithms/std-algorithms/all/StdGenerate", "API/algorithms/std-algorithms/all/StdGenerate_n", "API/algorithms/std-algorithms/all/StdInclusiveScan", "API/algorithms/std-algorithms/all/StdIsPartitioned", "API/algorithms/std-algorithms/all/StdIsSorted", "API/algorithms/std-algorithms/all/StdIsSortedUntil", "API/algorithms/std-algorithms/all/StdLexicographicalCompare", "API/algorithms/std-algorithms/all/StdMaxElement", "API/algorithms/std-algorithms/all/StdMinElement", "API/algorithms/std-algorithms/all/StdMinMaxElement", "API/algorithms/std-algorithms/all/StdMismatch", "API/algorithms/std-algorithms/all/StdMove", "API/algorithms/std-algorithms/all/StdMoveBackward", "API/algorithms/std-algorithms/all/StdNoneOf", "API/algorithms/std-algorithms/all/StdPartitionCopy", "API/algorithms/std-algorithms/all/StdPartitionPoint", "API/algorithms/std-algorithms/all/StdReduce", "API/algorithms/std-algorithms/all/StdRemove", "API/algorithms/std-algorithms/all/StdRemoveCopy", "API/algorithms/std-algorithms/all/StdRemoveCopyIf", "API/algorithms/std-algorithms/all/StdRemoveIf", "API/algorithms/std-algorithms/all/StdReplace", "API/algorithms/std-algorithms/all/StdReplaceCopy", "API/algorithms/std-algorithms/all/StdReplaceCopyIf", "API/algorithms/std-algorithms/all/StdReplaceIf", "API/algorithms/std-algorithms/all/StdReverse", "API/algorithms/std-algorithms/all/StdReverseCopy", "API/algorithms/std-algorithms/all/StdRotate", "API/algorithms/std-algorithms/all/StdRotateCopy", "API/algorithms/std-algorithms/all/StdSearch", "API/algorithms/std-algorithms/all/StdSearchN", "API/algorithms/std-algorithms/all/StdShiftLeft", "API/algorithms/std-algorithms/all/StdShiftRight", "API/algorithms/std-algorithms/all/StdSwapRanges", "API/algorithms/std-algorithms/all/StdTransform", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan", "API/algorithms/std-algorithms/all/StdTransformReduce", "API/algorithms/std-algorithms/all/StdUnique", "API/algorithms/std-algorithms/all/StdUniqueCopy", "API/alphabetical", "API/containers-index", "API/containers/Bitset", "API/containers/DualView", "API/containers/DynRankView", "API/containers/DynamicView", "API/containers/Offset-View", "API/containers/ScatterView", "API/containers/StaticCrsGraph", "API/containers/Unordered-Map", "API/containers/vector", "API/core-index", "API/core/Detection-Idiom", "API/core/Execution-Policies", "API/core/Initialize-and-Finalize", "API/core/KokkosConcepts", "API/core/Macros", "API/core/Numerics", "API/core/ParallelDispatch", "API/core/Profiling", "API/core/STL-Compatibility", "API/core/SpaceAccessibility", "API/core/Spaces", "API/core/Task-Parallelism", "API/core/Traits", "API/core/Utilities", "API/core/View", "API/core/atomics", "API/core/atomics/atomic_assign", "API/core/atomics/atomic_compare_exchange", "API/core/atomics/atomic_compare_exchange_strong", "API/core/atomics/atomic_exchange", "API/core/atomics/atomic_fetch_op", "API/core/atomics/atomic_load", "API/core/atomics/atomic_op", "API/core/atomics/atomic_op_fetch", "API/core/atomics/atomic_store", "API/core/builtin_reducers", "API/core/builtinreducers/BAnd", "API/core/builtinreducers/BOr", "API/core/builtinreducers/LAnd", "API/core/builtinreducers/LOr", "API/core/builtinreducers/Max", "API/core/builtinreducers/MaxLoc", "API/core/builtinreducers/Min", "API/core/builtinreducers/MinLoc", "API/core/builtinreducers/MinMax", "API/core/builtinreducers/MinMaxLoc", "API/core/builtinreducers/MinMaxLocScalar", "API/core/builtinreducers/MinMaxScalar", "API/core/builtinreducers/Prod", "API/core/builtinreducers/ReducerConcept", "API/core/builtinreducers/ReductionScalarTypes", "API/core/builtinreducers/Sum", "API/core/builtinreducers/ValLocScalar", "API/core/c_style_memory_management", "API/core/c_style_memory_management/free", "API/core/c_style_memory_management/malloc", "API/core/c_style_memory_management/realloc", "API/core/execution_spaces", "API/core/initialize_finalize/InitArguments", "API/core/initialize_finalize/InitializationSettings", "API/core/initialize_finalize/ScopeGuard", "API/core/initialize_finalize/finalize", "API/core/initialize_finalize/initialize", "API/core/initialize_finalize/push_finalize_hook", "API/core/macros-special/host_device_macros", "API/core/memory_spaces", "API/core/numerics/bit-manipulation", "API/core/numerics/mathematical-constants", "API/core/numerics/mathematical-functions", "API/core/numerics/numeric-traits", "API/core/parallel-dispatch/ParallelForTag", "API/core/parallel-dispatch/ParallelReduceTag", "API/core/parallel-dispatch/ParallelScanTag", "API/core/parallel-dispatch/fence", "API/core/parallel-dispatch/parallel_for", "API/core/parallel-dispatch/parallel_reduce", "API/core/parallel-dispatch/parallel_scan", "API/core/policies/ExecutionPolicyConcept", "API/core/policies/MDRangePolicy", "API/core/policies/NestedPolicies", "API/core/policies/RangePolicy", "API/core/policies/TeamHandleConcept", "API/core/policies/TeamPolicy", "API/core/policies/TeamThreadMDRange", "API/core/policies/TeamThreadRange", "API/core/policies/TeamVectorMDRange", "API/core/policies/TeamVectorRange", "API/core/policies/ThreadVectorMDRange", "API/core/policies/ThreadVectorRange", "API/core/profiling/profiling_section", "API/core/profiling/scoped_region", "API/core/spaces/partition_space", "API/core/stl-compat/Array", "API/core/stl-compat/pair", "API/core/utilities/abort", "API/core/utilities/all", "API/core/utilities/assert", "API/core/utilities/complex", "API/core/utilities/device_id", "API/core/utilities/experimental", "API/core/utilities/min_max_clamp", "API/core/utilities/num_devices", "API/core/utilities/num_threads", "API/core/utilities/printf", "API/core/utilities/swap", "API/core/utilities/timer", "API/core/view/Subview_type", "API/core/view/create_mirror", "API/core/view/deep_copy", "API/core/view/layoutLeft", "API/core/view/layoutRight", "API/core/view/layoutStride", "API/core/view/realloc", "API/core/view/resize", "API/core/view/subview", "API/core/view/view", "API/core/view/view_alloc", "API/core/view/view_like", "API/simd-index", "API/simd/simd", "API/simd/simd_mask", "API/simd/where_expression", "ProgrammingGuide/Atomic-Operations", "ProgrammingGuide/Compatibility", "ProgrammingGuide/Compiling", "ProgrammingGuide/Custom-Reductions", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types", "ProgrammingGuide/Custom-Reductions-Custom-Reducers", "ProgrammingGuide/HierarchicalParallelism", "ProgrammingGuide/Initialization", "ProgrammingGuide/Interoperability", "ProgrammingGuide/Introduction", "ProgrammingGuide/Kokkos-and-Virtual-Functions", "ProgrammingGuide/Machine-Model", "ProgrammingGuide/ParallelDispatch", "ProgrammingGuide/ProgrammingModel", "ProgrammingGuide/SIMD", "ProgrammingGuide/Subviews", "ProgrammingGuide/View", "building", "citation", "contributing", "deprecation_page", "developer-guides/index", "developer-guides/prs-and-reviews", "faq", "index", "keywords", "known-issues", "license", "mydefs", "programmingguide", "quick_start", "requirements", "templates/class_api", "templates/index", "testing-and-issue-tracking", "testing-and-issue-tracking/Kokkos-Project-Planning", "testing-and-issue-tracking/Requirements-Issues-and-Feedback", "testing-and-issue-tracking/Testing-Process-Details", "testing-and-issue-tracking/Testing-Processes", "testing-and-issue-tracking/Testing-Workflow-Components", "usecases", "usecases/Average-To-Nodes", "usecases/Kokkos-Fortran-Interoperability", "usecases/MDRangePolicy", "usecases/MPI-Halo-Exchange", "usecases/Moving_from_EnableUVM_to_SharedSpace", "usecases/OverlappingHostAndDeviceWork", "usecases/SoA-and-AoSoA-with-Cabana", "usecases/TaggedOperators", "usecases/Tasking", "usecases/WindowsHeader", "videolectures"], "filenames": ["API/algorithms-index.rst", "API/algorithms/Random-Number.rst", "API/algorithms/Sort.rst", "API/algorithms/std-algorithms-index.rst", "API/algorithms/std-algorithms/Iterators.rst", "API/algorithms/std-algorithms/StdMinMaxElement.rst", "API/algorithms/std-algorithms/StdModSeq.rst", "API/algorithms/std-algorithms/StdNonModSeq.rst", "API/algorithms/std-algorithms/StdNumeric.rst", "API/algorithms/std-algorithms/StdPartitioningOps.rst", "API/algorithms/std-algorithms/StdSorting.rst", "API/algorithms/std-algorithms/all/StdAdjacentDifference.md", "API/algorithms/std-algorithms/all/StdAdjacentFind.rst", "API/algorithms/std-algorithms/all/StdAllOf.rst", "API/algorithms/std-algorithms/all/StdAnyOf.rst", "API/algorithms/std-algorithms/all/StdCopy.rst", "API/algorithms/std-algorithms/all/StdCopyBackward.rst", "API/algorithms/std-algorithms/all/StdCopyIf.rst", "API/algorithms/std-algorithms/all/StdCopy_n.rst", "API/algorithms/std-algorithms/all/StdCount.rst", "API/algorithms/std-algorithms/all/StdCountIf.rst", "API/algorithms/std-algorithms/all/StdEqual.rst", "API/algorithms/std-algorithms/all/StdExclusiveScan.md", "API/algorithms/std-algorithms/all/StdFill.md", "API/algorithms/std-algorithms/all/StdFill_n.md", "API/algorithms/std-algorithms/all/StdFind.rst", "API/algorithms/std-algorithms/all/StdFindEnd.rst", "API/algorithms/std-algorithms/all/StdFindFirstOf.rst", "API/algorithms/std-algorithms/all/StdFindIf.rst", "API/algorithms/std-algorithms/all/StdFindIfNot.rst", "API/algorithms/std-algorithms/all/StdForEach.md", "API/algorithms/std-algorithms/all/StdForEachN.md", "API/algorithms/std-algorithms/all/StdGenerate.rst", "API/algorithms/std-algorithms/all/StdGenerate_n.rst", "API/algorithms/std-algorithms/all/StdInclusiveScan.md", "API/algorithms/std-algorithms/all/StdIsPartitioned.rst", "API/algorithms/std-algorithms/all/StdIsSorted.rst", "API/algorithms/std-algorithms/all/StdIsSortedUntil.rst", "API/algorithms/std-algorithms/all/StdLexicographicalCompare.md", "API/algorithms/std-algorithms/all/StdMaxElement.rst", "API/algorithms/std-algorithms/all/StdMinElement.rst", "API/algorithms/std-algorithms/all/StdMinMaxElement.rst", "API/algorithms/std-algorithms/all/StdMismatch.md", "API/algorithms/std-algorithms/all/StdMove.rst", "API/algorithms/std-algorithms/all/StdMoveBackward.rst", "API/algorithms/std-algorithms/all/StdNoneOf.rst", "API/algorithms/std-algorithms/all/StdPartitionCopy.rst", "API/algorithms/std-algorithms/all/StdPartitionPoint.md", "API/algorithms/std-algorithms/all/StdReduce.md", "API/algorithms/std-algorithms/all/StdRemove.rst", "API/algorithms/std-algorithms/all/StdRemoveCopy.rst", "API/algorithms/std-algorithms/all/StdRemoveCopyIf.rst", "API/algorithms/std-algorithms/all/StdRemoveIf.rst", "API/algorithms/std-algorithms/all/StdReplace.md", "API/algorithms/std-algorithms/all/StdReplaceCopy.md", "API/algorithms/std-algorithms/all/StdReplaceCopyIf.md", "API/algorithms/std-algorithms/all/StdReplaceIf.md", "API/algorithms/std-algorithms/all/StdReverse.rst", "API/algorithms/std-algorithms/all/StdReverseCopy.rst", "API/algorithms/std-algorithms/all/StdRotate.rst", "API/algorithms/std-algorithms/all/StdRotateCopy.rst", "API/algorithms/std-algorithms/all/StdSearch.md", "API/algorithms/std-algorithms/all/StdSearchN.md", "API/algorithms/std-algorithms/all/StdShiftLeft.rst", "API/algorithms/std-algorithms/all/StdShiftRight.rst", "API/algorithms/std-algorithms/all/StdSwapRanges.rst", "API/algorithms/std-algorithms/all/StdTransform.rst", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformReduce.md", "API/algorithms/std-algorithms/all/StdUnique.rst", "API/algorithms/std-algorithms/all/StdUniqueCopy.rst", "API/alphabetical.rst", "API/containers-index.rst", "API/containers/Bitset.rst", "API/containers/DualView.rst", "API/containers/DynRankView.rst", "API/containers/DynamicView.rst", "API/containers/Offset-View.rst", "API/containers/ScatterView.rst", "API/containers/StaticCrsGraph.rst", "API/containers/Unordered-Map.rst", "API/containers/vector.rst", "API/core-index.rst", "API/core/Detection-Idiom.rst", "API/core/Execution-Policies.rst", "API/core/Initialize-and-Finalize.rst", "API/core/KokkosConcepts.rst", "API/core/Macros.rst", "API/core/Numerics.rst", "API/core/ParallelDispatch.rst", "API/core/Profiling.rst", "API/core/STL-Compatibility.rst", "API/core/SpaceAccessibility.rst", "API/core/Spaces.rst", "API/core/Task-Parallelism.rst", "API/core/Traits.rst", "API/core/Utilities.rst", "API/core/View.rst", "API/core/atomics.rst", "API/core/atomics/atomic_assign.rst", "API/core/atomics/atomic_compare_exchange.rst", "API/core/atomics/atomic_compare_exchange_strong.rst", "API/core/atomics/atomic_exchange.rst", "API/core/atomics/atomic_fetch_op.rst", "API/core/atomics/atomic_load.rst", "API/core/atomics/atomic_op.rst", "API/core/atomics/atomic_op_fetch.rst", "API/core/atomics/atomic_store.rst", "API/core/builtin_reducers.rst", "API/core/builtinreducers/BAnd.rst", "API/core/builtinreducers/BOr.rst", "API/core/builtinreducers/LAnd.rst", "API/core/builtinreducers/LOr.rst", "API/core/builtinreducers/Max.rst", "API/core/builtinreducers/MaxLoc.rst", "API/core/builtinreducers/Min.rst", "API/core/builtinreducers/MinLoc.rst", "API/core/builtinreducers/MinMax.rst", "API/core/builtinreducers/MinMaxLoc.rst", "API/core/builtinreducers/MinMaxLocScalar.rst", "API/core/builtinreducers/MinMaxScalar.rst", "API/core/builtinreducers/Prod.rst", "API/core/builtinreducers/ReducerConcept.rst", "API/core/builtinreducers/ReductionScalarTypes.rst", "API/core/builtinreducers/Sum.rst", "API/core/builtinreducers/ValLocScalar.rst", "API/core/c_style_memory_management.rst", "API/core/c_style_memory_management/free.rst", "API/core/c_style_memory_management/malloc.rst", "API/core/c_style_memory_management/realloc.rst", "API/core/execution_spaces.rst", "API/core/initialize_finalize/InitArguments.rst", "API/core/initialize_finalize/InitializationSettings.rst", "API/core/initialize_finalize/ScopeGuard.rst", "API/core/initialize_finalize/finalize.rst", "API/core/initialize_finalize/initialize.rst", "API/core/initialize_finalize/push_finalize_hook.rst", "API/core/macros-special/host_device_macros.rst", "API/core/memory_spaces.rst", "API/core/numerics/bit-manipulation.rst", "API/core/numerics/mathematical-constants.rst", "API/core/numerics/mathematical-functions.rst", "API/core/numerics/numeric-traits.rst", "API/core/parallel-dispatch/ParallelForTag.rst", "API/core/parallel-dispatch/ParallelReduceTag.rst", "API/core/parallel-dispatch/ParallelScanTag.rst", "API/core/parallel-dispatch/fence.rst", "API/core/parallel-dispatch/parallel_for.rst", "API/core/parallel-dispatch/parallel_reduce.rst", "API/core/parallel-dispatch/parallel_scan.rst", "API/core/policies/ExecutionPolicyConcept.rst", "API/core/policies/MDRangePolicy.rst", "API/core/policies/NestedPolicies.rst", "API/core/policies/RangePolicy.rst", "API/core/policies/TeamHandleConcept.rst", "API/core/policies/TeamPolicy.rst", "API/core/policies/TeamThreadMDRange.rst", "API/core/policies/TeamThreadRange.rst", "API/core/policies/TeamVectorMDRange.rst", "API/core/policies/TeamVectorRange.rst", "API/core/policies/ThreadVectorMDRange.rst", "API/core/policies/ThreadVectorRange.rst", "API/core/profiling/profiling_section.rst", "API/core/profiling/scoped_region.rst", "API/core/spaces/partition_space.rst", "API/core/stl-compat/Array.rst", "API/core/stl-compat/pair.md", "API/core/utilities/abort.rst", "API/core/utilities/all.md", "API/core/utilities/assert.rst", "API/core/utilities/complex.rst", "API/core/utilities/device_id.rst", "API/core/utilities/experimental.md", "API/core/utilities/min_max_clamp.rst", "API/core/utilities/num_devices.rst", "API/core/utilities/num_threads.rst", "API/core/utilities/printf.rst", "API/core/utilities/swap.rst", "API/core/utilities/timer.rst", "API/core/view/Subview_type.rst", "API/core/view/create_mirror.rst", "API/core/view/deep_copy.rst", "API/core/view/layoutLeft.rst", "API/core/view/layoutRight.rst", "API/core/view/layoutStride.rst", "API/core/view/realloc.rst", "API/core/view/resize.rst", "API/core/view/subview.rst", "API/core/view/view.rst", "API/core/view/view_alloc.rst", "API/core/view/view_like.rst", "API/simd-index.rst", "API/simd/simd.md", "API/simd/simd_mask.md", "API/simd/where_expression.md", "ProgrammingGuide/Atomic-Operations.md", "ProgrammingGuide/Compatibility.md", "ProgrammingGuide/Compiling.md", "ProgrammingGuide/Custom-Reductions.rst", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers.md", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types.md", "ProgrammingGuide/Custom-Reductions-Custom-Reducers.md", "ProgrammingGuide/HierarchicalParallelism.md", "ProgrammingGuide/Initialization.rst", "ProgrammingGuide/Interoperability.md", "ProgrammingGuide/Introduction.md", "ProgrammingGuide/Kokkos-and-Virtual-Functions.md", "ProgrammingGuide/Machine-Model.rst", "ProgrammingGuide/ParallelDispatch.md", "ProgrammingGuide/ProgrammingModel.md", "ProgrammingGuide/SIMD.md", "ProgrammingGuide/Subviews.md", "ProgrammingGuide/View.rst", "building.md", "citation.rst", "contributing.rst", "deprecation_page.rst", "developer-guides/index.rst", "developer-guides/prs-and-reviews.rst", "faq.rst", "index.rst", "keywords.rst", "known-issues.rst", "license.rst", "mydefs.rst", "programmingguide.rst", "quick_start.rst", "requirements.rst", "templates/class_api.rst", "templates/index.rst", "testing-and-issue-tracking.rst", "testing-and-issue-tracking/Kokkos-Project-Planning.md", "testing-and-issue-tracking/Requirements-Issues-and-Feedback.md", "testing-and-issue-tracking/Testing-Process-Details.md", "testing-and-issue-tracking/Testing-Processes.md", "testing-and-issue-tracking/Testing-Workflow-Components.md", "usecases.rst", "usecases/Average-To-Nodes.md", "usecases/Kokkos-Fortran-Interoperability.md", "usecases/MDRangePolicy.md", "usecases/MPI-Halo-Exchange.md", "usecases/Moving_from_EnableUVM_to_SharedSpace.rst", "usecases/OverlappingHostAndDeviceWork.md", "usecases/SoA-and-AoSoA-with-Cabana.md", "usecases/TaggedOperators.md", "usecases/Tasking.md", "usecases/WindowsHeader.md", "videolectures.rst"], "titles": ["API: Algorithms", "Random-Number", "Sort", "Std Algorithms", "Iterators", "Minimum/maximum", "Modifying Sequence", "Non-modifying Sequence", "Numeric", "Partitioning", "Sorting", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_difference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">all_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">any_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">equal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_end</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_first_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if_not</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_partitioned</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted_until</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lexicographical_compare</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">max_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">min_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">minmax_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mismatch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">none_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_point</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_left</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_right</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">swap_ranges</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique_copy</span></code>", "API in Alphabetical Order", "API: Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Bitset</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DualView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynRankView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynamicView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">OffsetView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScatterView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">StaticCrsGraph</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnorderedMap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector</span></code> [DEPRECATED]", "API: Core", "Detection Idiom", "Execution Policies", "Initialize and Finalize", "Kokkos Concepts", "Macros", "Numerics", "Parallel Execution/Dispatch", "Profiling", "STL Compatibility Issues", "Space Accessibility", "Spaces", "Task-Parallelism", "Traits", "Utilities", "View and related", "Atomics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_assign</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange_strong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_fetch_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_load</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]_fetch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_store</span></code>", "Built-in Reducers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Max</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Min</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLocScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Prod</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReducerConcept</span></code>", "Reduction Scalar Types", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ValLocScalar</span></code>", "C-style memory management", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_free</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_malloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_realloc</span></code>", "Execution Spaces", "InitArguments", "<code class=\"docutils literal notranslate\"><span class=\"pre\">InitializationSettings</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScopeGuard</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">finalize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">initialize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">push_finalize_hook</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Function</span> <span class=\"pre\">Annotation</span> <span class=\"pre\">Macros</span></code>", "Memory Spaces", "Bit manipulation", "Mathematical constants", "Common math functions", "Numeric traits", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelForTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelReduceTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelScanTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fence</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_for</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ExecutionPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MDRangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NestedPolicies</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">RangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamHandleConcept</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Profiling::ProfilingSection</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Profiling::ScopedRegion</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_space</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Array</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::pair</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::abort</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::ALL</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">KOKKOS_ASSERT</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::complex</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::device_id</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Experimental</span></code>", "Minimum/maximum operations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::num_devices</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::num_threads</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::printf</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::kokkos_swap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Timer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_mirror[_view]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deep_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutLeft</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutRight</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutStride</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">realloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">resize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">View</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">view_alloc</span></code>", "View-like Types", "API: SIMD", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::where_expression</span></code>", "10. Atomic Operations", "12 Backwards &amp; Future Compatibility", "4. Compiling", "9. Custom Reductions", "9.1 Built-In-Reducers", "9.2 Built-In Reducers with Custom Scalar Types", "9.3 Custom Reducers", "8. Hierarchical Parallelism", "5. Initialization", "13. Interoperability and Legacy Codes", "1. Introduction", "14. Kokkos and Virtual Functions", "2. Machine Model", "7. Parallel dispatch", "3: Programming Model", "15. SIMD Types", "11: Subviews", "6: View: Multidimensional array", "Build, Install and Use", "Citing Kokkos", "Contributing", "Deprecations", "Developer Guides", "PRs and Reviews", "FAQ", "Kokkos: The Programming Model", "CMake Keywords", "Known issues", "License", "&lt;no title&gt;", "Programming Guide", "Quick Start", "Requirements", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CoolerView</span></code>", "Documentation Templates", "Kokkos Planning and Testing", "Kokkos Project Planning", "Requirements, Issues and Feedback", "Attachments", "Kokkos Testing Processes and Change Process", "Kokkos Testing Workflow Components", "Use Cases and Examples", "ScatterView averaging elements to nodes", "Fortran Interop Use Case", "MDRangePolicy Use Case", "MPI Halo Exchange", "Moving code from requiring <code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos_ENABLE_CUDA_UVM</span></code> to using <code class=\"docutils literal notranslate\"><span class=\"pre\">SharedSpace</span></code>", "Overlapping Host and Device work", "Array of Structures and Structure of Arrays with Cabana", "Tagged Operators", "Kokkos Tasking Use Case", "Kokkos and <code class=\"docutils literal notranslate\"><span class=\"pre\">Windows.h</span></code>", "Video lectures and slides"], "terms": {"random": [0, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 75, 76, 133, 134, 136, 139, 189, 204, 210], "number": [0, 4, 18, 19, 20, 24, 31, 33, 63, 64, 72, 74, 76, 77, 81, 82, 87, 88, 89, 123, 129, 131, 133, 134, 136, 140, 141, 155, 165, 166, 171, 172, 175, 176, 179, 189, 193, 194, 196, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 223, 234, 235, 240, 241, 244, 246], "gener": [0, 6, 33, 72, 83, 85, 87, 90, 95, 136, 138, 139, 193, 194, 196, 197, 200, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 224, 227, 228, 232, 234, 236], "sort": [0, 3, 36, 37, 82, 88, 217, 223], "nest": [0, 77, 87, 93, 95, 138, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 183, 184, 197, 200, 208, 209, 210, 240, 245, 248], "polici": [0, 72, 83, 87, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 189, 198, 202, 204, 205, 209, 217, 223, 240, 243, 245], "team": [0, 72, 85, 87, 95, 144, 145, 146, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 162, 200, 205, 208, 209, 216, 218, 232, 233, 235, 236, 246], "thread": [0, 1, 72, 74, 79, 81, 85, 87, 88, 93, 94, 95, 133, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 162, 165, 172, 175, 176, 177, 196, 198, 199, 200, 204, 206, 209, 210, 213, 214, 221, 222, 236, 243, 246, 248], "level": [0, 87, 95, 153, 155, 156, 197, 198, 203, 206, 209, 213, 214, 215, 221, 223, 236], "std": [0, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 87, 88, 89, 92, 93, 95, 100, 101, 102, 103, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 128, 131, 133, 134, 137, 142, 143, 147, 148, 149, 150, 152, 158, 160, 162, 163, 164, 165, 166, 167, 171, 175, 177, 178, 180, 181, 182, 188, 189, 190, 193, 194, 195, 207, 211, 212, 213, 217, 223, 244], "header": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 89, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 198, 219, 222, 227, 229, 235, 244, 247], "file": [1, 4, 11, 22, 23, 24, 30, 31, 34, 38, 42, 47, 48, 53, 54, 55, 56, 61, 62, 67, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 167, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 204, 219, 220, 222, 224, 227, 229, 235, 240, 247], "kokkos_cor": [1, 2, 76, 88, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 197, 202, 204, 207, 217, 223, 227, 229, 242, 247], "hpp": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 88, 89, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 197, 202, 204, 207, 211, 217, 223, 227, 229, 239, 240, 242, 244, 247], "kokkos_random": [1, 2, 217], "templat": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 84, 85, 87, 89, 93, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 138, 139, 140, 143, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 171, 174, 177, 178, 180, 181, 182, 186, 187, 188, 189, 190, 191, 197, 198, 200, 201, 202, 203, 205, 209, 211, 213, 216, 223, 229, 239, 240, 242], "class": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 92, 93, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 133, 134, 136, 138, 139, 143, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 223, 229, 230, 241, 244, 245], "struct": [1, 2, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 35, 36, 39, 40, 41, 42, 45, 46, 48, 51, 52, 56, 67, 69, 70, 71, 72, 81, 84, 95, 117, 120, 121, 123, 126, 131, 132, 134, 136, 139, 144, 145, 146, 148, 149, 154, 166, 167, 180, 183, 184, 197, 200, 201, 202, 203, 205, 209, 213, 217, 223, 239, 244, 246], "gen_data_typ": 1, "kokkos_inline_funct": [1, 2, 4, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 35, 36, 39, 40, 41, 42, 45, 46, 51, 52, 56, 70, 71, 75, 77, 79, 81, 82, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 148, 149, 155, 171, 183, 184, 185, 201, 202, 203, 205, 209, 213, 241], "static": [1, 74, 75, 76, 77, 85, 87, 117, 138, 152, 156, 166, 183, 184, 185, 189, 193, 194, 201, 203, 206, 207, 213, 214, 217, 223, 229, 248], "gen_func_typ": 1, "max": [1, 72, 74, 88, 104, 107, 109, 115, 118, 119, 120, 121, 123, 124, 126, 143, 149, 157, 159, 161, 174, 196, 200, 203, 209, 211, 217, 222, 247], "return": [1, 2, 27, 38, 42, 62, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 88, 95, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 130, 131, 133, 134, 135, 136, 139, 143, 148, 152, 154, 155, 156, 158, 160, 162, 164, 165, 166, 167, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 188, 189, 190, 193, 194, 195, 196, 197, 201, 202, 203, 205, 207, 208, 211, 213, 217, 227, 229, 238, 239, 240, 241, 242, 243, 246], "type_valu": 1, "draw": [1, 72], "gen": [1, 193, 194], "gen_return_valu": 1, "const": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 131, 133, 134, 136, 138, 139, 141, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 200, 201, 202, 203, 205, 207, 209, 211, 212, 217, 229, 239, 240, 241, 243, 245], "rang": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 95, 148, 149, 150, 153, 154, 157, 158, 159, 160, 161, 162, 166, 174, 188, 203, 208, 209, 212, 213, 235, 236, 240], "start": [1, 24, 50, 51, 60, 66, 69, 71, 72, 74, 82, 95, 131, 134, 139, 140, 148, 149, 150, 152, 153, 154, 156, 163, 164, 179, 193, 197, 200, 203, 204, 205, 209, 213, 214, 221, 222, 232, 236, 239, 241, 243, 246], "end": [1, 2, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 78, 80, 82, 86, 134, 135, 136, 140, 149, 150, 152, 153, 154, 156, 158, 160, 162, 163, 164, 166, 198, 204, 207, 213, 224, 227, 239, 240, 246, 247], "function": [1, 2, 4, 30, 33, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 95, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 128, 129, 130, 135, 136, 137, 140, 141, 143, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 162, 171, 174, 175, 177, 178, 179, 180, 181, 185, 190, 197, 198, 201, 202, 203, 204, 205, 206, 210, 211, 212, 219, 222, 226, 232, 238, 239, 240, 241, 243, 245], "special": [1, 39, 40, 41, 72, 75, 76, 84, 87, 96, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 166, 180, 181, 189, 190, 193, 194, 199, 201, 203, 209, 211, 212, 217, 223, 224, 229, 239, 244], "all": [1, 2, 12, 13, 21, 30, 33, 35, 47, 49, 52, 53, 54, 55, 56, 66, 70, 72, 74, 76, 77, 78, 86, 87, 93, 95, 97, 123, 134, 135, 137, 138, 139, 140, 141, 147, 148, 151, 152, 155, 156, 180, 182, 185, 188, 189, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 219, 221, 222, 223, 224, 228, 232, 234, 235, 236, 240, 242, 246], "list": [1, 2, 72, 82, 98, 142, 143, 152, 166, 188, 190, 191, 196, 204, 206, 208, 213, 214, 222, 224, 227, 228, 232, 233, 234, 235, 236, 240, 241, 246], "here": [1, 39, 40, 41, 72, 84, 87, 131, 135, 136, 139, 151, 152, 153, 154, 156, 164, 196, 203, 204, 207, 208, 209, 211, 213, 216, 223, 228, 235, 236, 241, 243], "ar": [1, 2, 4, 13, 14, 19, 21, 26, 27, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 53, 59, 60, 61, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 87, 88, 90, 95, 98, 101, 102, 109, 118, 119, 123, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 161, 166, 172, 173, 174, 175, 176, 180, 181, 182, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 222, 223, 224, 227, 228, 230, 232, 233, 234, 235, 236, 238, 239, 241, 243, 245, 246, 247], "part": [1, 72, 83, 87, 98, 123, 131, 139, 155, 171, 173, 196, 197, 198, 205, 206, 210, 211, 213, 219, 223, 224, 232, 234, 236, 245], "kokko": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 92, 93, 94, 96, 97, 98, 100, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 161, 163, 164, 165, 166, 170, 174, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 212, 216, 218, 219, 220, 222, 223, 224, 226, 227, 229, 233, 237, 238, 241, 242, 243, 244, 245, 248], "namespac": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 84, 87, 140, 141, 142, 143, 165, 169, 173, 174, 193, 194, 195, 197, 201, 202, 205, 212, 213, 223], "char": [1, 2, 76, 86, 87, 117, 123, 131, 134, 135, 136, 137, 138, 139, 148, 149, 150, 166, 168, 170, 175, 177, 182, 185, 189, 193, 194, 195, 201, 202, 204, 207, 213, 227, 229, 234, 244], "short": [1, 209], "127": 1, "0xff": 1, "256": [1, 211, 246], "32767": 1, "0xffff": 1, "65536": 1, "32768": 1, "int": [1, 2, 4, 21, 25, 28, 30, 35, 42, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 117, 123, 131, 132, 133, 134, 135, 136, 137, 138, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 170, 172, 175, 176, 177, 180, 182, 185, 188, 189, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 207, 209, 211, 213, 217, 227, 229, 238, 240, 241, 242, 243, 244, 245, 246], "max_rand": 1, "uint": 1, "max_urand": 1, "long": [1, 81, 87, 123, 138, 142, 166, 198, 206, 208, 209, 213, 219, 232], "max_rand64": 1, "ulong": 1, "max_urand64": 1, "float": [1, 75, 82, 141, 142, 143, 166, 167, 183, 184, 185, 193, 208, 209, 211, 241, 244], "1": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 106, 112, 117, 122, 123, 132, 133, 134, 136, 138, 140, 148, 149, 150, 153, 155, 156, 158, 160, 162, 164, 165, 166, 167, 170, 171, 172, 175, 176, 178, 182, 185, 188, 189, 193, 194, 195, 199, 201, 202, 207, 211, 214, 222, 223, 224, 226, 227, 228, 229, 234, 236, 238, 239, 240, 241, 246, 248], "0f": [1, 166, 167], "doubl": [1, 4, 23, 24, 39, 40, 41, 53, 56, 76, 77, 78, 79, 80, 86, 95, 117, 131, 134, 135, 136, 138, 142, 147, 149, 158, 160, 162, 166, 169, 171, 179, 180, 188, 189, 193, 194, 195, 196, 200, 203, 205, 209, 211, 212, 213, 229, 238, 239, 240, 241, 242, 243], "0": [1, 2, 11, 18, 21, 24, 35, 56, 72, 74, 75, 76, 77, 78, 79, 80, 82, 87, 88, 95, 110, 111, 113, 117, 123, 125, 131, 133, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 170, 171, 175, 182, 183, 184, 185, 188, 189, 193, 194, 195, 196, 198, 200, 201, 202, 203, 205, 207, 209, 210, 211, 213, 214, 222, 223, 224, 227, 228, 229, 234, 238, 239, 240, 241, 242, 243, 245, 246], "complex": [1, 72, 82, 87, 88, 97, 123, 198, 199, 200, 203, 207, 208, 211, 217, 219, 221, 223, 228], "where": [1, 2, 4, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 40, 42, 45, 46, 51, 52, 55, 56, 67, 69, 70, 71, 76, 77, 81, 87, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 131, 139, 148, 149, 157, 161, 165, 170, 182, 189, 190, 197, 198, 199, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 222, 224, 228, 232, 236, 238, 239, 240, 243, 244, 245, 246], "maximum": [1, 3, 72, 77, 78, 82, 97, 104, 106, 107, 109, 114, 115, 118, 119, 120, 121, 131, 138, 156, 200, 203], "valu": [1, 2, 4, 11, 22, 23, 24, 27, 30, 34, 48, 55, 56, 62, 67, 69, 72, 75, 76, 77, 78, 79, 81, 82, 84, 87, 88, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 131, 133, 136, 138, 139, 140, 143, 148, 149, 150, 152, 154, 155, 156, 158, 160, 162, 166, 167, 170, 174, 178, 181, 182, 188, 189, 190, 195, 196, 199, 200, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 217, 222, 223, 227, 241, 244], "xorshift": 1, "given": [1, 4, 12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 70, 71, 75, 78, 79, 81, 84, 85, 87, 93, 95, 104, 106, 107, 123, 130, 131, 140, 149, 150, 155, 156, 166, 173, 174, 180, 182, 185, 198, 203, 204, 205, 209, 210, 211, 212, 213, 214, 235, 241, 245, 246], "follow": [1, 32, 33, 37, 39, 40, 41, 75, 76, 77, 78, 79, 81, 86, 87, 88, 90, 92, 93, 98, 123, 131, 139, 142, 155, 181, 182, 189, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 209, 211, 212, 213, 214, 217, 218, 222, 223, 224, 227, 228, 230, 234, 236, 238], "enum": [1, 131, 139, 166, 213], "0xffffffffu": 1, "0xffffffffffffffffull": 1, "static_cast": [1, 35, 138, 207], "2": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 82, 84, 88, 117, 123, 132, 136, 138, 150, 152, 155, 157, 159, 161, 165, 166, 167, 168, 170, 177, 178, 182, 185, 186, 187, 188, 189, 193, 197, 199, 200, 202, 211, 222, 223, 224, 226, 227, 228, 229, 234, 236, 246, 248], "int64_t": [1, 78, 150, 152, 154, 193, 194], "provid": [1, 36, 39, 40, 41, 72, 75, 76, 77, 78, 80, 84, 87, 89, 92, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 129, 131, 134, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 154, 155, 156, 163, 164, 165, 167, 174, 178, 181, 182, 183, 184, 185, 189, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 221, 222, 224, 232, 233, 234, 235, 236, 239, 240, 244, 246], "structur": [1, 4, 72, 76, 95, 98, 133, 166, 189, 204, 208, 210, 212, 213, 237, 238, 240, 241, 245, 246, 248], "necessari": [1, 75, 76, 87, 92, 95, 148, 189, 198, 199, 203, 205, 207, 209, 213, 214, 232, 236, 238, 241], "pseudorandom": 1, "These": [1, 2, 76, 87, 88, 138, 139, 154, 155, 189, 193, 195, 197, 200, 203, 206, 208, 210, 212, 213, 222, 228, 232, 234, 235, 236, 239], "base": [1, 36, 40, 76, 77, 81, 82, 84, 87, 95, 133, 152, 163, 164, 193, 194, 197, 198, 203, 204, 206, 207, 209, 211, 212, 213, 222, 224, 232, 233, 235, 236, 240, 241, 244, 245, 246, 248], "vigna": 1, "sebastiano": 1, "2014": [1, 208, 215], "an": [1, 2, 4, 11, 13, 14, 18, 20, 22, 24, 25, 28, 29, 33, 34, 43, 44, 58, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 83, 85, 87, 93, 95, 109, 117, 123, 125, 129, 131, 135, 136, 139, 140, 142, 147, 148, 149, 150, 152, 154, 155, 156, 159, 164, 165, 166, 167, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 216, 217, 219, 221, 223, 224, 232, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247], "experiment": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 87, 88, 97, 129, 130, 131, 139, 140, 141, 142, 143, 165, 192, 197, 203, 204, 211, 217, 222, 223, 228, 236, 238], "explor": [1, 87, 206, 219, 222, 232], "marsaglia": 1, "s": [1, 21, 75, 77, 79, 81, 87, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 131, 133, 149, 155, 166, 167, 169, 180, 182, 188, 189, 190, 198, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 219, 224, 227, 229, 232, 236, 241, 243, 244, 245], "scrambl": 1, "see": [1, 75, 76, 86, 87, 88, 91, 92, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 139, 140, 143, 148, 149, 151, 154, 155, 156, 163, 164, 165, 172, 175, 176, 189, 198, 200, 202, 203, 207, 208, 209, 212, 213, 214, 216, 222, 223, 227, 228, 230, 236], "http": [1, 84, 142, 215, 221, 223, 224, 227, 234], "arxiv": 1, "org": [1, 84, 142, 198, 215, 224], "ab": [1, 142, 193], "1402": 1, "6246": 1, "The": [1, 2, 4, 11, 12, 13, 14, 16, 19, 20, 21, 22, 26, 27, 30, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 89, 90, 92, 95, 98, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 130, 131, 133, 135, 136, 137, 139, 141, 142, 148, 149, 150, 151, 152, 154, 155, 156, 161, 163, 164, 165, 166, 170, 171, 174, 177, 181, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 218, 219, 222, 223, 224, 227, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247], "themselv": [1, 95, 208, 209, 210, 232], "have": [1, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 57, 58, 59, 60, 63, 65, 69, 70, 71, 75, 78, 81, 82, 87, 88, 92, 95, 123, 131, 133, 134, 143, 147, 148, 150, 155, 157, 158, 159, 160, 181, 185, 186, 187, 189, 190, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 222, 223, 224, 227, 228, 232, 234, 235, 236, 238, 241, 244, 245, 246], "two": [1, 2, 11, 12, 21, 22, 26, 27, 34, 36, 39, 40, 41, 42, 46, 48, 65, 69, 75, 77, 78, 81, 87, 95, 123, 131, 133, 136, 139, 140, 154, 165, 182, 196, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 224, 229, 232, 233, 235, 236, 238, 239, 240, 241, 247], "compon": [1, 171, 185, 208, 231, 235], "state": [1, 72, 75, 81, 87, 135, 203, 209, 211, 213, 222, 224], "pool": [1, 72, 203, 213, 223], "actual": [1, 77, 101, 131, 139, 151, 154, 155, 156, 189, 196, 203, 205, 207, 208, 209, 210, 213, 214, 222, 227, 234, 235, 236], "A": [1, 2, 22, 34, 41, 48, 69, 72, 73, 75, 76, 77, 78, 79, 81, 88, 93, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 129, 134, 144, 145, 146, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 162, 166, 169, 180, 181, 182, 183, 184, 185, 188, 189, 196, 198, 199, 200, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 222, 223, 224, 229, 232, 236, 239, 243, 245, 246], "manag": [1, 72, 73, 75, 76, 79, 81, 83, 86, 87, 98, 129, 130, 138, 163, 189, 190, 198, 208, 214, 217, 221, 222, 224, 233, 241, 248], "so": [1, 2, 82, 87, 92, 95, 131, 154, 189, 196, 197, 198, 203, 204, 205, 207, 208, 209, 211, 212, 213, 216, 228, 233, 234, 236, 239, 243], "each": [1, 2, 4, 11, 23, 30, 31, 32, 33, 62, 67, 68, 69, 72, 75, 76, 78, 82, 85, 87, 95, 142, 148, 149, 156, 157, 159, 161, 165, 166, 167, 183, 184, 185, 189, 196, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 224, 230, 232, 234, 235, 236, 238, 240, 241, 244, 246], "activ": [1, 23, 24, 53, 56, 88, 198, 203, 209, 214, 219, 222, 236], "abl": [1, 76, 95, 131, 139, 189, 190, 196, 203, 206, 208, 211, 213, 217, 241], "grab": 1, "its": [1, 4, 72, 75, 76, 77, 81, 87, 95, 101, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 133, 134, 140, 155, 165, 166, 167, 170, 186, 189, 190, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 224, 232, 233, 235, 236, 238, 245], "own": [1, 75, 165, 166, 189, 196, 212, 213, 214, 224, 227, 232, 234, 241], "thi": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 75, 76, 77, 79, 81, 82, 87, 88, 92, 95, 123, 131, 134, 135, 136, 138, 139, 142, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 171, 178, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 219, 221, 222, 223, 224, 227, 228, 230, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "allow": [1, 75, 76, 78, 79, 81, 82, 86, 87, 95, 131, 133, 136, 139, 149, 151, 155, 156, 157, 159, 161, 166, 181, 183, 184, 185, 189, 190, 196, 197, 198, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 222, 232, 235, 242, 243, 245], "which": [1, 2, 17, 20, 28, 29, 37, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 83, 84, 86, 87, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 129, 131, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 163, 165, 166, 177, 178, 181, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 222, 224, 227, 232, 233, 236, 239, 241, 242, 243, 244, 245], "independ": [1, 72, 139, 156, 181, 209, 213, 232, 236, 248], "between": [1, 11, 21, 37, 54, 65, 69, 72, 76, 81, 82, 93, 98, 155, 165, 174, 181, 182, 189, 197, 198, 203, 206, 207, 208, 211, 213, 217, 223, 229, 232, 234, 240, 241, 242, 243], "note": [1, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 76, 77, 78, 82, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 138, 147, 148, 154, 155, 156, 165, 182, 189, 196, 198, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 222, 223, 232, 236, 239, 243, 246], "contrast": [1, 140, 153, 158, 160, 162, 170, 203, 213, 232], "curand": 1, "none": [1, 4, 23, 32, 53, 56, 57, 128, 144, 145, 146, 194, 198, 206, 207, 208, 217, 236, 239], "collect": [1, 155, 203, 206, 209, 210, 212, 232, 236, 241, 244], "i": [1, 2, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 115, 117, 119, 120, 123, 126, 128, 129, 130, 131, 138, 147, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 170, 177, 181, 182, 185, 186, 187, 189, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 208, 210, 211, 212, 220, 224, 227, 228, 229, 232, 236, 240, 241, 243, 245], "e": [1, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 75, 76, 79, 85, 87, 88, 93, 123, 128, 129, 130, 131, 133, 135, 138, 139, 141, 143, 147, 149, 150, 151, 155, 156, 157, 158, 159, 160, 164, 166, 181, 182, 186, 187, 189, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 219, 222, 227, 228, 229, 232, 234, 235, 236, 242], "can": [1, 2, 4, 11, 22, 25, 28, 30, 39, 40, 41, 42, 69, 72, 76, 77, 78, 81, 84, 85, 87, 88, 95, 123, 131, 132, 133, 136, 138, 139, 143, 148, 149, 152, 153, 154, 155, 156, 161, 162, 166, 181, 185, 186, 187, 189, 190, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 219, 220, 221, 222, 223, 227, 230, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 245], "call": [1, 2, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 33, 35, 36, 40, 42, 45, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 74, 75, 77, 79, 81, 85, 86, 87, 90, 95, 101, 103, 106, 123, 129, 130, 131, 133, 134, 135, 136, 137, 138, 142, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 175, 177, 178, 179, 180, 181, 182, 186, 187, 189, 190, 193, 194, 195, 196, 198, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 223, 227, 236, 239, 241, 243], "insid": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 81, 85, 87, 95, 138, 147, 148, 149, 150, 153, 157, 158, 159, 160, 161, 162, 173, 190, 197, 198, 203, 205, 207, 208, 209, 213, 245, 246, 247], "condit": [1, 13, 14, 20, 30, 53, 76, 170, 189, 196, 203, 205, 208, 209, 224, 235, 243], "devic": [1, 72, 74, 75, 76, 80, 81, 82, 88, 93, 131, 133, 138, 139, 141, 142, 167, 170, 172, 175, 176, 181, 182, 189, 198, 204, 205, 206, 209, 213, 214, 223, 235, 236, 237, 241, 242], "public": [1, 75, 76, 77, 79, 81, 82, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 131, 138, 139, 149, 153, 155, 156, 158, 160, 162, 166, 171, 173, 185, 195, 197, 202, 207, 209, 216, 229, 232, 241, 245], "typedef": [1, 75, 76, 77, 79, 81, 82, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 153, 155, 156, 158, 160, 162, 171, 179, 183, 184, 185, 197, 200, 201, 202, 203, 205, 209, 213, 239, 243], "device_typ": [1, 75, 76, 77, 81, 87, 131, 139, 181, 189, 213], "generator_typ": 1, "rannum_typ": 1, "seed": [1, 72], "void": [1, 2, 4, 23, 30, 32, 53, 56, 57, 74, 75, 77, 80, 81, 82, 84, 85, 87, 88, 95, 100, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 137, 138, 139, 141, 142, 147, 148, 149, 150, 155, 163, 164, 165, 166, 168, 170, 171, 177, 178, 179, 182, 186, 187, 189, 193, 195, 196, 197, 202, 203, 205, 207, 209, 211, 213, 217, 223, 229, 239, 241, 242, 243, 245, 246], "init": [1, 22, 34, 67, 72, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 149, 150, 166, 202, 241], "num_stat": 1, "get_stat": 1, "free_stat": 1, "initi": [1, 2, 22, 34, 48, 67, 69, 72, 75, 76, 82, 83, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 132, 133, 134, 135, 137, 148, 149, 150, 166, 167, 170, 171, 172, 175, 176, 177, 182, 185, 189, 190, 193, 194, 195, 198, 199, 201, 202, 203, 205, 207, 208, 209, 223, 226, 227, 229, 232, 234, 236, 242, 243], "us": [1, 2, 4, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 93, 95, 100, 102, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 172, 175, 176, 180, 181, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 217, 219, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 241, 243, 244, 245, 247], "establish": [1, 236, 240], "pool_siz": [1, 217], "random_xorshift64": [1, 72], "serial": [1, 72, 85, 87, 88, 94, 190, 198, 204, 206, 207, 209, 211, 213, 217, 228, 234, 236], "make": [1, 75, 76, 87, 95, 140, 150, 155, 174, 189, 196, 197, 198, 200, 203, 208, 209, 211, 214, 216, 219, 223, 224, 227, 232, 234, 239, 241, 242, 245], "process": [1, 89, 139, 198, 204, 210, 211, 212, 213, 214, 221, 231, 236], "platform": [1, 83, 193, 194, 221, 227, 233, 235, 244], "determinist": [1, 48, 69, 210], "request": [1, 75, 77, 131, 144, 145, 146, 149, 155, 156, 203, 204, 208, 210, 216, 219, 222, 223, 232, 233, 234, 236], "lock": [1, 205, 208, 210, 211, 213], "guarante": [1, 75, 76, 79, 93, 95, 131, 139, 148, 149, 150, 173, 181, 189, 197, 198, 205, 208, 209, 210, 211, 242, 246], "ha": [1, 75, 76, 78, 79, 81, 87, 88, 95, 101, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 136, 138, 139, 142, 148, 149, 150, 151, 164, 181, 189, 193, 194, 196, 198, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 223, 224, 232, 235, 236, 238, 239, 245, 246], "privat": [1, 79, 87, 155, 171, 197, 199, 202, 203, 209, 222, 232, 241], "get": [1, 75, 87, 95, 98, 135, 155, 156, 166, 185, 196, 203, 204, 205, 207, 208, 211, 212, 214, 216, 222, 232, 234, 244, 246], "cuda": [1, 72, 75, 85, 87, 88, 94, 138, 139, 152, 154, 156, 165, 182, 203, 204, 206, 207, 209, 210, 211, 213, 217, 221, 222, 228, 234, 235, 236, 242, 243], "involv": [1, 87, 151, 213, 235, 240], "atom": [1, 72, 76, 81, 83, 100, 101, 102, 103, 104, 105, 106, 107, 108, 189, 203, 205, 208, 210, 222, 226, 246, 248], "non": [1, 3, 18, 24, 33, 36, 37, 48, 63, 64, 69, 72, 73, 75, 76, 77, 79, 80, 81, 82, 87, 95, 103, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 136, 138, 140, 156, 163, 164, 182, 189, 195, 196, 198, 203, 208, 209, 210, 211, 213, 217, 222, 224, 234, 243, 245], "upon": [1, 84, 87, 131, 147, 164, 197, 206, 219, 232], "complet": [1, 77, 95, 131, 147, 198, 199, 203, 208, 213, 214, 227, 232, 236, 243, 246], "unlock": 1, "updat": [1, 72, 75, 82, 104, 106, 107, 181, 196, 198, 203, 209, 213, 228, 232, 234, 236, 241, 243, 246], "statu": [1, 219], "onc": [1, 72, 95, 135, 136, 203, 204, 210, 213, 214, 222, 232, 241, 243], "again": [1, 87, 198, 205, 213, 214, 222, 236], "becom": [1, 59, 60, 79, 95, 139, 208, 232, 236, 240], "avail": [1, 74, 77, 81, 82, 87, 88, 98, 131, 133, 138, 139, 140, 141, 142, 143, 152, 156, 170, 172, 174, 175, 176, 189, 193, 194, 195, 198, 203, 204, 206, 208, 209, 211, 213, 214, 217, 222, 224, 227, 232, 235, 236, 238, 240, 241], "within": [1, 2, 4, 79, 82, 93, 131, 136, 138, 148, 149, 150, 152, 155, 198, 203, 207, 208, 210, 213, 224, 227, 239, 240, 241], "select": [1, 72, 74, 92, 133, 169, 188, 195, 204, 206, 208, 213, 228, 232, 235, 236, 246], "from": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 92, 93, 95, 98, 100, 101, 102, 103, 105, 108, 120, 121, 123, 126, 131, 132, 133, 136, 138, 139, 140, 141, 142, 143, 148, 149, 150, 152, 154, 155, 156, 166, 167, 170, 171, 174, 177, 178, 180, 181, 182, 185, 189, 190, 191, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 223, 224, 227, 228, 232, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246], "next": [1, 227, 232, 234, 236, 243, 246], "step": [1, 4, 203, 205, 206, 211, 213, 232, 234, 235, 236, 241], "develop": [1, 88, 92, 148, 203, 206, 208, 210, 213, 216, 219, 221, 223, 227, 228, 233, 234, 235, 236], "functor": [1, 2, 11, 12, 13, 14, 20, 21, 22, 26, 27, 30, 31, 32, 33, 34, 36, 37, 40, 42, 45, 48, 67, 69, 85, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 138, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 193, 194, 203, 205, 207, 208, 213, 240, 241, 243, 245], "desir": [1, 13, 14, 20, 48, 67, 69, 77, 100, 101, 102, 103, 108, 150, 165, 181, 198, 209, 213, 219, 232, 234, 235, 236], "type": [1, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 35, 36, 40, 45, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 93, 95, 96, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 129, 131, 133, 139, 140, 142, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 169, 171, 177, 180, 181, 182, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 221, 223, 224, 226, 229, 234, 236, 239, 240, 241, 244], "devicetyp": [1, 131, 139], "respect": [1, 21, 26, 27, 76, 123, 142, 174, 181, 182, 186, 187, 189, 200, 203, 208, 213, 223, 224, 227], "x": [1, 72, 141, 142, 185, 186, 187, 193, 195, 200, 205, 209, 211, 213, 222, 229, 239, 243], "idx": [1, 239], "just": [1, 2, 75, 87, 88, 95, 131, 139, 151, 178, 182, 185, 196, 204, 209, 211, 213, 214, 216, 219, 222, 234, 238, 241], "give": [1, 88, 95, 197, 204, 205, 209, 210, 211, 213, 219, 223, 224, 234], "argument": [1, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 35, 36, 40, 45, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 75, 76, 77, 79, 88, 93, 95, 98, 103, 105, 131, 132, 133, 134, 136, 142, 147, 149, 150, 153, 154, 155, 156, 158, 160, 162, 170, 180, 181, 182, 188, 189, 190, 193, 194, 195, 197, 202, 203, 209, 212, 213, 217, 219, 223, 227, 240, 242], "state_argu": 1, "state_idx": 1, "equidistribut": 1, "uint32_t": [1, 81, 193, 194, 217], "urand": 1, "For": [1, 2, 37, 75, 76, 81, 95, 123, 131, 134, 139, 140, 143, 154, 157, 159, 161, 165, 182, 188, 189, 193, 195, 196, 197, 198, 199, 200, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 221, 222, 223, 224, 227, 230, 232, 236, 240, 241, 242], "32": [1, 2, 131, 203, 205, 213, 236], "bit": [1, 72, 74, 87, 89, 131, 189, 194, 207, 209, 211, 212, 213], "unsign": [1, 74, 75, 76, 77, 80, 104, 107, 131, 140, 189, 212, 213, 242], "integ": [1, 59, 60, 75, 76, 81, 85, 88, 95, 131, 140, 142, 154, 188, 189, 203, 209, 211, 213, 227, 239], "three": [1, 75, 87, 88, 142, 147, 196, 197, 198, 203, 206, 208, 209, 211, 213, 214, 232, 235, 240], "option": [1, 72, 75, 76, 81, 85, 95, 123, 131, 133, 148, 149, 150, 152, 189, 190, 197, 198, 200, 203, 204, 205, 206, 209, 213, 214, 227, 232, 234, 235, 236, 240, 242, 244, 245], "shown": [1, 55, 87, 123, 181, 203, 208, 240], "first": [1, 4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 74, 75, 76, 79, 84, 87, 93, 95, 129, 131, 136, 155, 165, 166, 167, 183, 188, 189, 193, 194, 195, 198, 200, 203, 205, 207, 208, 209, 213, 216, 217, 219, 227, 232, 239, 240, 243], "default": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 84, 85, 88, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 130, 132, 133, 138, 139, 144, 145, 146, 149, 150, 152, 154, 155, 156, 166, 167, 171, 179, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 209, 214, 217, 219, 222, 223, 229, 232, 236, 240, 244], "over": [1, 34, 48, 67, 68, 72, 81, 85, 87, 95, 131, 152, 153, 155, 157, 158, 159, 160, 161, 162, 193, 194, 196, 200, 203, 209, 211, 212, 213, 214, 219, 235, 238, 240, 245], "possibl": [1, 11, 17, 22, 28, 29, 30, 35, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 76, 82, 87, 95, 134, 149, 156, 189, 197, 204, 205, 207, 209, 210, 211, 212, 213, 219, 223, 224, 228, 232, 235, 241], "data": [1, 72, 74, 75, 76, 77, 79, 80, 81, 82, 95, 98, 131, 132, 133, 138, 147, 166, 167, 171, 177, 181, 182, 196, 200, 203, 204, 206, 207, 208, 209, 210, 211, 212, 221, 222, 224, 229, 232, 238, 239, 240, 241, 243, 244, 245, 246, 248], "defin": [1, 21, 33, 42, 65, 72, 76, 78, 83, 87, 88, 93, 98, 100, 101, 102, 103, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 152, 154, 155, 158, 160, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 189, 190, 191, 193, 194, 198, 201, 202, 203, 205, 208, 209, 213, 217, 224, 235, 236, 238, 239, 244, 247], "abov": [1, 86, 131, 140, 142, 196, 198, 203, 206, 207, 209, 211, 212, 213, 224, 227, 236, 240, 241, 246], "And": [1, 72, 109, 205, 215, 245], "also": [1, 11, 17, 25, 28, 29, 30, 35, 42, 46, 51, 52, 56, 70, 71, 75, 76, 77, 78, 81, 84, 87, 95, 123, 131, 138, 139, 143, 148, 149, 155, 156, 163, 164, 167, 172, 175, 176, 185, 189, 196, 197, 198, 199, 200, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 222, 228, 232, 233, 234, 235, 236, 240, 243, 245], "64": [1, 2, 131, 209, 211, 213, 222], "latter": [1, 95, 149, 189, 203, 208, 213, 236], "cover": [1, 76, 189, 209, 234, 235], "user": [1, 36, 39, 40, 41, 75, 76, 77, 81, 87, 90, 95, 129, 131, 132, 135, 136, 138, 148, 149, 150, 152, 156, 163, 164, 189, 191, 198, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 222, 223, 227, 232, 235, 241, 242, 246, 247], "more": [1, 76, 77, 78, 87, 95, 123, 134, 139, 148, 151, 164, 189, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 222, 223, 224, 227, 240, 245, 246], "other": [1, 46, 75, 76, 77, 78, 82, 87, 93, 95, 136, 139, 148, 149, 150, 155, 157, 158, 159, 160, 165, 170, 181, 182, 183, 184, 185, 196, 198, 203, 205, 207, 208, 209, 210, 211, 212, 214, 219, 221, 222, 224, 227, 228, 229, 232, 234, 236, 239, 241, 242, 245], "scalar": [1, 75, 76, 77, 78, 82, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 149, 171, 182, 189, 193, 194, 196, 199, 200, 202, 203, 205, 209, 223], "uint64_t": [1, 193, 194], "int32_t": [1, 193, 194, 195], "normal": [1, 72, 196, 198, 209, 213, 224, 236], "distribut": [1, 72, 206, 212, 215, 222, 224, 236, 241], "view": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 93, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 131, 134, 135, 136, 149, 150, 155, 169, 180, 181, 183, 184, 185, 186, 187, 188, 190, 196, 198, 200, 202, 203, 204, 206, 208, 209, 211, 217, 222, 223, 226, 227, 229, 236, 238, 239, 240, 241, 242, 243, 248], "fill": [1, 6, 21, 24, 25, 28, 30, 35, 39, 40, 42, 193, 194, 200, 203, 205, 209, 213, 227], "includ": [1, 2, 22, 34, 67, 68, 76, 77, 87, 88, 95, 100, 101, 102, 103, 105, 108, 117, 123, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 147, 148, 149, 150, 164, 166, 168, 170, 174, 175, 177, 178, 181, 182, 185, 186, 187, 189, 190, 191, 193, 194, 195, 197, 198, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 221, 223, 224, 227, 229, 232, 234, 235, 236, 239, 242, 244, 247], "main": [1, 2, 76, 86, 88, 98, 117, 123, 132, 133, 134, 135, 136, 137, 138, 148, 149, 150, 166, 170, 173, 175, 177, 182, 185, 189, 193, 194, 195, 198, 201, 202, 204, 207, 211, 213, 214, 227, 229, 232, 239, 242, 243], "argc": [1, 2, 76, 86, 117, 123, 133, 134, 135, 136, 137, 138, 148, 149, 150, 166, 170, 175, 177, 182, 185, 189, 193, 194, 195, 201, 202, 204, 207, 227, 229], "argv": [1, 2, 76, 86, 117, 123, 133, 134, 135, 136, 137, 138, 148, 149, 150, 166, 170, 175, 177, 182, 185, 189, 193, 194, 195, 201, 202, 204, 207, 227, 229], "scopeguard": [1, 72, 136, 138, 166, 217], "guard": [1, 134], "random_xorshift64_pool": [1, 2, 72], "random_pool": 1, "12345": 1, "total": [1, 77, 87, 156, 189, 196, 201, 202, 203, 204, 240], "1000000": [1, 182], "count": [1, 7, 33, 62, 74, 76, 77, 87, 95, 138, 140, 148, 149, 150, 153, 158, 160, 162, 189, 196, 203, 209, 212, 245], "parallel_reduc": [1, 72, 79, 87, 90, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 138, 145, 147, 151, 153, 156, 157, 158, 159, 160, 161, 162, 200, 201, 202, 203, 209, 210, 217, 227, 240, 241, 242], "approximate_pi": 1, "kokkos_lambda": [1, 2, 76, 77, 79, 81, 117, 123, 131, 148, 149, 150, 151, 153, 155, 157, 158, 159, 160, 161, 162, 170, 177, 189, 196, 200, 201, 202, 203, 205, 207, 209, 213, 227, 229, 238, 239, 240, 241, 243, 245], "local_count": 1, "acquir": [1, 76, 87, 137, 189, 204, 205, 210, 213], "engin": [1, 198, 208, 210, 213, 215, 224], "auto": [1, 2, 4, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 78, 79, 81, 82, 95, 101, 103, 105, 133, 134, 138, 141, 143, 148, 149, 153, 156, 157, 158, 159, 160, 161, 162, 165, 166, 169, 181, 182, 188, 189, 195, 200, 203, 207, 211, 212, 223, 238, 239, 240, 246], "drand": 1, "y": [1, 193, 205, 211, 213, 239, 243], "do": [1, 2, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 75, 83, 87, 95, 131, 134, 135, 138, 139, 147, 151, 175, 189, 190, 196, 197, 198, 200, 203, 204, 208, 209, 210, 211, 212, 214, 216, 219, 220, 223, 224, 227, 232, 234, 239, 241, 242, 243, 245], "forget": 1, "releas": [1, 86, 87, 88, 135, 137, 177, 197, 198, 203, 206, 207, 208, 228, 233, 234, 236], "printf": [1, 95, 97, 117, 123, 138, 148, 149, 150, 185, 193, 194, 200, 201, 202, 207, 227], "pi": [1, 89, 141, 223], "f": [1, 87, 95, 138, 142, 155, 156, 167, 217, 234, 239, 240, 246], "n": [1, 2, 18, 24, 31, 63, 64, 74, 75, 77, 81, 82, 87, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 131, 137, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 175, 177, 178, 182, 185, 186, 187, 189, 193, 200, 201, 202, 203, 205, 207, 209, 211, 212, 213, 217, 221, 227, 242, 243, 245], "4": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 81, 82, 88, 95, 100, 102, 131, 132, 139, 140, 141, 142, 143, 153, 156, 157, 158, 159, 160, 161, 162, 164, 166, 168, 170, 172, 174, 175, 176, 177, 178, 185, 188, 189, 190, 197, 201, 202, 211, 212, 215, 222, 223, 224, 226, 227, 229, 232, 234, 236, 240, 242, 246, 248], "dstviewtyp": 2, "srcviewtyp": 2, "copy_functor": 2, "permuteviewtyp": 2, "copy_permute_functor": 2, "binsort": [2, 217], "valuesviewtyp": 2, "values_range_begin": 2, "values_range_end": 2, "keyviewtyp": 2, "binop1d": [2, 217], "binop3d": [2, 217], "viewtyp": [2, 75, 131, 180, 181, 188, 189, 213], "size_t": [2, 59, 60, 75, 76, 77, 78, 79, 82, 87, 129, 130, 138, 166, 178, 183, 184, 185, 186, 187, 189, 193, 194, 195, 203, 207, 209, 211, 212, 213, 239], "begin": [2, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 78, 80, 82, 87, 129, 130, 152, 153, 154, 156, 158, 160, 162, 166, 213, 232, 236, 239, 240, 247], "parallel": [2, 12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 77, 81, 83, 85, 87, 92, 93, 123, 131, 133, 138, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 190, 196, 198, 200, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 219, 221, 226, 238, 241, 243, 245, 246, 248], "teampolici": [2, 12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 70, 71, 72, 76, 85, 87, 95, 131, 144, 145, 146, 148, 149, 150, 153, 155, 157, 158, 159, 160, 161, 162, 189, 200, 203, 205, 209], "kernel": [2, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 79, 82, 85, 88, 95, 148, 154, 155, 156, 165, 177, 182, 189, 196, 198, 205, 207, 208, 209, 210, 213, 214, 221, 222, 223, 236, 242, 246, 248], "perform": [2, 4, 48, 67, 69, 76, 77, 79, 85, 88, 90, 95, 103, 110, 111, 112, 113, 122, 123, 125, 138, 149, 150, 155, 156, 177, 189, 190, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 213, 215, 222, 224, 229, 232, 233, 235, 239, 240, 244, 248], "teamthreadrang": [2, 72, 85, 87, 148, 149, 161, 162, 200, 203, 205], "threadvectorrang": [2, 72, 85, 87, 148, 149, 150, 203], "kokkos_nestedsort": 2, "teammemb": [2, 95, 156, 203], "sort_team": 2, "t": [2, 19, 23, 24, 25, 35, 53, 54, 55, 56, 72, 75, 84, 87, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 131, 138, 143, 147, 149, 150, 155, 156, 165, 166, 171, 178, 181, 186, 187, 189, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 209, 210, 211, 212, 214, 217, 219, 222, 223, 224, 227, 228, 232, 234, 246], "compar": [2, 12, 21, 26, 27, 36, 38, 39, 40, 41, 42, 61, 62, 76, 77, 88, 101, 102, 103, 133, 166, 189, 211, 213, 223, 228, 234, 236], "comp": [2, 36, 37, 38, 39, 40, 41], "valueviewtyp": 2, "sort_by_key_team": 2, "keyview": 2, "valueview": 2, "sort_thread": 2, "sort_by_key_thread": 2, "intern": [2, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 81, 82, 86, 87, 88, 133, 134, 152, 156, 198, 203, 204, 205, 217, 232, 240], "entir": [2, 75, 87, 138, 153, 185, 207, 209, 210, 212, 214, 232, 235, 236, 245], "thei": [2, 75, 78, 87, 88, 95, 131, 134, 135, 138, 139, 141, 148, 151, 154, 165, 182, 196, 197, 203, 204, 207, 209, 210, 211, 213, 219, 222, 228, 232, 233, 234, 235, 236, 238, 241, 245, 247], "mai": [2, 4, 75, 76, 77, 78, 79, 82, 87, 88, 95, 130, 131, 134, 135, 136, 138, 148, 149, 150, 156, 165, 168, 174, 175, 177, 181, 189, 190, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 216, 222, 223, 224, 227, 228, 230, 232, 234, 236, 240, 241, 243, 244, 245, 246], "top": [2, 95, 197, 198, 203, 224, 230, 236], "lambda": [2, 88, 95, 138, 147, 148, 149, 203, 205, 207, 222, 223, 239, 240, 245], "vector": [2, 72, 73, 85, 88, 148, 149, 150, 153, 156, 159, 160, 161, 162, 165, 193, 194, 195, 200, 209, 210, 213, 217, 222, 239, 244], "lane": [2, 72, 85, 153, 159, 160, 161, 162, 193, 203, 210, 211], "either": [2, 36, 39, 40, 41, 75, 76, 80, 81, 85, 95, 115, 117, 119, 133, 134, 148, 149, 155, 182, 186, 187, 189, 195, 197, 198, 201, 202, 203, 204, 209, 213, 214, 219, 224, 234, 236, 246, 247], "loop": [2, 85, 88, 95, 153, 154, 166, 190, 196, 205, 207, 208, 211, 213, 222, 238, 240, 243, 245, 248], "sort_by_kei": 2, "while": [2, 46, 72, 76, 87, 95, 139, 153, 181, 187, 189, 196, 197, 198, 199, 203, 205, 206, 207, 208, 211, 212, 213, 214, 224, 236], "simultan": [2, 196], "appli": [2, 11, 30, 31, 39, 40, 41, 66, 69, 87, 95, 149, 155, 196, 198, 201, 202, 207, 209, 224, 233], "same": [2, 17, 18, 24, 26, 27, 31, 34, 37, 39, 41, 47, 51, 52, 55, 56, 64, 67, 68, 75, 76, 77, 78, 81, 82, 84, 87, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 130, 131, 134, 136, 138, 142, 148, 149, 150, 155, 156, 157, 158, 159, 160, 165, 166, 178, 181, 182, 189, 196, 198, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 222, 234, 235, 236, 240, 241, 242, 244, 246], "permut": 2, "element": [2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 82, 123, 136, 149, 150, 165, 166, 167, 169, 174, 182, 183, 184, 185, 187, 189, 190, 203, 205, 210, 213, 227, 237, 240, 241, 244], "It": [2, 71, 75, 76, 77, 78, 87, 130, 131, 132, 133, 134, 138, 149, 150, 153, 175, 178, 189, 190, 193, 194, 196, 197, 198, 203, 205, 207, 208, 209, 211, 212, 213, 221, 222, 223, 224, 232, 236, 244, 245], "equival": [2, 39, 40, 41, 70, 71, 78, 93, 131, 138, 155, 188, 189, 203, 209, 211, 212, 213, 239, 244], "kei": [2, 81, 181, 211, 241], "tupl": [2, 152, 166, 223, 244], "accord": [2, 35, 87, 104, 106, 107, 148, 149, 150], "commonli": [2, 208], "entri": [2, 75, 77, 80, 95, 201, 202, 205, 209, 212, 227, 232, 238], "row": [2, 80, 200, 205, 212, 213], "cr": [2, 72, 80], "compress": [2, 80, 213, 241], "spars": [2, 213, 221, 235, 248], "matrix": [2, 200, 212, 213], "requir": [2, 75, 76, 77, 81, 88, 93, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 139, 140, 153, 157, 158, 159, 160, 161, 162, 166, 181, 189, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 214, 217, 219, 221, 222, 223, 224, 227, 231, 234, 236, 237, 240, 243, 244, 246], "extent": [2, 21, 75, 76, 77, 78, 80, 131, 157, 159, 161, 182, 183, 184, 185, 186, 187, 188, 189, 196, 209, 213, 229, 232, 238, 239, 245], "version": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 76, 84, 92, 131, 132, 133, 134, 136, 141, 142, 166, 168, 170, 174, 181, 189, 190, 197, 198, 207, 209, 211, 213, 214, 222, 223, 224, 227, 229, 232, 234, 235, 236], "take": [2, 76, 77, 78, 85, 87, 93, 95, 104, 106, 107, 131, 136, 139, 141, 149, 151, 156, 183, 184, 185, 196, 197, 202, 203, 204, 208, 209, 210, 211, 213, 217, 219, 223, 229, 234, 236, 238, 240, 243, 248], "object": [2, 11, 22, 30, 33, 75, 76, 79, 81, 86, 87, 88, 100, 101, 102, 103, 105, 108, 109, 133, 134, 135, 136, 137, 139, 140, 153, 155, 163, 164, 166, 185, 189, 190, 195, 198, 202, 204, 205, 207, 209, 211, 213, 217, 224, 245], "order": [2, 16, 36, 37, 41, 44, 49, 52, 57, 58, 74, 76, 85, 86, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 137, 148, 149, 150, 152, 153, 158, 160, 162, 185, 189, 196, 197, 201, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 219, 221, 223, 232, 235, 236, 238, 241, 242, 243, 245], "oper": [2, 4, 11, 12, 13, 14, 17, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 51, 52, 53, 54, 56, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 85, 95, 97, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 131, 134, 139, 142, 147, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 171, 182, 183, 184, 185, 189, 190, 191, 195, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 217, 223, 226, 227, 229, 236, 237, 241, 246, 248], "should": [2, 4, 12, 21, 26, 27, 30, 55, 59, 60, 74, 75, 87, 93, 95, 120, 121, 123, 126, 131, 135, 136, 139, 148, 150, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 212, 213, 214, 217, 219, 222, 223, 228, 232, 234, 236, 241], "member": [2, 75, 77, 79, 81, 87, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 132, 133, 138, 143, 148, 149, 150, 155, 157, 158, 159, 160, 171, 183, 184, 185, 190, 195, 197, 200, 202, 203, 207, 209, 213, 220, 230, 232, 235, 236, 245, 246], "accept": [2, 30, 31, 69, 85, 87, 167, 193, 194, 203, 204, 206, 213, 224, 234, 236, 240], "b": [2, 11, 12, 21, 22, 26, 27, 34, 36, 39, 40, 41, 42, 48, 69, 76, 78, 147, 148, 157, 158, 159, 160, 161, 162, 171, 178, 181, 189, 193, 194, 195, 203, 205, 209, 211, 213, 224, 227, 229, 246], "bool": [2, 12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 36, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 70, 71, 74, 75, 76, 77, 79, 81, 82, 84, 87, 93, 102, 131, 132, 133, 139, 150, 162, 166, 170, 183, 184, 185, 189, 194, 195, 202, 209, 211, 217, 229, 241], "true": [2, 12, 13, 14, 17, 20, 21, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 62, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 93, 95, 102, 131, 132, 133, 134, 136, 139, 157, 158, 159, 160, 161, 162, 165, 166, 178, 182, 183, 184, 188, 189, 194, 195, 196, 198, 202, 204, 205, 211, 213, 217, 223, 229], "onli": [2, 4, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 93, 95, 131, 134, 138, 139, 147, 148, 149, 150, 155, 166, 167, 172, 175, 181, 182, 189, 190, 193, 195, 196, 198, 199, 200, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 222, 224, 228, 229, 232, 234, 235, 236, 238, 241, 242], "goe": [2, 213, 232], "befor": [2, 35, 69, 74, 75, 76, 86, 101, 103, 134, 135, 136, 137, 155, 175, 182, 189, 203, 205, 206, 208, 209, 212, 213, 222, 232, 235, 241, 243, 246], "ascend": 2, "descend": [2, 36, 37], "intcompar": 2, "kokkos_funct": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 141, 142, 143, 148, 154, 168, 170, 177, 178, 207, 209, 211, 213, 217, 223, 245], "constexpr": [2, 4, 35, 48, 67, 69, 74, 75, 76, 77, 79, 81, 82, 84, 88, 117, 139, 140, 141, 143, 166, 167, 169, 178, 183, 184, 185, 189, 193, 194, 211, 222], "preced": [2, 236], "larger": [2, 74, 76, 77, 156, 174, 185, 189, 196, 213, 216, 219], "final": [2, 72, 76, 79, 83, 87, 117, 123, 132, 133, 134, 136, 137, 148, 149, 150, 162, 170, 175, 177, 182, 185, 187, 189, 193, 194, 195, 199, 201, 202, 203, 206, 207, 209, 213, 217, 227, 229, 238, 241, 242], "barrier": [2, 155, 210, 243], "access": [2, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 87, 89, 94, 120, 121, 126, 130, 131, 133, 138, 139, 155, 181, 182, 190, 196, 200, 203, 205, 207, 208, 209, 210, 212, 214, 215, 223, 234, 236, 238, 240, 242, 243, 244, 245, 248], "immedi": [2, 148, 198, 206, 213, 214, 243], "after": [2, 11, 15, 17, 18, 22, 24, 34, 47, 49, 50, 51, 52, 54, 55, 60, 66, 67, 68, 70, 71, 75, 77, 86, 87, 95, 133, 135, 136, 155, 166, 175, 182, 186, 187, 195, 196, 198, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 223, 232, 233, 234, 235, 236, 242, 243, 246], "both": [2, 72, 75, 76, 79, 82, 87, 95, 109, 118, 119, 139, 165, 166, 167, 181, 182, 189, 196, 197, 200, 203, 204, 205, 206, 208, 209, 211, 213, 221, 232, 233, 234, 235, 236, 240, 241], "global": [2, 83, 87, 153, 155, 158, 160, 162, 203, 213, 243], "scratch": [2, 76, 131, 155, 156, 189, 208, 210, 248], "memori": [2, 72, 73, 75, 76, 77, 79, 81, 82, 83, 88, 93, 94, 98, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 130, 131, 147, 155, 156, 166, 181, 183, 184, 185, 186, 187, 189, 190, 198, 200, 202, 206, 207, 211, 212, 214, 215, 221, 222, 223, 236, 241, 242, 243, 244, 246, 248], "space": [2, 4, 11, 22, 23, 24, 30, 38, 42, 47, 48, 53, 54, 55, 56, 67, 69, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 90, 96, 98, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 130, 138, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 160, 162, 165, 181, 182, 186, 187, 189, 190, 200, 202, 203, 204, 205, 207, 214, 217, 219, 221, 234, 236, 240, 241, 243, 244, 245, 246, 248], "biton": 2, "algorithm": [2, 37, 81, 87, 88, 90, 138, 166, 174, 196, 198, 203, 204, 206, 208, 209, 210, 213, 219, 221, 223, 236, 238, 243, 244], "stabl": [2, 232], "mean": [2, 22, 34, 67, 68, 76, 81, 93, 95, 131, 134, 139, 147, 148, 151, 189, 191, 198, 203, 205, 208, 209, 210, 211, 212, 213, 214, 216, 222, 224, 241, 247], "repeat": [2, 150, 203, 234, 243, 246], "input": [2, 22, 34, 67, 68, 76, 77, 79, 95, 149, 150, 198, 200, 204, 205, 209, 213, 236, 240, 241], "correspond": [2, 76, 79, 87, 88, 119, 123, 136, 139, 167, 183, 184, 185, 188, 189, 203, 209, 210, 213, 219, 233, 234, 245], "might": [2, 88, 131, 150, 173, 195, 196, 203, 205, 206, 207, 208, 209, 212, 213, 222, 240, 247], "ani": [2, 27, 39, 40, 41, 75, 81, 83, 84, 85, 87, 88, 93, 95, 98, 129, 130, 131, 133, 134, 136, 138, 139, 142, 148, 165, 166, 173, 182, 189, 194, 197, 198, 199, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 224, 232, 234, 235, 236, 242], "execspac": [2, 79, 131, 154, 165, 182, 213], "defaultexecutionspac": [2, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56, 76, 81, 85, 94, 128, 129, 130, 151, 152, 154, 165, 172, 189, 203, 204, 241], "teampol": 2, "teammem": 2, "typenam": [2, 4, 19, 20, 48, 63, 64, 74, 75, 77, 79, 81, 84, 87, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 155, 157, 159, 161, 177, 181, 182, 186, 187, 189, 205, 213, 239, 244], "member_typ": [2, 72, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 200, 203, 205], "10": [2, 12, 21, 24, 26, 27, 34, 36, 37, 39, 40, 41, 48, 66, 69, 70, 71, 77, 78, 82, 86, 117, 134, 135, 136, 150, 152, 182, 189, 198, 203, 207, 209, 213, 215, 226, 227, 228, 234, 236], "rand_pool": 2, "13718": 2, "fill_random": [2, 72], "100": [2, 75, 88, 123, 150, 203, 205, 209, 210, 213, 227, 242], "parallel_for": [2, 72, 76, 77, 79, 81, 87, 90, 95, 131, 138, 144, 147, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 170, 177, 189, 196, 203, 205, 207, 208, 209, 210, 213, 227, 229, 238, 239, 240, 241, 242, 243, 245], "whole": [2, 155, 196, 198, 200, 212, 224, 245], "a_row_i": 2, "subview": [2, 72, 75, 76, 78, 79, 98, 169, 182, 185, 187, 189, 217, 226, 240, 248], "league_rank": [2, 148, 149, 153, 155, 157, 158, 159, 160, 161, 162, 200, 203], "ahost": 2, "create_mirror_view_and_copi": [2, 181], "hostspac": [2, 72, 75, 87, 94, 181, 182, 185, 189, 190, 202, 205, 213, 217, 239], "cout": [2, 88, 131, 137, 166], "j": [2, 80, 117, 153, 159, 162, 165, 203, 205, 208, 209, 213, 215, 240, 243, 245], "vectorlen": 2, "vector_length_max": [2, 156], "now": [2, 87, 131, 139, 151, 165, 182, 189, 195, 197, 203, 205, 207, 208, 211, 213, 217, 227, 238], "column": [2, 80, 205, 209, 212, 213, 236], "a_col_i": 2, "deep_copi": [2, 72, 74, 75, 76, 81, 93, 98, 117, 131, 139, 147, 181, 189, 196, 205, 213, 243], "na": [2, 228, 236], "9": [2, 12, 21, 26, 27, 34, 36, 37, 39, 40, 41, 48, 66, 69, 70, 71, 78, 88, 198, 212, 222, 223, 224, 226, 228, 234, 236], "38": 2, "68": 2, "74": [2, 215], "76": 2, "83": [2, 223], "89": 2, "91": 2, "95": 2, "19": [2, 198, 228], "41": 2, "55": 2, "65": 2, "78": 2, "92": 2, "99": [2, 88, 203], "13": [2, 4, 21, 23, 24, 39, 40, 53, 56, 149, 213, 226, 234], "16": [2, 21, 77, 198, 205, 227, 228, 236], "17": [2, 21, 84, 88, 134, 143, 149, 189, 198, 223, 227, 228, 234, 235], "40": [2, 78], "44": [2, 234], "54": 2, "96": [2, 205], "18": [2, 21, 198, 214, 215, 228, 232, 234], "77": 2, "80": [2, 185], "82": 2, "94": 2, "14": [2, 21, 23, 88, 143, 166, 198, 226, 228, 236], "34": [2, 53, 56, 155, 223], "35": 2, "45": 2, "46": 2, "47": 2, "52": 2, "58": 2, "6": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 76, 77, 88, 141, 143, 150, 157, 159, 161, 166, 182, 189, 207, 209, 222, 224, 226, 228, 232, 234, 248], "25": 2, "37": 2, "51": 2, "81": 2, "3": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 82, 87, 88, 117, 132, 133, 134, 136, 138, 141, 142, 143, 150, 155, 157, 159, 161, 166, 174, 175, 178, 180, 182, 185, 186, 187, 188, 189, 197, 199, 200, 201, 214, 215, 216, 222, 223, 224, 226, 227, 229, 232, 234, 236, 240, 244, 248], "5": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 76, 77, 88, 95, 100, 102, 117, 131, 139, 143, 152, 154, 155, 157, 159, 161, 166, 169, 171, 180, 182, 185, 188, 189, 200, 203, 212, 215, 222, 223, 224, 226, 227, 228, 229, 234, 246, 248], "20": [2, 78, 88, 89, 131, 139, 140, 141, 151, 185, 189, 198, 214, 220, 223, 228, 236], "33": [2, 215], "39": 2, "60": [2, 213], "97": 2, "7": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 72, 76, 77, 88, 132, 133, 134, 136, 142, 174, 189, 198, 200, 208, 212, 214, 222, 223, 224, 226, 228, 229, 232, 234, 236, 248], "8": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 88, 133, 136, 154, 156, 157, 159, 161, 183, 184, 185, 189, 196, 198, 204, 208, 209, 210, 213, 222, 223, 224, 226, 228, 234, 236, 244, 248], "15": [2, 4, 21, 25, 28, 30, 35, 42, 155, 180, 188, 209, 226], "31": [2, 78], "42": [2, 131, 151, 241], "86": 2, "29": [2, 198, 228], "56": 2, "63": 2, "90": [2, 212, 232, 239], "iter": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 78, 82, 85, 87, 148, 149, 150, 152, 154, 156, 166, 189, 203, 207, 208, 209, 210, 211, 213, 217, 229, 238, 240, 243], "minimum": [3, 72, 77, 88, 97, 104, 106, 107, 109, 116, 117, 118, 119, 120, 121, 149, 150, 198, 199, 200, 228, 232], "modifi": [3, 4, 11, 12, 13, 14, 17, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 35, 36, 40, 45, 46, 48, 49, 51, 52, 55, 56, 59, 63, 67, 69, 70, 71, 75, 101, 102, 103, 123, 149, 150, 193, 194, 196, 197, 203, 205, 222, 224, 234, 244], "sequenc": [3, 26, 61, 74, 89, 166, 203, 208, 210], "numer": [3, 83, 141, 142, 198, 206, 208, 214, 236, 240, 245], "partit": [3, 35, 47, 217], "kokkos_stdalgorithm": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 217], "datatyp": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 75, 76, 77, 79, 123, 189, 193, 229, 239, 244], "properti": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 76, 148, 149, 150, 156, 181, 186, 187, 189, 208, 209, 212, 213, 223], "qualifi": [4, 87, 207, 217, 219, 228], "past": [4, 16, 74, 82, 86, 87], "reason": [4, 95, 132, 156, 207, 209, 210, 211, 213, 214, 219, 224, 232, 242, 245], "taken": [4, 197, 200, 234], "becaus": [4, 142, 165, 178, 205, 207, 208, 209, 211, 213, 214, 222, 232, 243], "we": [4, 39, 40, 41, 76, 84, 87, 95, 134, 142, 154, 182, 189, 195, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 220, 227, 228, 234, 238, 239, 241, 242], "chang": [4, 72, 75, 81, 134, 155, 166, 173, 189, 197, 206, 207, 209, 211, 212, 213, 214, 217, 219, 222, 224, 229, 231, 232, 233, 234, 236, 242], "itself": [4, 76, 77, 95, 131, 139, 151, 166, 185, 189, 196, 198, 200, 206, 208, 212, 213, 214, 234, 245, 246], "without": [4, 72, 77, 86, 87, 95, 133, 147, 149, 173, 182, 186, 187, 190, 197, 198, 199, 207, 211, 212, 213, 214, 217, 219, 222, 223, 224, 228, 240, 242, 243, 246], "dereferenc": [4, 11, 22, 30, 31, 86, 166, 245], "must": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 75, 76, 77, 78, 81, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 129, 130, 133, 135, 136, 138, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 164, 181, 186, 187, 188, 189, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 222, 224, 232, 233, 234, 235, 236, 240, 241, 243, 246], "done": [4, 37, 54, 69, 87, 95, 139, 198, 203, 204, 211, 213, 214, 219, 232, 234, 241], "execut": [4, 11, 22, 23, 24, 30, 38, 42, 47, 48, 53, 54, 55, 56, 67, 69, 72, 75, 76, 79, 82, 83, 86, 87, 93, 94, 95, 104, 106, 107, 123, 128, 129, 130, 133, 135, 136, 137, 138, 139, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 171, 172, 175, 176, 181, 182, 187, 189, 190, 195, 196, 204, 205, 206, 207, 211, 214, 217, 219, 221, 222, 224, 232, 235, 236, 240, 245, 246, 248], "rank": [4, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 77, 78, 82, 85, 87, 117, 133, 148, 149, 152, 155, 157, 159, 161, 180, 182, 185, 186, 187, 188, 189, 203, 204, 213, 214, 217, 229, 239, 240, 241], "layoutleft": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 78, 82, 98, 182, 186, 187, 189, 205, 213, 229, 240], "layoutright": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 98, 182, 186, 187, 189, 205, 209, 212, 213, 240], "layoutstrid": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 76, 98, 189, 212, 213, 239], "ke": [4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56], "view_typ": [4, 21, 25, 28, 30, 35, 42, 75, 180], "proper": [4, 86, 198, 205, 214], "content": [4, 72, 75, 105, 133, 149, 150, 167, 186, 187, 205, 207, 209, 213, 224, 227, 241, 243, 246], "itc": 4, "read": [4, 11, 21, 22, 67, 68, 105, 131, 196, 205, 208, 209, 212, 213, 242], "iteratortyp": [4, 12, 13, 14, 19, 20, 21, 23, 24, 26, 27, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 53, 56, 59, 62, 63, 64, 69, 70], "difference_typ": [4, 19, 20, 63, 64, 84, 166], "last": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 75, 76, 82, 136, 179, 184, 189, 203, 204, 205, 208, 212, 213, 219, 232, 236], "need": [4, 28, 29, 30, 76, 77, 84, 87, 95, 130, 131, 134, 138, 140, 142, 149, 150, 165, 181, 182, 189, 190, 197, 198, 199, 203, 204, 205, 206, 209, 211, 212, 214, 217, 219, 222, 227, 232, 233, 234, 236, 241, 243, 244], "go": [4, 86, 148, 149, 150, 152, 154, 155, 156, 197, 198, 203, 208, 212, 213, 219, 232, 234], "calcul": [4, 144, 145, 146, 156, 185, 203, 205, 213, 239, 245], "neg": [4, 18, 24, 33, 63, 64, 136, 195, 196, 211], "it1": [4, 25, 28], "it2": [4, 25, 28], "stepsa": 4, "equal": [4, 7, 12, 19, 25, 26, 27, 33, 38, 43, 44, 49, 50, 53, 54, 58, 61, 62, 65, 71, 76, 88, 93, 101, 102, 103, 133, 152, 165, 166, 188, 189, 193, 194, 204], "stepsb": 4, "swap": [4, 59, 65, 166, 178, 203, 213, 217], "point": [4, 25, 28, 29, 75, 76, 77, 79, 82, 87, 95, 101, 103, 105, 131, 136, 139, 142, 153, 170, 181, 189, 197, 198, 207, 208, 211, 212, 213, 222, 232, 236, 240, 241, 242], "current": [4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 74, 76, 77, 81, 87, 88, 95, 100, 101, 102, 105, 108, 131, 139, 142, 165, 171, 189, 193, 194, 198, 203, 209, 210, 211, 212, 213, 214, 221, 222, 232, 235, 236, 241], "api": [4, 55, 81, 88, 135, 136, 155, 173, 204, 216, 219, 221, 230, 240, 246], "doe": [4, 47, 75, 77, 81, 87, 92, 95, 128, 133, 138, 147, 149, 150, 170, 178, 181, 189, 197, 198, 204, 205, 208, 212, 213, 214, 217, 219, 222, 223, 224, 228, 229, 232, 235, 236], "fenc": [4, 72, 87, 90, 131, 139, 148, 149, 155, 165, 187, 189, 207, 208, 213, 214, 219, 243], "min_el": [5, 39, 41, 174], "max_el": [5, 174], "minmax_el": [5, 174], "copi": [6, 11, 16, 17, 18, 23, 24, 46, 50, 51, 54, 55, 58, 60, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 93, 95, 98, 134, 138, 139, 148, 155, 156, 165, 166, 171, 181, 183, 184, 185, 187, 189, 199, 201, 202, 205, 207, 208, 209, 214, 223, 224, 229, 234, 236, 241, 243, 245], "copy_if": 6, "copy_n": 6, "copy_backward": 6, "move": [6, 44, 49, 52, 76, 77, 81, 134, 139, 155, 156, 166, 183, 184, 185, 189, 197, 219, 229, 237], "move_backward": 6, "fill_n": 6, "transform": [6, 67, 68, 69, 210, 224], "generate_n": 6, "remov": [6, 52, 88, 132, 136, 141, 142, 143, 173, 197, 204, 217, 222, 232, 234], "remove_if": 6, "remove_copi": [6, 51], "remove_copy_if": 6, "replac": [6, 35, 46, 51, 52, 54, 55, 56, 70, 71, 89, 100, 101, 102, 103, 105, 108, 132, 133, 143, 166, 198, 204, 205, 207, 209, 217, 222, 247], "replace_if": [6, 55], "replace_copi": [6, 55], "replace_copy_if": 6, "swap_rang": 6, "revers": [6, 16, 44, 58, 74, 137, 140], "reverse_copi": [6, 166], "rotat": [6, 60, 140], "rotate_copi": 6, "shift_left": [6, 64], "shift_right": 6, "uniqu": [6, 76, 77, 131, 147, 189, 198, 204, 208, 214, 248], "unique_copi": 6, "adjacent_find": 7, "count_if": 7, "all_of": [7, 194, 211], "any_of": [7, 194, 211], "none_of": [7, 194, 211], "find": [7, 37, 39, 40, 41, 74, 81, 82, 87, 140, 196, 198, 199, 200, 207, 209, 214, 220, 221, 222, 232], "find_if": 7, "find_if_not": 7, "find_end": 7, "find_first_of": 7, "for_each": [7, 31], "for_each_n": [7, 62], "lexicographical_compar": 7, "mismatch": [7, 61, 213], "search": [7, 12, 13, 14, 19, 20, 25, 26, 27, 28, 29, 35, 36, 45, 53, 62, 70, 74, 81, 133, 204, 219, 246], "search_n": 7, "adjacent_differ": 8, "reduc": [8, 69, 72, 82, 83, 87, 95, 96, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 131, 149, 150, 155, 199, 203, 206, 208, 210, 212, 213], "exclusive_scan": [8, 34, 67], "inclusive_scan": 8, "transform_reduc": 8, "transform_exclusive_scan": [8, 68], "transform_inclusive_scan": 8, "is_partit": [9, 47], "partition_point": 9, "partition_copi": 9, "is_sort": [10, 37, 82], "is_sorted_until": 10, "executionspac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 93, 131, 139, 154, 165, 182, 203, 205, 213, 217, 242], "inputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 46, 54, 55, 67, 68], "outputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 54, 55, 67, 68], "exespac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "first_from": [11, 15, 16, 17, 18, 22, 34, 50, 51, 54, 55, 60, 66, 67, 68, 71], "last_from": [11, 15, 16, 17, 22, 34, 50, 51, 54, 55, 60, 66, 67, 68, 71], "first_dest": [11, 22, 34, 67, 68], "binaryop": [11, 22, 48], "bin_op": [11, 22, 34, 68], "string": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 87, 88, 129, 131, 133, 134, 136, 147, 148, 149, 150, 163, 164, 166, 168, 189, 190, 198, 204, 213, 217, 247], "label": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 87, 129, 131, 139, 147, 148, 149, 150, 163, 164, 181, 185, 186, 187, 189, 190, 213, 217, 234, 236], "datatype1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "datatype2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "view_from": [11, 15, 16, 17, 18, 22, 34, 46, 50, 51, 54, 55, 60, 67, 68], "view_dest": [11, 22, 34, 50, 51, 60, 67, 68], "written": [11, 22, 34, 67, 68, 102, 131, 139, 203, 205, 208, 224, 227, 233, 245], "second": [11, 36, 37, 38, 40, 42, 72, 74, 93, 95, 136, 147, 165, 167, 179, 188, 193, 194, 195, 196, 200, 203, 205, 207, 208, 209, 213], "comput": [11, 22, 34, 37, 59, 67, 68, 140, 149, 198, 200, 201, 202, 203, 206, 209, 210, 211, 213, 214, 215, 222, 224, 227, 232, 235, 239, 240, 245], "differ": [11, 73, 75, 76, 80, 81, 82, 87, 88, 95, 98, 138, 152, 154, 181, 182, 197, 198, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 224, 232, 234, 236, 241, 243], "adjac": 11, "pair": [11, 12, 21, 22, 26, 27, 36, 40, 41, 42, 46, 66, 69, 72, 74, 81, 92, 166, 174, 180, 188, 200, 212, 217, 236], "write": [11, 22, 34, 58, 66, 67, 68, 84, 95, 100, 103, 108, 131, 139, 198, 199, 203, 206, 208, 209, 211, 212, 213, 221, 224, 232, 236], "them": [11, 58, 87, 131, 196, 197, 198, 203, 205, 207, 209, 210, 211, 213, 232, 241], "binari": [11, 12, 21, 22, 26, 27, 34, 36, 37, 40, 48, 61, 62, 66, 69, 70, 71, 72, 109, 123, 197, 200, 209, 213, 222, 227], "instanc": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 75, 76, 87, 93, 95, 131, 134, 138, 139, 147, 154, 156, 165, 182, 186, 187, 189, 190, 195, 197, 200, 207, 209, 212, 213, 217, 219, 222, 223, 245], "name": [11, 15, 16, 18, 22, 23, 24, 32, 34, 47, 48, 53, 54, 66, 67, 68, 69, 72, 76, 77, 79, 87, 93, 95, 131, 133, 134, 138, 139, 148, 149, 150, 151, 155, 189, 196, 197, 198, 201, 203, 204, 207, 208, 217, 219, 221, 222, 224, 227, 236, 238, 239, 242, 247], "implement": [11, 15, 16, 18, 22, 23, 24, 32, 34, 47, 48, 53, 54, 66, 67, 68, 69, 73, 76, 82, 85, 89, 92, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 134, 140, 142, 143, 149, 153, 158, 160, 162, 163, 164, 167, 169, 181, 188, 189, 190, 193, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 217, 221, 222, 223, 232, 233, 236, 239, 243, 246], "debug": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 88, 129, 148, 149, 150, 189, 197, 198, 203, 213, 219, 221, 235, 236, 242], "purpos": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 85, 87, 95, 138, 189, 206, 208, 210, 212, 213, 216, 221, 224, 232], "adjacent_difference_iterator_api_default": 11, "adjacent_difference_view_api_default": 11, "_from": [11, 22, 71], "repres": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 74, 76, 85, 95, 131, 136, 139, 140, 151, 152, 171, 188, 189, 190, 208, 211, 212, 213, 224, 229], "valid": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 75, 76, 77, 79, 81, 83, 84, 93, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 130, 131, 133, 134, 148, 149, 150, 152, 153, 154, 156, 188, 189, 190, 198, 203, 205, 207, 208, 209, 210, 213], "check": [11, 16, 21, 22, 23, 25, 30, 32, 36, 40, 48, 53, 54, 69, 70, 71, 81, 84, 88, 131, 133, 138, 139, 140, 154, 170, 200, 204, 205, 213, 214, 219, 222, 227, 232, 235, 236, 240], "mode": [11, 16, 22, 23, 30, 32, 40, 48, 53, 54, 69, 197, 205, 210, 211, 217, 228, 234], "pass": [11, 12, 13, 14, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 35, 36, 39, 40, 41, 45, 46, 48, 51, 52, 55, 56, 61, 62, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 95, 131, 132, 133, 134, 136, 138, 141, 154, 188, 198, 204, 205, 206, 209, 212, 213, 214, 222, 227, 228, 234, 235, 236, 240, 241], "callabl": [11, 22, 48, 67, 69, 137, 170, 189, 193, 194, 197, 207], "value_typ": [11, 12, 13, 14, 17, 20, 22, 28, 29, 30, 32, 33, 35, 36, 40, 45, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 76, 82, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 149, 150, 166, 171, 182, 189, 193, 194, 200, 202, 209, 229, 241, 243], "conform": [11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 33, 35, 36, 40, 45, 46, 48, 51, 52, 56, 67, 69, 70, 71, 217], "return_typ": [11, 22, 32, 33, 69, 246], "assign": [11, 22, 23, 24, 32, 33, 49, 52, 72, 74, 77, 78, 82, 84, 85, 87, 93, 120, 121, 123, 131, 133, 134, 139, 148, 149, 155, 156, 166, 171, 183, 184, 185, 193, 194, 196, 204, 205, 210, 212, 213, 232, 233, 241], "consecut": [12, 70, 71, 140, 156, 213, 241], "binarypredicatetyp": [12, 21, 26, 27, 42, 61, 62], "pred": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 38, 42, 45, 46, 47, 51, 52, 55, 56, 61, 62, 70, 71], "new": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 74, 75, 79, 81, 87, 88, 89, 95, 130, 131, 133, 134, 139, 143, 151, 165, 181, 185, 186, 187, 188, 189, 190, 191, 196, 197, 200, 203, 205, 206, 207, 208, 209, 213, 214, 217, 219, 220, 223, 227, 229, 230, 232, 233, 234, 235, 242, 246], "teamhandletyp": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71], "teamhandl": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 153, 157, 158, 159, 160, 161, 162], "11": [12, 21, 26, 27, 34, 36, 37, 39, 40, 41, 48, 66, 69, 70, 71, 78, 166, 197, 198, 209, 222, 223, 226, 228, 234, 236], "12": [12, 21, 26, 27, 34, 36, 37, 39, 40, 41, 48, 66, 69, 70, 71, 72, 182, 198, 214, 215, 226, 228, 232, 241], "region": [12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 70, 71, 77, 85, 147, 148, 149, 150, 163, 164, 190, 203, 204, 205, 207, 208, 213], "when": [12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 70, 71, 74, 78, 81, 82, 86, 87, 88, 92, 95, 131, 136, 137, 138, 139, 149, 153, 156, 163, 164, 166, 181, 183, 184, 185, 189, 190, 195, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 219, 220, 222, 223, 228, 229, 232, 236, 239, 240, 242, 243, 246, 247], "forward": [12, 13, 14, 19, 20, 21, 25, 26, 27, 28, 29, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 70, 71, 74, 134, 197, 205, 210, 223, 234, 241], "adjacent_find_iterator_api_default": 12, "adjacent_find_view_api_default": 12, "g": [12, 13, 14, 19, 20, 21, 23, 25, 26, 27, 28, 29, 32, 33, 35, 36, 40, 45, 46, 49, 50, 53, 57, 58, 59, 60, 63, 70, 71, 75, 76, 79, 85, 87, 88, 93, 129, 130, 133, 135, 139, 143, 147, 151, 156, 164, 181, 186, 187, 189, 193, 194, 197, 198, 203, 204, 207, 208, 209, 210, 213, 214, 219, 222, 227, 229, 234, 235, 236, 242], "c": [12, 13, 14, 19, 20, 21, 25, 26, 27, 28, 29, 34, 35, 36, 40, 45, 46, 48, 49, 50, 57, 58, 59, 60, 63, 69, 70, 71, 72, 75, 76, 77, 83, 84, 87, 89, 92, 98, 123, 131, 134, 136, 138, 139, 140, 141, 142, 143, 148, 151, 157, 159, 161, 166, 170, 184, 189, 190, 193, 194, 195, 198, 199, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 219, 220, 222, 224, 227, 229, 235, 239, 240, 243, 246], "associ": [12, 13, 14, 15, 16, 17, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 40, 43, 44, 45, 46, 48, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 76, 95, 109, 123, 131, 135, 139, 151, 155, 165, 188, 189, 190, 200, 203, 207, 208, 209, 213, 222, 224, 241, 243, 245], "consid": [12, 21, 26, 27, 87, 191, 196, 197, 203, 207, 211, 212, 213, 219, 232, 233, 245], "convert": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 36, 40, 45, 46, 51, 52, 55, 56, 70, 71, 84, 93, 95, 131, 133, 136, 154, 166, 167, 170, 189, 193, 194, 205, 211, 239, 240], "everi": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 30, 35, 36, 40, 45, 46, 51, 52, 55, 56, 70, 71, 76, 81, 95, 155, 157, 158, 159, 160, 182, 188, 189, 196, 197, 198, 200, 203, 207, 211, 212, 213, 214, 220, 224, 232, 233, 236, 242, 246], "If": [12, 18, 21, 24, 26, 35, 63, 64, 74, 75, 76, 78, 84, 87, 88, 102, 128, 129, 130, 134, 137, 138, 139, 148, 149, 150, 156, 166, 170, 181, 182, 187, 188, 189, 196, 197, 198, 199, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 219, 220, 222, 223, 224, 227, 232, 233, 234, 240, 241, 243, 244, 245], "found": [12, 14, 25, 28, 29, 37, 74, 78, 81, 84, 101, 102, 104, 107, 123, 156, 196, 197, 198, 207, 208, 210, 211, 232, 236], "satisfi": [13, 14, 20, 28, 35, 45, 46, 47, 82, 149, 181, 223, 233], "target": [13, 14, 19, 25, 26, 27, 43, 44, 45, 49, 50, 58, 72, 75, 88, 95, 131, 148, 189, 198, 205, 206, 208, 210, 221, 222, 227, 236], "unari": [13, 14, 17, 20, 28, 29, 35, 45, 46, 51, 52, 55, 56, 66, 67, 69, 70, 71, 95, 142], "predic": [13, 14, 17, 20, 21, 27, 28, 29, 35, 42, 45, 46, 51, 52, 55, 56, 61, 62, 70, 71, 95], "inputiter": [13, 14, 25, 28, 29, 30, 31, 35, 43, 50, 51, 57, 58, 60, 66, 71], "all_of_iterator_api_default": 13, "all_of_view_api_default": 13, "v": [13, 14, 17, 20, 30, 35, 45, 46, 51, 52, 55, 56, 67, 69, 70, 71, 77, 78, 80, 82, 138, 159, 167, 171, 186, 187, 188, 189, 205, 217, 224, 227, 229, 243], "custompred": [13, 14, 20, 45], "your": [13, 14, 20, 36, 40, 75, 131, 197, 198, 199, 204, 209, 211, 213, 214, 216, 220, 222, 224, 227, 241], "empti": [13, 14, 26, 35, 39, 40, 41, 45, 75, 82, 166, 217, 246], "fals": [13, 14, 21, 29, 35, 42, 45, 74, 77, 81, 102, 131, 133, 134, 135, 139, 150, 170, 181, 185, 189, 204, 211, 213, 223], "otherwis": [13, 18, 21, 24, 35, 45, 63, 64, 74, 75, 76, 77, 78, 81, 83, 84, 88, 93, 95, 102, 130, 131, 133, 156, 166, 181, 189, 197, 204, 205, 209, 213, 214, 224, 234], "least": [14, 78, 81, 87, 88, 139, 140, 205, 207, 211, 219, 222, 224, 227, 235], "one": [14, 39, 40, 41, 42, 75, 76, 78, 87, 95, 133, 136, 138, 139, 140, 142, 147, 155, 157, 158, 159, 160, 165, 168, 174, 175, 181, 183, 184, 186, 187, 188, 189, 193, 194, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 222, 224, 229, 232, 234, 236, 238, 239, 241, 245, 246], "any_of_iterator_api_default": 14, "any_of_view_api_default": 14, "sourc": [15, 16, 17, 18, 43, 44, 46, 50, 54, 58, 60, 65, 66, 71, 75, 76, 155, 170, 180, 189, 198, 208, 211, 214, 216, 224, 230, 234, 236, 247], "destin": [15, 16, 17, 18, 46, 50, 54, 66, 71, 76, 79, 189, 205, 241], "first_to": [15, 17, 18, 50, 51, 54, 55, 60, 66, 71], "view_to": [15, 16, 17, 18, 54, 55], "copy_iterator_api_default": 15, "copy_view_api_default": 15, "anoth": [16, 17, 18, 42, 54, 55, 78, 87, 95, 140, 155, 157, 158, 159, 160, 181, 188, 196, 203, 204, 205, 210, 211, 212, 213, 236, 241, 245], "last_to": 16, "rel": [16, 49, 52, 165, 198, 210], "preserv": [16, 49, 52, 78, 87, 186, 187], "copy_backward_iterator_api_default": 16, "copy_backward_view_api_default": 16, "unarypredicatetyp": [17, 55, 56], "copy_if_iterator_api_default": 17, "copy_if_view_api_default": 17, "sizetyp": [18, 24, 31, 62], "copy_n_if_iterator_api_default": 18, "copy_n_if_view_api_default": 18, "count_iterator_api_default": 19, "count_view_api_default": 19, "prediat": 20, "count_if_iterator_api_default": 20, "count_if_view_api_default": 20, "iteratortype1": [21, 26, 27, 38, 42, 44, 61, 65, 69], "iteratortype2": [21, 26, 27, 38, 42, 44, 61, 65, 69], "first1": [21, 38, 42, 65, 69], "last1": [21, 38, 42, 65, 69], "first2": [21, 38, 42, 65, 69], "last2": [21, 38, 42], "view1": [21, 38, 42], "view2": [21, 38, 42], "binarypred": [21, 42, 70, 71], "applic": [21, 76, 77, 189, 197, 198, 199, 204, 205, 206, 208, 209, 210, 212, 213, 214, 220, 221, 222, 224, 232, 236, 239, 243, 245, 246, 248], "equal_iterator_api_default": 21, "equal_view_api_default": 21, "valuetype1": [21, 26, 27, 39, 40, 41, 42], "valuetype2": [21, 26, 27, 39, 40, 41, 42], "valuetyp": [21, 22, 26, 27, 28, 30, 34, 35, 48, 49, 50, 56, 62, 67, 68, 69, 81, 201, 202], "isequalfunctor": [21, 26, 27, 42], "corner": [21, 88, 219, 222, 230], "case": [21, 37, 39, 40, 41, 75, 76, 87, 92, 95, 149, 150, 151, 181, 182, 189, 198, 203, 204, 205, 208, 209, 211, 212, 213, 214, 217, 219, 221, 222, 232, 238, 241, 243, 244, 245], "length": [21, 149, 152, 153, 156, 157, 158, 159, 160, 161, 162, 166, 186, 187, 189, 200, 205, 213, 244], "somehow": [21, 25, 28, 30, 35, 39, 40, 42], "creat": [21, 28, 30, 42, 72, 75, 78, 79, 81, 83, 87, 95, 98, 134, 138, 163, 164, 165, 166, 181, 182, 185, 188, 189, 190, 195, 196, 197, 198, 200, 205, 207, 208, 217, 219, 222, 232, 233, 234, 236, 241, 245], "p": [21, 28, 30, 42, 77, 167, 186, 187, 198, 206, 213, 214, 217, 236, 240], "isequ": 21, "To": [21, 84, 95, 129, 130, 139, 148, 181, 182, 198, 199, 203, 204, 206, 207, 209, 212, 213, 214, 216, 222, 227, 232, 233, 236, 239], "run": [21, 74, 88, 95, 136, 139, 148, 196, 197, 198, 200, 203, 205, 207, 208, 209, 210, 213, 214, 219, 222, 232, 234, 236, 242, 243], "explicitli": [21, 23, 24, 28, 30, 42, 53, 56, 76, 131, 138, 167, 189, 198, 200, 203, 204, 205, 207, 211, 212, 217, 222, 224, 235, 236], "host": [21, 25, 72, 73, 74, 75, 76, 77, 80, 81, 82, 88, 131, 133, 138, 139, 142, 170, 172, 175, 181, 182, 189, 190, 198, 203, 204, 205, 209, 210, 213, 214, 232, 236, 237, 241, 242, 246], "assum": [21, 23, 24, 25, 28, 30, 42, 47, 53, 56, 75, 81, 87, 88, 95, 123, 133, 149, 150, 203, 205, 208, 209, 212, 213, 224, 238, 241], "defaulthostexecutionspac": [21, 94, 176, 204, 205], "overload": [22, 23, 24, 31, 34, 48, 53, 54, 55, 56, 61, 62, 69, 89, 90, 136, 142, 148, 149, 178, 197, 211, 212, 213, 217, 219, 245], "set": [22, 23, 24, 31, 34, 48, 53, 56, 61, 62, 69, 72, 74, 75, 76, 77, 81, 82, 83, 87, 89, 98, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 131, 133, 136, 142, 152, 154, 155, 156, 167, 171, 172, 175, 176, 179, 183, 184, 185, 189, 191, 193, 194, 195, 196, 197, 198, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 217, 220, 222, 223, 228, 232, 234, 235, 236, 239, 243, 246], "init_valu": [22, 34, 67, 68, 203], "binaryoptyp": [22, 34, 67, 68], "exclus": [22, 67, 150, 155, 170, 209, 212, 222, 224, 241], "prefix": [22, 34, 67, 68, 90, 203, 204, 209, 210, 222], "sum": [22, 34, 67, 68, 72, 80, 81, 90, 109, 123, 149, 158, 160, 162, 199, 200, 201, 202, 203, 209, 227], "result": [22, 30, 31, 34, 48, 63, 64, 66, 67, 68, 69, 74, 78, 79, 88, 95, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 138, 140, 149, 150, 156, 165, 180, 189, 199, 200, 201, 202, 203, 205, 207, 208, 210, 212, 213, 224, 227, 236, 239, 240, 246, 247], "scan": [22, 34, 67, 68, 72, 74, 150, 155, 156, 203, 208, 210, 213, 227, 241], "combin": [22, 34, 81, 87, 104, 106, 107, 123, 139, 149, 150, 189, 200, 203, 206, 210, 213, 224, 228, 234, 246], "th": [22, 34, 67, 68, 74, 166, 188], "exclusive_scan_iterator_api_default": 22, "exclusive_scan_view_api_default": 22, "fill_iterator_api_default": 23, "fill_view_api_default": 23, "directli": [23, 24, 39, 40, 41, 84, 95, 131, 139, 197, 198, 203, 204, 205, 210, 211, 213, 219, 235], "22": [23, 228, 236], "openmp": [23, 24, 25, 28, 30, 42, 53, 56, 72, 85, 87, 88, 94, 154, 156, 182, 198, 204, 206, 209, 210, 213, 214, 217, 221, 222, 228, 234, 235, 236, 243], "fill_n_iterator_api_default": 24, "fill_n_view_api_default": 24, "someth": [24, 53, 56, 78, 87, 147, 151, 193, 194, 196, 198, 207, 208, 232, 245], "newvalu": [24, 53, 56], "find_iterator_api_default": 25, "find_view_api_default": 25, "cbegin": [25, 35, 58, 152], "cend": [25, 35, 58, 152], "enabl": [25, 28, 30, 42, 86, 88, 138, 139, 153, 158, 160, 162, 172, 175, 198, 203, 204, 209, 210, 213, 215, 222, 232, 236, 242, 244, 246], "you": [25, 26, 27, 28, 30, 42, 75, 95, 131, 134, 138, 139, 142, 143, 151, 181, 185, 196, 197, 198, 199, 200, 203, 204, 205, 207, 208, 209, 211, 212, 214, 215, 217, 220, 222, 223, 224, 227, 230, 234, 245], "occurr": [26, 61], "s_first": [26, 27, 61], "s_last": [26, 27, 61], "s_view": [26, 27, 61], "via": [26, 27, 37, 49, 52, 69, 79, 85, 86, 95, 120, 121, 126, 129, 137, 139, 148, 149, 150, 153, 154, 156, 158, 160, 162, 166, 189, 196, 198, 201, 203, 204, 205, 209, 213, 214, 232, 233, 234, 235, 239, 241, 246], "find_end_iterator_api_default": 26, "find_end_view_api_default": 26, "want": [26, 27, 75, 84, 138, 196, 204, 207, 208, 209, 211, 219, 222, 227, 241], "s_": [26, 27], "find_first_of_iterator_api_default": 27, "find_first_of_view_api_default": 27, "custom": [28, 29, 39, 40, 41, 76, 87, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 131, 149, 189, 203, 209, 213, 226, 232, 233, 240, 248], "predicatetyp": [28, 29, 30, 35, 46, 47], "find_if_iterator_api_default": 28, "find_if_view_api_default": 28, "operand": [28, 29, 30, 35, 48], "evalu": [28, 29, 42, 76, 131, 170, 189, 205, 209, 219, 232, 236, 240], "equalsvalu": 28, "m_valu": [28, 30], "equalsvalfunctor": 28, "find_if_not_iterator_api_default": 29, "find_if_not_view_api_default": 29, "unaryfunctortyp": [30, 31], "func": [30, 31, 137, 142], "for_each_iterator_api_default": 30, "for_each_view_api_default": 30, "signatur": [30, 148, 149, 150, 209, 240], "noth": [30, 87, 100, 108, 128, 131, 139, 151, 170, 208, 209, 213, 224], "incrementvalsfunctor": 30, "increment": [30, 37, 196, 205, 208, 213], "for_each_n_iterator_api_default": 31, "for_each_n_view_api_default": 31, "generatortyp": 32, "generate_iterator_api_default": 32, "generate_view_api_default": 32, "form": [32, 33, 95, 131, 133, 135, 149, 150, 195, 206, 208, 210, 213, 224, 243, 246], "being": [32, 33, 81, 87, 89, 95, 123, 143, 144, 145, 146, 156, 166, 168, 188, 196, 203, 208, 211, 213, 222, 232, 247], "size": [33, 49, 52, 72, 74, 75, 76, 77, 81, 82, 87, 90, 129, 130, 139, 144, 145, 146, 152, 154, 156, 166, 183, 184, 185, 189, 193, 194, 203, 205, 209, 210, 211, 213, 217, 240, 241, 244, 246], "ex": [33, 43, 44, 57, 65, 87, 93, 131, 204], "generate_n_iterator_api_default": 33, "generate_n_view_api_default": 33, "inclus": [34, 68, 150, 209, 212, 219, 224, 232, 235], "op": [34, 72, 79, 81, 84, 99, 123, 182, 196, 213], "first_last": [34, 67, 68], "inclusive_scan_iterator_api_default": 34, "inclusive_scan_view_api_default": 34, "appear": [35, 49, 52, 87, 140, 189, 196, 213, 224, 241], "don": [35, 72, 75, 87, 181, 189, 196, 197, 209, 219, 222, 227, 228, 234], "is_partitioned_iterator_api_default": 35, "is_partitioned_view_api_default": 35, "isneg": 35, "zero": [35, 72, 76, 77, 78, 80, 95, 133, 139, 155, 189, 203, 212, 213, 214], "re": [35, 39, 40, 41, 87, 95, 131, 139, 151, 171, 198, 207, 209, 213, 246], "comparison": [36, 37, 39, 40, 41, 54, 72, 102, 142, 196, 199], "comparatortyp": [36, 37, 38, 39, 40, 41], "is_sorted_iterator_api_default": 36, "is_sorted_view_api_default": 36, "less": [36, 38, 39, 40, 41, 63, 64, 87, 140, 152, 165, 199, 211, 213, 228, 232, 240, 241], "than": [36, 38, 39, 40, 41, 63, 64, 74, 76, 77, 78, 87, 95, 131, 133, 138, 139, 140, 152, 154, 156, 188, 189, 196, 198, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 219, 228, 232, 240, 245], "logic": [36, 39, 40, 41, 49, 52, 70, 72, 76, 109, 111, 112, 113, 189, 196, 198, 200, 203, 208, 210, 211, 213, 246], "largest": [37, 39, 41, 79, 82, 140, 174, 210], "is_sorted_until_iterator_api_default": 37, "is_sorted_until_view_api_default": 37, "is_same_v": [37, 87, 166], "decltyp": [37, 63, 64, 84, 143, 166, 180, 181, 182, 188, 193, 195, 212, 223], "lexicograph": 38, "lexicographical_compare_iterator_api_default": 38, "lexicographical_compare_view_api_default": 38, "similar": [38, 61, 62, 72, 76, 78, 82, 87, 95, 189, 197, 207, 208, 211, 217, 219, 223, 236, 241], "max_element_iterator_api_default": 39, "max_element_view_api_default": 39, "sever": [39, 40, 41, 87, 89, 198, 208, 209, 221, 223, 233, 235, 236, 242], "customlessthancompar": [39, 40, 41], "put": [39, 40, 41, 197, 205, 209, 210, 232, 247], "smallest": [40, 41, 140, 174], "min_element_iterator_api_default": 40, "min_element_view_api_default": 40, "examin": [40, 47, 236], "minmax_element_iterator_api_default": 41, "minmax_element_view_api_default": 41, "itpair": 41, "mismatch_iterator_api_default": 42, "mismatch_view_api_default": 42, "exampl": [42, 75, 86, 88, 94, 95, 142, 151, 196, 198, 199, 200, 203, 205, 206, 207, 210, 212, 213, 214, 221, 222, 223, 224, 227, 236, 239, 240, 241, 242], "cpp": [42, 133, 138, 198, 217, 227], "mismatchfunctor": 42, "mismatch_index": 42, "d_first": [43, 58], "outputiter": [43, 50, 51, 58, 60, 66, 71], "dest": [43, 44, 58, 60, 65, 66, 71, 79, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 182, 202], "move_iterator_api_default": 43, "move_view_api_default": 43, "distanc": [43, 44, 58, 65], "d_last": 44, "move_backward_iterator_api_default": 44, "move_backward_view_api_default": 44, "none_of_iterator_api_default": 45, "none_of_view_api_default": 45, "to_first_tru": 46, "view_tru": 46, "to_first_fals": 46, "view_fals": 46, "outputiteratortruetyp": 46, "outputiteratorfalsetyp": 46, "from_first": 46, "from_last": 46, "datatype3": [46, 66], "properties3": [46, 66], "view_dest_tru": 46, "view_dest_fals": 46, "partition_copy_iterator_api_default": 46, "partition_copy_view_api_default": 46, "NOT": [46, 138, 155, 157, 159, 161, 165, 209, 224, 234], "contain": [46, 49, 52, 74, 75, 81, 95, 133, 136, 148, 149, 150, 152, 155, 166, 173, 181, 183, 184, 185, 186, 187, 189, 190, 197, 198, 200, 203, 204, 205, 207, 208, 211, 219, 221, 222, 224, 232, 236, 241, 245, 247], "locat": [47, 75, 76, 79, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 139, 189, 198, 203, 208, 210, 213, 214, 222, 236, 239, 244], "alreadi": [47, 76, 78, 81, 85, 87, 181, 182, 189, 197, 206, 209, 227, 234, 238], "partition_point_iterator_api_default": 47, "partition_point_view_api_default": 47, "init_reduction_valu": [48, 69], "joiner": [48, 69], "reduct": [48, 69, 72, 79, 87, 90, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 149, 150, 155, 156, 200, 201, 202, 203, 208, 210, 217, 226, 243, 248], "account": [48, 68, 156, 220, 232], "join": [48, 69, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 149, 150, 199, 200, 202, 203, 208, 217, 220, 227, 232, 236, 241], "dure": [48, 86, 123, 154, 156, 188, 196, 203, 204, 205, 210, 213, 214, 232, 233, 235, 236, 238, 241, 245], "reduce_iterator_api_default": 48, "reduce_view_api_default": 48, "joinfunctor": [48, 69], "behavior": [48, 69, 75, 81, 95, 129, 130, 131, 133, 134, 150, 166, 177, 189, 197, 207, 210, 211, 213, 214, 217, 223], "commut": [48, 69, 123], "shift": [49, 52, 63, 64, 104, 107], "remain": [49, 52, 87, 130, 208, 224, 232], "physic": [49, 52, 74, 156, 203, 210, 213], "unchang": [49, 52, 81], "remove_iterator_api_default": 49, "remove_view_api_default": 49, "omit": [50, 51, 75, 76, 128, 129, 130, 189], "those": [50, 51, 74, 75, 78, 93, 95, 101, 102, 149, 167, 189, 197, 198, 203, 205, 207, 212, 213, 224, 234, 238, 241], "remove_copy_iterator_api_default": 50, "remove_copy_view_api_default": 50, "unarypred": [51, 52], "remove_copy_if_iterator_api_default": 51, "remove_copy_if_view_api_default": 51, "remove_if_iterator_api_default": 52, "remove_if_view_api_default": 52, "old_valu": [53, 54, 104, 107], "new_valu": [53, 54, 55, 56], "replace_iterator_api_default": 53, "replace_view_api_default": 53, "self": [53, 54, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 131, 139, 219, 222], "explanatori": [53, 54, 168], "oldvalu": [53, 56], "mylabel": [53, 56], "replace_copy_iterator_api_default": 54, "replace_copy_view_api_default": 54, "replace_copy_if_iterator_api_default": 55, "replace_copy_if_view_api_default": 55, "replace_if_iterator_api_default": 56, "replace_if_view_api_default": 56, "ispositivefunctor": 56, "val": [56, 82, 100, 103, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 200, 202, 213], "reverse_iterator_api_default": 57, "reverse_view_api_default": 57, "reverse_copy_iterator_api_default": 58, "reverse_copy_view_api_default": 58, "wai": [59, 60, 75, 81, 83, 84, 87, 95, 191, 196, 197, 198, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 222, 224, 227, 240, 241, 244, 245], "n_first": [59, 60], "n_locat": [59, 60], "rotate_iterator_api_default": 59, "rotate_view_api_default": 59, "identifi": [59, 60, 147, 155, 198, 203, 207, 214, 223, 224, 236, 238], "about": [59, 60, 85, 87, 88, 93, 131, 139, 142, 151, 165, 189, 197, 207, 208, 209, 210, 211, 213, 214, 217, 218, 227, 232, 244], "rotate_copy_iterator_api_default": 60, "rotate_copy_view_api_default": 60, "search_iterator_api_default": 61, "search_view_api_default": 61, "search_n_iterator_api_default": 62, "search_n_view_api_default": 62, "posit": [63, 64, 74, 156, 188, 212, 246], "toward": [63, 64, 206, 208], "shift_left_iterator_api_default": 63, "shift_left_view_api_default": 63, "shift_right_iterator_api_default": 64, "shift_right_view_api_default": 64, "swap_ranges_iterator_api_default": 65, "swap_ranges_view_api_default": 65, "store": [66, 72, 75, 76, 77, 80, 81, 95, 100, 101, 102, 103, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 134, 149, 166, 189, 196, 199, 200, 203, 208, 209, 210, 211, 213, 238, 240, 241, 244], "first_from1": 66, "last_from1": 66, "first_from2": 66, "last_from2": 66, "source1": 66, "source2": 66, "unaryoper": 66, "unary_op": [66, 67, 68], "inputiterator1": 66, "inputiterator2": 66, "binaryoper": 66, "binary_op": [66, 67, 68], "transform_iterator_api_default": 66, "transform_view_api_default": 66, "unaryoptyp": [67, 68], "except": [67, 68, 70, 81, 129, 131, 135, 136, 137, 139, 167, 197, 209, 213, 214, 222, 224, 232, 236], "transform_exclusive_scan_iterator_api_default": 67, "transform_exclusive_scan_view_api_default": 67, "unaryop": 67, "transform_inclusive_scan_iterator_api_default": 68, "transform_inclusive_scan_view_api_default": 68, "first_view": 69, "second_view": 69, "binaryjoinertyp": 69, "binarytransform": 69, "binary_transform": 69, "unarytransform": 69, "unary_transform": 69, "product": [69, 76, 77, 88, 152, 189, 200, 203, 207, 212, 213, 222, 224, 235, 240], "along": [69, 87, 212, 224, 239], "transform_reduce_iterator_api_default": 69, "transform_reduce_view_api_default": 69, "value_type_a": 69, "value_type_b": 69, "value_type_": 69, "elimin": [70, 76, 77, 189], "group": [70, 203, 208, 210, 232, 236], "unique_iterator_api_default": 70, "unique_view_api_default": 70, "unique_copy_iterator_api_default": 71, "unique_copy_view_api_default": 71, "librari": [72, 84, 87, 89, 92, 133, 140, 142, 143, 167, 170, 174, 196, 197, 198, 204, 206, 208, 213, 214, 217, 223, 232, 236, 241, 244, 245, 247, 248], "categori": [72, 191, 196, 198, 206, 208, 232, 235, 236], "descript": [72, 73, 83, 85, 88, 90, 98, 109, 123, 124, 131, 133, 196, 198, 204, 222, 234, 236], "rand": 72, "plu": [72, 124, 126, 129, 196, 203, 209, 240], "random_xorshift1024_pool": 72, "1024": [72, 77, 155, 201, 202, 203], "random_xorshift1024": 72, "sampl": [72, 201, 202], "fit": [72, 95, 203, 210, 224], "bitset": [72, 73, 81], "concurr": [72, 73, 81, 87, 131, 148, 149, 150, 165, 176, 198, 200, 208, 209, 210, 246], "dualview": [72, 73, 82, 87, 88, 191, 248], "mirror": [72, 73, 75, 78, 181, 213, 219], "dynamicview": [72, 73, 191], "dynam": [72, 76, 77, 85, 88, 95, 133, 154, 156, 186, 187, 189, 208, 213, 214, 246], "dynrankview": [72, 73, 182, 191], "determin": [72, 73, 76, 88, 152, 156, 159, 166, 175, 188, 189, 193, 194, 198, 203, 204, 208, 209, 210, 213, 214, 222, 224, 232, 233, 235, 240, 241, 246], "runtim": [72, 73, 76, 78, 79, 85, 131, 133, 138, 156, 175, 189, 200, 203, 204, 205, 207, 210, 213, 219, 222, 232, 245], "errorreport": 72, "support": [72, 75, 78, 82, 84, 87, 88, 95, 131, 133, 134, 138, 139, 141, 142, 166, 193, 194, 197, 198, 199, 203, 204, 205, 207, 209, 211, 213, 214, 223, 224, 227, 235, 236, 241, 243, 248], "error": [72, 138, 142, 166, 168, 189, 205, 208, 212, 213, 214, 223, 228, 234, 236, 245], "record": [72, 87, 232], "code": [72, 77, 87, 88, 90, 95, 131, 138, 139, 141, 155, 163, 164, 170, 182, 189, 196, 197, 198, 199, 201, 203, 207, 208, 209, 210, 212, 213, 214, 219, 221, 222, 223, 224, 226, 227, 228, 232, 233, 235, 236, 237, 240, 241, 245, 246, 247], "offsetview": [72, 73, 87, 191, 217], "indic": [72, 76, 78, 79, 80, 81, 87, 109, 119, 120, 124, 131, 144, 145, 146, 189, 196, 200, 203, 210, 212, 213, 224, 240, 246], "scatterview": [72, 73, 191, 237, 248], "transpart": 72, "replic": [72, 196, 205, 236], "strategi": [72, 87, 95, 133, 196, 204, 207], "scatter": [72, 79, 196], "staticcrsgraph": [72, 73, 213], "resiz": [72, 75, 77, 79, 82, 98, 186, 205], "graph": [72, 80, 83, 95, 248], "semant": [72, 76, 78, 82, 95, 166, 189, 197, 203, 205, 209, 213, 219, 221, 241], "unorderedmap": [72, 73, 213], "map": [72, 73, 76, 80, 81, 189, 203, 204, 205, 210, 213, 238, 240, 241], "optim": [72, 88, 154, 196, 198, 203, 205, 206, 207, 208, 210, 213, 214, 222, 241, 244], "insert": [72, 210, 213], "deprec": [72, 73, 77, 87, 88, 95, 100, 102, 132, 133, 136, 221, 222, 229, 232, 242, 246], "interfac": [72, 82, 87, 94, 95, 153, 158, 160, 162, 191, 197, 203, 205, 206, 208, 212, 213, 217, 222, 224, 239, 245], "abort": [72, 97, 134, 170], "util": [72, 83, 131, 166, 167, 198, 203, 208, 236, 239, 244], "caus": [72, 138, 142, 168, 170, 189, 197, 205, 208, 213, 223, 224], "abnorm": [72, 168, 170], "program": [72, 82, 93, 95, 98, 135, 136, 139, 151, 168, 170, 204, 205, 206, 207, 211, 212, 213, 215, 222, 227, 236, 238, 241, 246, 247], "termin": [72, 134, 135, 136, 137, 168, 170, 223, 224], "dimens": [72, 73, 75, 76, 77, 78, 79, 87, 152, 169, 183, 184, 185, 186, 187, 188, 190, 203, 205, 239, 240], "atomic_exchang": [72, 99, 101, 105, 108, 196], "exchang": [72, 101, 102, 103, 196, 237], "old": [72, 75, 79, 81, 88, 101, 103, 134, 187, 196, 209, 213, 219], "atomic_compare_exchang": [72, 99, 102, 103, 196, 217], "match": [72, 75, 76, 78, 82, 98, 148, 149, 150, 152, 167, 181, 183, 184, 189, 196, 198, 203, 213, 219, 229], "atomic_compare_exchange_strong": [72, 99, 196, 217], "atomic_load": [72, 99, 103, 108, 196], "load": [72, 76, 87, 95, 103, 133, 189, 196, 203, 204, 209, 210, 211, 234, 236], "atomic_": [72, 99, 196], "anyth": [72, 95, 173, 196, 197], "atomic_fetch_": [72, 99, 196], "variou": [72, 75, 83, 196, 198, 235, 236], "_fetch": [72, 99, 196], "atomic_stor": [72, 99, 100, 103, 105, 196, 217], "band": [72, 109, 123, 200, 203], "bor": [72, 109, 123, 200, 203], "Or": [72, 109, 246], "stl": [72, 83], "compat": [72, 73, 76, 77, 78, 82, 83, 88, 93, 131, 136, 139, 149, 150, 167, 182, 189, 193, 195, 198, 204, 205, 207, 213, 223, 226, 227, 239], "work": [72, 73, 75, 76, 79, 81, 82, 83, 85, 87, 92, 123, 131, 134, 142, 147, 148, 149, 150, 156, 167, 182, 189, 194, 196, 197, 198, 200, 203, 204, 205, 208, 209, 210, 211, 212, 213, 217, 218, 219, 223, 224, 228, 232, 234, 236, 237, 240, 241, 242, 245], "create_mirror": [72, 81, 98, 213], "relat": [72, 83, 174, 198, 203, 214, 223, 232, 241], "create_mirror_view": [72, 181, 182, 205, 213, 217, 243], "cudaspac": [72, 87, 88, 94, 189, 205, 213, 217, 223, 243], "primari": [72, 84, 95, 166, 197, 198, 204, 228, 232, 234, 235, 236], "cudauvmspac": [72, 87, 88, 94, 205, 213, 214, 217], "unifi": [72, 87, 139, 207, 222], "page": [72, 95, 123, 131, 139, 151, 198, 213, 215, 216, 218, 222, 223, 230], "migrat": [72, 139, 223, 242], "alloc": [72, 74, 75, 76, 77, 81, 82, 87, 93, 95, 98, 127, 128, 129, 130, 131, 139, 156, 165, 181, 183, 184, 185, 187, 189, 190, 196, 198, 203, 206, 207, 208, 210, 211, 213, 214, 219, 223, 227, 241, 242, 243, 244], "cudahostpinnedspac": [72, 94, 189, 213], "memrori": 72, "pin": [72, 139, 198], "gpu": [72, 76, 88, 92, 133, 139, 181, 189, 198, 203, 204, 205, 206, 208, 210, 211, 213, 214, 217, 223, 227, 232, 236, 241, 242, 244], "executionpolici": [72, 96, 148, 149, 150], "concept": [72, 83, 95, 96, 109, 123, 131, 139, 149, 151, 155, 183, 184, 185, 197, 199, 202, 203, 206, 208, 210, 215, 217, 248], "hpx": [72, 85, 87, 88, 94, 204, 217, 221, 222], "system": [72, 87, 95, 131, 139, 175, 197, 203, 204, 208, 210, 213, 214, 215, 224, 227, 232, 235, 236, 245], "mechan": [72, 87, 138, 151, 163, 203, 205, 206, 210, 213, 223, 224], "initargu": [72, 133, 134, 136, 217], "programmat": [72, 132, 133, 136], "how": [72, 76, 85, 123, 131, 139, 151, 152, 189, 196, 197, 198, 199, 203, 204, 205, 206, 208, 209, 210, 211, 214, 218, 220, 223, 227, 229, 241], "initializationset": [72, 132, 134, 136, 172, 175, 176, 204, 217], "is_array_layout": [72, 87, 217], "trait": [72, 75, 76, 77, 83, 84, 89, 93, 131, 141, 142, 180, 189, 203, 223, 229, 244], "detect": [72, 83, 96, 143, 183, 184, 185, 214, 219], "model": [72, 93, 95, 96, 157, 158, 159, 160, 161, 162, 166, 183, 184, 185, 198, 205, 206, 209, 211, 213, 215, 222, 226, 241], "layout": [72, 75, 76, 77, 78, 79, 96, 98, 181, 183, 184, 185, 186, 187, 205, 206, 208, 212], "is_execution_polici": [72, 217], "is_execution_spac": [72, 87, 131, 217], "is_memory_spac": [72, 87, 139, 217], "memoryspac": [72, 76, 93, 96, 128, 129, 130, 131, 139, 189, 213, 244], "is_memory_trait": [72, 217], "memorytrait": [72, 75, 76, 87, 96, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 189, 196, 203, 213, 217, 244], "is_reduc": [72, 217], "is_spac": [72, 131, 217], "fortran": [72, 76, 98, 183, 189, 198, 212, 213, 228, 237, 248], "arbitrari": [72, 76, 85, 98, 185, 189, 199, 202, 203, 210, 212, 213], "stride": [72, 75, 76, 77, 79, 98, 166, 185, 205, 212, 239], "kokkos_fre": [72, 127, 129, 130, 205, 207, 242], "delloc": 72, "previous": [72, 101, 103, 105, 108, 127, 128, 130, 139, 189, 198, 199, 210, 247], "kokkos_malloc": [72, 127, 128, 130, 205, 207, 242], "kokkos_realloc": [72, 127, 128, 129, 205], "expand": [72, 95, 127, 209], "block": [72, 95, 127, 129, 147, 165, 198, 203, 205, 206, 212, 232, 243], "land": [72, 109, 110, 111, 113, 123, 200, 203, 222, 236], "built": [72, 76, 83, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 166, 189, 198, 199, 202, 203, 204, 213, 222, 227, 236], "lor": [72, 109, 123, 200, 203], "maxloc": [72, 109, 120, 123, 126, 200, 203], "index": [72, 74, 76, 77, 78, 81, 82, 109, 115, 117, 118, 119, 120, 124, 126, 131, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 183, 184, 188, 189, 195, 196, 200, 203, 205, 207, 209, 212], "u": [72, 166, 167, 193, 195, 198, 224, 229], "mdrangepolici": [72, 76, 85, 87, 117, 148, 149, 189, 217, 229, 237, 248], "multidimension": [72, 76, 83, 85, 98, 152, 166, 183, 184, 185, 189, 200, 203, 205, 212, 226, 240], "min": [72, 104, 107, 109, 115, 117, 118, 119, 120, 121, 123, 124, 126, 143, 149, 174, 196, 200, 203, 217, 247], "minloc": [72, 109, 120, 123, 200, 203], "minmax": [72, 109, 121, 123, 174, 199, 200, 203, 217], "minmaxloc": [72, 109, 120, 123, 200, 203], "openmptarget": [72, 87, 88, 94, 198, 204], "targetoffload": 72, "analogu": 72, "bulk": [72, 210], "item": [72, 85, 131, 150, 156, 203, 208, 223, 232, 241, 245], "parallelfortag": [72, 90, 156], "tag": [72, 76, 85, 87, 144, 145, 146, 149, 156, 166, 183, 184, 185, 189, 202, 203, 211, 227, 232, 234, 237, 241], "team_siz": [72, 155, 156, 203], "contribut": [72, 79, 149, 150, 196, 200, 203, 221, 224, 233, 238, 243], "parallelreducetag": [72, 90, 156], "parallel_scan": [72, 90, 138, 146, 147, 162, 203, 209, 210, 241, 242], "simpl": [72, 123, 131, 179, 196, 200, 203, 205, 208, 209, 210, 211, 212, 213, 214, 239, 240, 241, 245], "pre": [72, 88, 150, 165, 193, 194, 198, 222, 232, 238], "postfix": [72, 210], "depend": [72, 85, 88, 95, 138, 139, 156, 157, 161, 170, 196, 197, 198, 199, 203, 207, 208, 209, 210, 211, 214, 227, 240, 242, 243], "parallelscantag": [72, 90], "partition_spac": [72, 94], "split": [72, 85, 138, 153, 157, 158, 159, 160, 161, 162, 165, 203, 209, 246], "exist": [72, 75, 81, 84, 87, 88, 147, 149, 155, 165, 182, 186, 187, 197, 198, 208, 210, 211, 212, 213, 217, 218, 219, 232, 233, 236, 241], "multipl": [72, 87, 88, 95, 109, 149, 150, 196, 198, 203, 205, 208, 209, 211, 213, 214, 219, 221, 222, 232, 235, 236, 241, 245], "perteam": [72, 155, 156, 157, 158, 159, 160, 162, 200, 203], "singl": [72, 95, 149, 153, 154, 157, 158, 159, 160, 162, 193, 194, 200, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 219, 240], "construct": [72, 74, 75, 76, 77, 79, 81, 82, 86, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 133, 136, 138, 139, 163, 166, 179, 183, 184, 185, 186, 187, 189, 190, 195, 199, 203, 205, 207, 208, 209, 211, 212, 217], "per": [72, 95, 152, 156, 200, 203, 205, 209, 210, 212, 213, 222, 238, 241, 244], "perthread": [72, 156, 162, 203], "prod": [72, 109, 123, 200, 203], "rangepolici": [72, 85, 87, 131, 148, 149, 150, 151, 165, 203, 205, 209, 213, 217, 243, 245], "1d": [72, 76, 148, 149, 150, 154, 156, 189, 205, 213, 239], "realloc": [72, 75, 79, 98, 130, 187, 213], "maintain": [72, 87, 197, 219, 220, 235], "reducerconcept": [72, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 202], "cpu": [72, 88, 131, 139, 181, 196, 198, 203, 204, 210, 211, 217, 223, 228, 234, 236], "sequentialhostinit": [72, 190, 213], "view_alloc": [72, 75, 76, 79, 98, 181, 186, 187, 189, 213], "aggreg": [72, 86, 166, 203, 222], "spaceaccess": [72, 93, 131, 139, 181, 182, 213, 217], "facil": [72, 89, 98, 140, 143, 181, 191, 222, 232, 235], "queri": [72, 75, 133, 155, 156, 204, 213, 217], "rule": [72, 77, 197], "multi": [72, 76, 148, 149, 189, 200, 206, 214], "dimension": [72, 76, 148, 149, 189, 212, 213, 227], "arrai": [72, 75, 76, 77, 78, 79, 80, 81, 82, 92, 95, 98, 134, 136, 149, 152, 178, 183, 184, 185, 189, 196, 200, 201, 202, 203, 205, 212, 217, 226, 236, 237, 238, 241], "crate": [72, 236], "slice": [72, 98, 180, 244, 248], "teamthreadmdrang": [72, 85], "teamvectormdrang": [72, 85, 161], "teamvectorrang": [72, 85, 161, 162], "threadvectormdrang": [72, 85], "timer": [72, 97, 147], "basic": [72, 76, 87, 142, 151, 189, 198, 205, 206, 214, 215, 242], "like": [72, 75, 76, 87, 88, 95, 98, 131, 139, 148, 151, 182, 189, 196, 197, 198, 202, 204, 206, 207, 208, 209, 211, 212, 213, 214, 219, 223, 232, 238, 245], "act": [72, 87, 206, 212, 224], "withoutiniti": [72, 181, 186, 187, 190, 213, 217], "comment": [73, 198, 219, 235], "offset": [73, 78, 203, 210, 213], "unord": [73, 81], "kokkos_bitset": 74, "safe": [74, 154, 205, 208, 209, 210, 213], "fix": [74, 81, 86, 166, 197, 205, 213, 219, 223, 232, 233, 234, 244], "time": [74, 75, 76, 85, 87, 88, 93, 95, 131, 138, 150, 156, 166, 179, 189, 193, 194, 196, 197, 198, 203, 208, 209, 210, 211, 212, 213, 214, 219, 222, 227, 232, 233, 234, 236, 240, 242, 245], "paramet": [74, 75, 76, 77, 81, 85, 95, 98, 100, 101, 102, 103, 104, 105, 108, 123, 128, 129, 130, 131, 133, 134, 139, 151, 155, 157, 159, 161, 165, 166, 190, 198, 200, 204, 209, 211, 213, 214, 217, 223, 228, 229, 236, 240, 243, 245], "constant": [74, 78, 83, 89, 131, 140, 142, 143, 169, 189, 193, 194, 209], "bit_scan_revers": 74, "1u": [74, 212], "mask": [74, 194, 195, 204, 211], "direct": [74, 142, 181, 203, 204, 211, 212, 213, 219, 223, 224, 236], "move_hint_backward": 74, "2u": 74, "hint": [74, 76, 85, 95, 138, 154, 165, 189], "bit_scan_forward_move_hint_forward": 74, "0u": 74, "scan_direct": 74, "find_any_set_near": 74, "find_any_reset_near": 74, "increas": [74, 76, 81, 87, 189, 197, 205, 213, 222, 227], "wa": [74, 75, 81, 88, 95, 101, 102, 130, 132, 133, 134, 138, 156, 163, 166, 177, 181, 189, 193, 194, 198, 200, 203, 204, 205, 213, 214, 217, 223, 224, 232, 234, 240, 242], "bit_scan_reverse_move_hint_forward": 74, "decreas": 74, "bit_scan_forward_move_hint_backward": 74, "bit_scan_reverse_move_hint_backward": 74, "constructor": [74, 75, 76, 77, 78, 79, 81, 82, 85, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 134, 136, 138, 148, 149, 150, 155, 156, 157, 159, 161, 171, 181, 183, 184, 185, 186, 187, 190, 201, 202, 203, 209, 212, 213, 217, 223, 229], "arg_siz": 74, "reset": [74, 75, 79, 179, 198], "clear": [74, 81, 82, 87, 197], "test": [74, 88, 101, 102, 131, 142, 147, 198, 205, 209, 213, 214, 217, 221, 222, 227, 228, 232, 233, 234], "max_hint": 74, "happen": [74, 76, 77, 95, 101, 102, 166, 189, 196, 203, 205, 207, 213, 232, 234, 236], "occur": [74, 92, 182, 204, 208, 214, 232, 239, 240, 242], "smaller": [74, 76, 77, 174, 188, 189, 205, 236], "find_any_unset_near": 74, "is_alloc": [74, 75, 76, 77, 79, 81, 82, 189], "rh": [74, 76, 77, 120, 121, 126, 131, 189, 193, 194, 201, 202, 229, 243], "dstdevic": 74, "srcdevic": 74, "dst": [74, 81, 87, 149, 209], "src": [74, 75, 79, 81, 87, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 131, 139, 149, 171, 181, 182, 198, 201, 202, 209, 240], "kokkos_dualview": [75, 217], "refer": [75, 76, 77, 79, 82, 87, 93, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 133, 138, 141, 142, 143, 156, 166, 182, 188, 189, 193, 194, 195, 197, 198, 200, 202, 203, 204, 205, 206, 208, 209, 212, 214, 221, 223, 236, 245], "capabl": [75, 83, 139, 198, 203, 204, 205, 210, 211, 222, 229, 233], "well": [75, 76, 87, 93, 95, 123, 138, 147, 152, 154, 155, 164, 170, 189, 197, 198, 200, 203, 205, 206, 208, 209, 210, 212, 213, 217, 232, 234, 235, 236, 241], "flag": [75, 88, 131, 136, 189, 198, 204, 209, 214, 220, 222, 228, 234, 236], "respons": [75, 204, 205, 208, 211, 224, 233, 235], "manual": [75, 190, 198, 213, 214, 222, 234, 240], "sync": 75, "method": [75, 76, 77, 78, 79, 81, 82, 87, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 198, 202, 207, 208, 209, 211, 213, 217, 240], "synchron": [75, 82, 139, 153, 165, 182, 203, 208, 210, 243], "conveni": [75, 79, 84, 131, 163, 205, 209, 212, 222], "capac": [75, 81, 203, 208], "appropri": [75, 80, 95, 123, 198, 203, 208, 209, 210, 212, 213, 214, 219, 224, 232, 233, 236], "underli": [75, 76, 77, 78, 82, 95, 163, 165, 189, 196, 205, 206, 208, 210, 213, 244], "four": [75, 213, 222, 232, 234], "separ": [75, 87, 181, 196, 198, 204, 209, 213, 219, 224, 232, 234, 244, 245], "intend": [75, 84, 87, 89, 166, 167, 190, 198, 203, 207, 213, 222, 227], "pleas": [75, 131, 139, 142, 143, 151, 197, 198, 207, 213, 215, 216, 223, 227, 236], "document": [75, 87, 92, 131, 139, 148, 149, 151, 193, 194, 197, 198, 207, 217, 219, 224, 232, 233, 240, 241], "suffic": 75, "most": [75, 76, 87, 95, 131, 136, 139, 140, 142, 151, 166, 181, 185, 189, 198, 199, 200, 203, 205, 207, 208, 209, 210, 213, 214, 215, 228, 234, 236, 238, 240, 243], "m": [75, 87, 153, 154, 158, 160, 162, 189, 195, 200, 205, 212, 236, 243], "d_view": [75, 182], "execution_spac": [75, 76, 81, 87, 93, 131, 139, 154, 155, 156, 165, 182, 189, 203, 205, 209, 213, 241], "host_mirror_spac": [75, 76, 189, 217], "h_view": [75, 182], "arg1typ": [75, 82], "arg2typ": 75, "arg3typ": 75, "viewtrait": [75, 77], "data_typ": [75, 76, 77, 189, 229], "t_dev": 75, "hostmirror": [75, 76, 77, 81, 181, 189, 205, 243], "t_host": 75, "const_data_typ": [75, 76, 77, 189], "t_dev_const": 75, "t_host_const": 75, "array_layout": [75, 76, 87, 131, 182, 183, 184, 185, 186, 187, 189, 213, 229], "randomaccess": [75, 76, 189, 213], "t_dev_const_randomread": 75, "t_host_const_randomread": 75, "memoryunmanag": [75, 202, 239], "t_dev_um": 75, "unmanag": [75, 76, 79, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 185, 189, 190, 203, 205, 239, 248], "t_host_um": 75, "t_dev_const_um": 75, "t_host_const_um": 75, "t_dev_const_randomread_um": 75, "t_host_const_randomread_um": 75, "t_modified_flag": 75, "modified_flag": 75, "modified_host": 75, "modified_devic": 75, "unmodifi": 75, "n0": [75, 76, 79, 152, 157, 159, 161, 169, 180, 183, 184, 185, 186, 187, 188, 189, 212, 213, 229], "kokkos_impl_ctor_default_arg": [75, 186, 187], "n1": [75, 76, 79, 152, 157, 159, 161, 165, 169, 180, 183, 184, 185, 186, 187, 188, 189, 212, 213, 229], "n2": [75, 76, 79, 152, 157, 159, 161, 165, 180, 183, 184, 185, 186, 187, 188, 189, 213], "n3": [75, 76, 79, 157, 159, 161, 165, 183, 184, 185, 186, 187, 189, 213], "n4": [75, 76, 79, 183, 184, 185, 186, 187, 189], "n5": [75, 76, 79, 183, 184, 185, 186, 187, 189], "n6": [75, 76, 79, 183, 184, 185, 186, 187, 189], "n7": [75, 76, 79, 183, 184, 185, 186, 187, 189], "benefit": [75, 228], "nonzero": 75, "alloc_prop": [75, 79, 181, 186, 187, 189, 190], "arg_prop": [75, 79, 181, 186, 187], "avoid": [75, 129, 130, 131, 138, 197, 203, 207, 212, 213, 214, 217, 219, 222, 223, 232, 234], "specifi": [75, 76, 77, 79, 81, 82, 85, 87, 88, 93, 123, 128, 129, 131, 132, 148, 149, 152, 155, 156, 166, 177, 180, 181, 188, 189, 198, 202, 203, 204, 205, 207, 210, 214, 222, 223, 235, 236, 244], "ss": 75, "ls": [75, 155, 246], "ds": 75, "ms": [75, 131, 139], "shallow": [75, 205, 209, 213], "sd": 75, "s1": [75, 131, 139, 185], "s2": [75, 131, 139, 185], "s3": [75, 185], "arg0": 75, "arg": [75, 76, 77, 84, 134, 138, 152, 154, 156, 165, 177, 180, 188, 189, 190, 204], "d_view_": 75, "h_view_": 75, "caller": 75, "sure": [75, 150, 198, 203, 209, 213, 214, 223], "ensur": [75, 86, 135, 136, 177, 197, 198, 204, 208, 211, 213, 219, 220, 222, 232], "mark": [75, 138, 207, 209, 213, 219, 224, 232], "impl": [75, 87, 153, 156, 197, 217, 222], "if_c": 75, "is_sam": [75, 84, 93, 181, 182, 205, 212, 213], "memory_spac": [75, 76, 81, 87, 93, 128, 129, 130, 131, 139, 181, 182, 189, 190, 205, 213, 229, 242], "get_device_sid": 75, "specif": [75, 85, 87, 92, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 131, 138, 139, 147, 155, 156, 165, 182, 193, 194, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 224, 232, 235, 236, 238], "afraid": [75, 219], "express": [75, 83, 87, 93, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 140, 170, 195, 198, 210, 211, 212, 214, 219, 224, 227, 242], "That": [75, 76, 87, 88, 147, 189, 203, 204, 205, 209, 212, 213, 214, 223], "tell": [75, 95, 203, 207, 208, 209, 212, 214, 244], "what": [75, 88, 123, 131, 133, 139, 191, 193, 194, 197, 205, 208, 209, 211, 219, 229, 234, 241, 245], "els": [75, 88, 95, 102, 149, 150, 170, 213, 216, 219, 241, 246], "suppos": [75, 84, 211, 212, 241], "dual_view_typ": 75, "dv": 75, "my": [75, 87, 213], "dual": [75, 82, 222], "cudaview": 75, "host_device_typ": 75, "hostview": [75, 182], "enable_if": 75, "non_const_data_typ": [75, 76, 77, 189], "need_sync": 75, "been": [75, 87, 88, 92, 198, 203, 204, 205, 206, 208, 211, 212, 213, 219, 224, 227, 236, 238, 245, 246], "In": [75, 76, 86, 87, 88, 93, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 134, 138, 140, 149, 151, 153, 158, 160, 162, 170, 182, 189, 190, 191, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 222, 224, 232, 235, 236, 238, 239, 240, 241, 243, 245], "discard": [75, 79], "modif": [75, 206, 224, 243], "doesn": [75, 147, 149, 150, 166, 181, 198, 203, 209, 214, 217, 219, 223], "know": [75, 197, 198, 199, 205, 207, 212, 214, 220], "whether": [75, 76, 77, 82, 87, 88, 101, 131, 133, 139, 151, 156, 189, 190, 200, 207, 208, 209, 212, 213, 222, 224, 229, 232, 233, 235, 241, 246], "inlin": [75, 77, 81, 84, 138, 156, 203, 205, 209, 217], "clear_sync_st": 75, "With": [75, 76, 79, 86, 87, 189, 198, 203, 208, 222, 223, 227, 242], "referenc": [75, 76, 77, 79, 100, 101, 103, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 188, 189, 205, 213, 232], "address": [75, 76, 79, 100, 101, 102, 103, 104, 105, 106, 107, 108, 141, 189, 193, 195, 197, 198, 203, 206, 208, 210, 219, 223, 232, 236], "null": [75, 76, 77, 79, 82, 128, 130, 134, 136, 189], "pointer": [75, 76, 77, 79, 81, 82, 95, 128, 129, 130, 131, 134, 136, 155, 166, 181, 185, 186, 187, 189, 190, 196, 205, 207, 209, 211, 217, 223, 241, 245], "span": [75, 76, 77, 82, 189], "span_is_contigu": [75, 76, 77, 182, 189], "contigu": [75, 76, 77, 85, 166, 182, 183, 184, 189, 193, 212, 213, 241, 244], "ityp": [75, 76, 77, 158, 160, 162, 166, 188, 189], "stride_": 75, "is_integr": [75, 158, 160, 162, 188], "r": [75, 166, 182, 188, 189, 211, 215, 224, 227, 229, 240, 243], "extent_int": [75, 76, 77, 189], "integr": [75, 76, 77, 88, 140, 143, 166, 188, 189, 232, 234, 236], "kokkos_dynrankview": [76, 217], "potenti": [76, 77, 81, 88, 95, 139, 148, 149, 153, 155, 182, 189, 196, 202, 203, 206, 208, 209, 214, 222, 245], "compil": [76, 85, 87, 88, 93, 131, 138, 140, 142, 182, 189, 193, 194, 196, 197, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 222, 223, 224, 226, 227, 232, 235, 240, 241, 244, 245, 247], "Its": [76, 189, 205], "shared_ptr": [76, 189], "upper": [76, 152, 204, 213], "bound": [76, 77, 81, 85, 88, 203, 205, 213, 222, 236, 239], "layouttyp": [76, 77, 189], "fundament": [76, 84, 85, 95, 131, 139, 151, 189, 193, 194, 195, 206, 208, 210, 232, 241], "mandatori": [76, 134, 205], "scalartyp": [76, 189, 201, 202], "storag": [76, 80, 109, 128, 129, 130, 156, 185, 189, 208, 210, 211, 244], "come": [76, 87, 189, 196, 198, 206, 207, 209, 210, 212, 213, 214, 232, 240, 242, 245], "some": [76, 95, 129, 131, 138, 140, 141, 147, 155, 156, 157, 158, 159, 160, 165, 178, 185, 189, 198, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 223, 229, 232, 236, 238, 240, 241, 243, 245], "ones": [76, 132, 189, 197, 203, 208, 219, 245], "right": [76, 140, 152, 189, 204, 208, 209, 211, 212, 213, 219, 224, 230, 240], "left": [76, 95, 140, 152, 189, 204, 212, 213, 219, 229, 240], "laid": [76, 189, 205], "out": [76, 86, 135, 183, 184, 185, 189, 197, 198, 205, 207, 209, 211, 213, 224, 234, 240], "control": [76, 128, 129, 130, 136, 155, 163, 164, 189, 198, 203, 208, 209, 210, 211, 213, 214, 222, 223, 224, 236, 244], "finer": 76, "grain": [76, 213], "manner": [76, 92, 189], "trigger": [76, 139, 189], "textur": [76, 189, 213], "fetch": [76, 189, 213, 236], "restrict": [76, 77, 153, 186, 187, 188, 189, 205, 208, 209, 210, 213, 214, 222, 224, 236], "There": [76, 81, 87, 95, 131, 136, 139, 151, 165, 189, 191, 196, 197, 198, 205, 210, 211, 214, 227, 232, 234, 240, 241, 243], "alias": [76, 81, 155, 189, 197, 204, 213], "scope": [76, 86, 135, 136, 163, 164, 189, 197, 207, 209, 210, 213, 223, 245], "enforc": [76, 138, 189, 203, 211, 214], "variabl": [76, 77, 79, 84, 104, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 148, 149, 155, 183, 184, 197, 198, 199, 200, 203, 209, 214, 219, 222, 223, 227, 229, 236, 243], "rank_dynam": [76, 189], "reference_type_is_lvalue_refer": [76, 77, 189], "lvalu": [76, 77, 189, 213], "scalar_array_typ": [76, 189], "properli": [76, 92, 163, 164, 189, 219, 223, 236], "specialis": [76, 189, 213], "sacado": [76, 189], "fad": [76, 189], "const_scalar_array_typ": [76, 189], "non_const_scalar_array_typ": [76, 189], "strip": [76, 189], "const_value_typ": [76, 189], "non_const_value_typ": [76, 149, 182, 189], "certain": [76, 87, 88, 131, 139, 151, 182, 189, 196, 198, 205, 207, 210, 214, 224], "compound": [76, 189], "memory_trait": [76, 189], "non_const_typ": [76, 77, 189], "const_typ": [76, 77, 189], "handl": [76, 77, 81, 95, 148, 149, 150, 153, 155, 158, 160, 162, 189, 203, 205, 207, 209, 211, 213, 219, 223, 241], "reference_typ": [76, 77, 189], "pointer_typ": [76, 77, 189], "size_typ": [76, 81, 82, 85, 87, 131, 166, 189, 209, 213, 241], "partial": [76, 87, 149, 150, 189, 196, 209], "No": [76, 77, 166, 173, 189], "made": [76, 77, 87, 189, 205, 208, 214, 217, 224, 232], "nullptr": [76, 134], "dt": [76, 79, 81, 189], "prop": [76, 189], "rt": [76, 77, 79], "rp": [76, 77, 79], "inttyp": [76, 77, 189, 217], "is_regular": [76, 189], "standard": [76, 77, 81, 83, 87, 89, 92, 140, 142, 143, 170, 174, 189, 197, 198, 206, 207, 209, 211, 216, 217, 222, 232, 235], "profil": [76, 77, 129, 147, 148, 149, 150, 189, 221, 248], "allocproperti": 76, "ptr": [76, 87, 100, 101, 102, 103, 105, 108, 128, 130, 139, 185, 189, 213], "wrap": [76, 189, 190, 198, 205, 213], "required_allocation_s": [76, 189], "nr": [76, 189], "wrapper": [76, 156, 163, 164, 189, 198, 214, 223], "TO": [76, 224], "BE": [76, 224], "scratchspac": [76, 189, 203], "sizeof": [76, 138, 165, 166, 180, 188, 189, 203, 205, 207, 213, 242], "typic": [76, 139, 189, 196, 198, 203, 204, 205, 207, 209, 213, 222, 236, 238, 241], "team_handl": [76, 153, 155, 158, 160, 162, 189], "i0": [76, 77, 148, 149, 157, 159, 161, 188, 189, 229], "i1": [76, 157, 159, 161, 188, 189, 229], "i2": [76, 157, 159, 161, 188, 189], "i3": [76, 157, 159, 161, 189], "i4": [76, 189], "i5": [76, 189], "i6": [76, 189], "beyond": [76, 87, 155, 166, 189, 198, 208, 214, 240], "kokkos_debug": [76, 189, 198], "dim": [76, 77, 79, 189, 239], "architectur": [76, 77, 83, 189, 193, 194, 196, 198, 203, 206, 208, 210, 213, 214, 221, 236, 240, 243, 244], "effici": [76, 77, 81, 189, 206, 212, 213], "cast": [76, 77, 189, 207, 213], "stride_0": [76, 77, 189], "stride_1": [76, 77, 189], "stride_2": [76, 77, 189], "stride_3": [76, 77, 189], "stride_4": [76, 77, 189], "stride_5": [76, 77, 189], "stride_6": [76, 77, 189], "stride_7": [76, 77, 189], "lowest": [76, 129, 143, 189], "highest": [76, 131, 189, 204, 206, 232], "due": [76, 138, 189, 205, 206, 207, 211, 213, 217, 223], "pad": [76, 181, 189, 190, 208, 210, 211, 213], "belong": [76, 189], "n8": [76, 189], "byte": [76, 129, 130, 139, 140, 156, 189, 213], "use_count": [76, 77, 189], "aim": [76, 189, 213, 232], "legal": [76, 78, 153, 155, 157, 158, 159, 160, 170, 189, 203, 209, 210, 213, 224], "intercept": [76, 189], "illeg": [76, 189, 203, 213, 223], "dsttype": [76, 189], "srctype": [76, 189], "dst_view": [76, 189], "src_view": [76, 189], "scrtype": 76, "met": [76, 189, 233, 235], "is_const": [76, 189], "memoryspaceaccess": [76, 87, 189], "furthermor": [76, 189, 196, 203, 205, 209, 210, 213, 228, 232, 233, 242], "neither": [76, 148, 149, 150, 189, 211], "nor": [76, 148, 149, 150, 189, 211, 222], "k": [76, 87, 95, 117, 131, 153, 154, 159, 162, 182, 189, 203, 212, 213], "hold": [76, 81, 163, 166, 189, 207, 213, 223, 224, 245], "cstdio": [76, 148, 149, 150, 182, 189, 193, 194, 195, 229], "atoi": [76, 123, 148, 149, 150, 182, 189, 229], "inita": [76, 189, 229], "initb": [76, 189, 229], "const_a": [76, 189, 229], "const_b": [76, 189, 229], "setc": [76, 189, 229], "kokkos_dynamicview": 77, "parent": [77, 138, 212, 246], "array_typ": [77, 201, 202], "arg_label": 77, "min_chunk_s": 77, "max_ext": 77, "chunk": [77, 87, 139, 154, 156, 203, 209, 242], "rais": [77, 206, 217, 222], "nearest": [77, 142], "power": [77, 140, 142, 205, 206, 222, 224, 234, 236], "resize_seri": 77, "reserv": [77, 82, 204, 209, 213], "amount": [77, 87, 131, 196, 203, 209, 210, 219], "suffici": [77, 197, 209, 213, 238], "chunk_siz": [77, 87, 154, 156, 217], "outsid": [77, 95, 198, 203, 205, 208, 213, 219, 234, 247], "allocation_ext": 77, "noexcept": [77, 155, 166, 172, 175, 176, 178, 229], "multipli": [77, 104, 107, 122, 171, 203], "alwai": [77, 87, 95, 101, 181, 193, 194, 203, 211, 213, 217, 222, 242], "until": [77, 86, 87, 88, 95, 134, 136, 155, 189, 196, 211, 222, 232, 242, 243, 246], "greater": [77, 133, 140, 152, 154, 174, 213], "initializedata": 77, "kokkos_offsetview": [78, 217], "min0": 78, "max0": 78, "min1": 78, "max1": 78, "min2": 78, "max2": 78, "somelabel": 78, "sinc": [78, 82, 87, 88, 95, 100, 102, 131, 132, 134, 136, 138, 139, 140, 141, 142, 143, 164, 166, 168, 170, 172, 174, 175, 176, 177, 178, 179, 182, 189, 190, 196, 197, 198, 203, 205, 206, 207, 209, 211, 212, 213, 222, 229, 242, 245, 246], "ov": 78, "initializer_list": [78, 152], "instead": [78, 81, 100, 102, 131, 132, 133, 138, 139, 142, 168, 189, 203, 204, 209, 211, 213, 223, 229], "obtain": [78, 101, 103, 105, 108, 203, 205, 213, 236, 241], "begin0": 78, "end0": 78, "exactli": [78, 87, 139, 166, 211, 213], "drop": [78, 134, 198, 205], "slicem": 78, "offsettoslic": 78, "30": 78, "offsetsubview": 78, "make_pair": [78, 167, 212], "21": [78, 198, 223, 228], "assert_eq": 78, "deep": [78, 93, 139, 182, 205, 222, 243], "sens": [78, 151, 207, 208, 211, 213, 219], "similarli": [78, 95, 207, 219], "kokkos_scatterview": [79, 217], "original_view_typ": 79, "original_value_typ": 79, "original_reference_typ": 79, "data_type_info": 79, "duplicateddatatyp": 79, "newli": [79, 129, 130, 165, 219, 227], "internal_data_typ": 79, "internal_view_typ": 79, "internal_view": 79, "variad": 79, "pack": [79, 241], "exec_spac": [79, 182, 190], "scatteraccess": 79, "accumul": [79, 208, 209, 227, 246], "contribute_into": 79, "reset_except": 79, "tbd": 79, "free": [79, 81, 83, 138, 139, 142, 150, 204, 207, 208, 213, 215, 224, 229, 243], "dt1": 79, "vp": 79, "dt2": 79, "ly": 79, "es": 79, "ct": 79, "dp": 79, "foo": [79, 138, 148, 149, 165, 166, 189, 207, 209, 213, 229], "bar": [79, 138, 207, 229], "input_i": 79, "result_i": 79, "kokkos_staticcrsgraph": [80, 217], "simplifi": [80, 201], "manipul": [80, 89, 129, 130, 142, 189], "staticcrsgraphtyp": 80, "row_map": 80, "kokkos_unorderedmap": [81, 217], "design": [81, 82, 87, 95, 198, 205, 206, 208, 211, 219, 221, 224, 232, 235, 236, 241, 243, 245, 246], "ten": [81, 203], "thousand": [81, 241], "consequ": [81, 203, 209, 211], "significantli": [81, 196], "unordered_map": 81, "fail": [81, 129, 182, 207, 211, 213, 223, 234, 236, 245, 247], "exceed": 81, "rehash": 81, "would": [81, 84, 87, 95, 147, 165, 178, 182, 196, 198, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 217, 219, 223, 227, 232, 238, 240, 245], "cach": [81, 139, 156, 196, 198, 203, 205, 208, 210, 213], "friendli": [81, 83, 84, 143, 213, 244], "pod": [81, 149, 150, 203], "plain": [81, 138, 193, 194, 213], "trivial": [81, 95, 164, 207, 213, 223], "copyabl": [81, 163, 164, 166, 223], "capacity_hint": 81, "enough": [81, 87, 232, 234, 240], "requested_capac": 81, "lower": [81, 203], "o": [81, 198, 208], "unorderedmapinsertresult": 81, "invalid_index": 81, "valid_at": 81, "Is": [81, 219], "key_at": 81, "value_at": 81, "hashmap": 81, "create_copy_view": 81, "skei": 81, "svalu": 81, "sdevic": 81, "hasher": 81, "equalto": 81, "allocate_view": 81, "deep_copy_view": 81, "dkei": 81, "ddevic": 81, "st": [81, 246], "success": [81, 129, 130, 236], "successfulli": [81, 227, 233], "present": [81, 87, 133, 195, 197, 204, 208, 232, 236], "did": [81, 166, 200, 219], "valuetypeview": 81, "valuesidxtyp": 81, "lookup": [81, 207], "duplic": [81, 87, 211, 217, 219], "togeth": [81, 87, 209, 210, 219, 241], "report": [81, 131, 223, 232, 235, 236], "impli": [81, 147, 154, 165, 213, 224], "exhaust": 81, "restart": 81, "map_op_typ": 81, "value_view_typ": 81, "noop_typ": 81, "OR": [81, 111, 113, 224], "atomic_add_typ": 81, "atomic_add": [81, 106, 196], "pattern": [81, 85, 87, 93, 123, 131, 151, 153, 154, 196, 203, 213, 215, 240, 248], "umap": 81, "kokkos_vector": [82, 217], "overcom": [82, 95], "issu": [82, 83, 134, 141, 142, 155, 182, 189, 198, 203, 205, 208, 209, 211, 213, 216, 217, 219, 221, 222, 224, 228, 231, 234, 235, 236], "reli": [82, 189, 208, 211, 232], "heavili": [82, 198, 214], "grant": [82, 224], "mani": [82, 87, 88, 95, 131, 197, 198, 206, 207, 208, 209, 210, 211, 213, 214, 219, 222, 227, 236, 244, 245], "limit": [82, 87, 95, 138, 143, 152, 156, 195, 197, 198, 203, 206, 207, 208, 211, 213, 217, 220, 223, 224, 228, 234, 235, 246], "below": [82, 87, 92, 95, 123, 133, 134, 140, 142, 143, 148, 149, 181, 189, 198, 201, 213, 214, 219, 222, 224, 232, 236, 242], "synopsi": [82, 142], "push_back": 82, "const_point": [82, 166], "const_refer": [82, 166], "const_iter": 82, "accessor": [82, 189], "pop_back": 82, "max_siz": [82, 166], "front": [82, 203], "back": [82, 88, 95, 196, 198, 203, 208, 210, 243], "lower_bound": 82, "theend": 82, "comp_val": 82, "device_to_host": 82, "host_to_devic": 82, "on_host": 82, "perspect": [82, 87, 191, 208], "on_devic": 82, "set_overalloc": 82, "extra": [82, 87, 88, 95, 129, 131, 211, 213, 217, 222, 227], "buffer": [82, 139, 203, 241], "dispatch": [83, 85, 95, 138, 147, 148, 149, 150, 151, 156, 161, 162, 165, 203, 205, 208, 222, 226, 240, 245, 248], "task": [83, 85, 196, 208, 210, 217, 232, 237, 248], "common": [83, 86, 87, 89, 131, 139, 141, 143, 151, 156, 181, 182, 187, 198, 199, 200, 203, 205, 209, 210, 211, 214, 224, 241], "mathemat": [83, 89, 142, 143, 211, 236], "style": [83, 136, 163, 166, 198, 214, 219, 229, 235], "port": [83, 207, 210, 213], "hardwar": [83, 139, 165, 196, 198, 203, 204, 206, 208, 209, 210, 222, 223, 232, 235, 236], "idiom": [83, 95], "recogn": [83, 84, 136, 191, 203, 204, 205, 211, 214], "sfina": [83, 84, 143], "macro": [83, 92, 148, 170, 198, 205, 207, 209, 213, 236, 247], "etc": [83, 138, 139, 155, 197, 198, 213, 219], "kokkos_detectionidiom": [84, 217], "extens": [84, 138, 173, 198, 215, 221, 232, 235, 236], "iso": [84, 87, 193, 194, 195, 211, 213, 219], "iec": 84, "ts": [84, 155, 246], "19568": 84, "2017": [84, 234], "draft": [84, 87, 219, 232], "cplusplu": 84, "github": [84, 198, 207, 216, 221, 227, 232, 233, 234, 235], "io": 84, "v2": [84, 93, 222, 224, 236], "html": [84, 142, 165], "meta": [84, 198], "origin": [84, 103, 104, 106, 107, 130, 165, 196, 211, 212, 213, 215, 224, 234, 236, 245], "propos": [84, 193, 194, 195, 211, 219, 221, 232, 235], "www": [84, 215, 224], "open": [84, 142, 152, 154, 156, 205, 216, 221, 233, 236], "jtc1": 84, "sc22": 84, "wg21": 84, "doc": [84, 142], "paper": [84, 215], "2015": 84, "n4436": 84, "pdf": 84, "void_t": 84, "detector": 84, "exposit": 84, "metafunct": 84, "leverag": [84, 198, 214, 232], "archetyp": [84, 87], "alwaysvoid": 84, "value_t": 84, "false_typ": [84, 143], "true_typ": [84, 143, 223], "simplif": [84, 87], "detected_t": 84, "nonesuch": 84, "delet": [84, 134, 163, 185, 207, 213, 232], "is_detect": 84, "alia": [84, 131, 139, 180, 193, 194, 195, 212, 213, 242], "detected_or_t": 84, "is_detected_exact": 84, "expect": [84, 95, 101, 102, 123, 194, 197, 203, 205, 206, 209, 211, 212, 214, 232, 233], "is_detected_convert": 84, "is_convert": 84, "later": [84, 131, 189, 197, 200, 209, 211, 213, 223], "is_detected_v": 84, "is_detected_exact_v": 84, "is_detected_convertible_v": 84, "helper": [84, 88], "copy_assign_t": 84, "declval": [84, 212], "Then": [84, 198, 212, 213, 214, 227], "easili": [84, 213, 246], "is_copy_assign": 84, "is_canonical_copy_assign": 84, "mytyp": 84, "ptrdiff_t": [84, 139, 166, 188, 213], "diff_t": 84, "declar": [84, 142, 149, 197, 204, 207, 209, 213, 223, 227], "our": [84, 207, 208, 210, 236, 239], "our_difference_typ": 84, "executionpolicyconcept": 85, "abstract": [85, 87, 95, 123, 131, 139, 151, 193, 194, 203, 206, 210, 211, 221], "place": [85, 87, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 130, 131, 139, 150, 151, 190, 203, 204, 205, 209, 210, 211, 219, 224, 234, 236, 241], "nestedpolici": 85, "summari": [85, 234, 236], "setter": 85, "hip": [85, 87, 88, 94, 138, 139, 165, 182, 198, 204, 207, 209, 217, 221, 222, 235, 236], "sycl": [85, 87, 88, 94, 138, 139, 142, 154, 165, 198, 204, 207, 221, 222, 228], "schedul": [85, 87, 154, 156, 203, 246], "through": [85, 95, 148, 149, 150, 155, 196, 198, 200, 203, 204, 206, 207, 208, 209, 211, 212, 213, 215, 216, 219, 223, 224, 232, 236, 238, 241], "steal": 85, "queue": [85, 165, 232, 246], "machin": [85, 198, 206, 210, 211, 214, 222, 226, 234, 236], "backend": [85, 86, 87, 133, 137, 138, 139, 142, 152, 154, 157, 159, 161, 165, 172, 175, 177, 197, 198, 204, 205, 207, 209, 214, 219, 221, 228, 234, 235, 242, 243], "indextyp": [85, 87, 153, 154, 156, 203], "travers": 85, "executionspaceconcept": [85, 94, 147, 181], "affect": [85, 88, 177, 198, 213, 228], "launchbound": [85, 87], "maxthread": 85, "minblock": 85, "launch": [85, 93, 95, 147, 155, 156, 203, 213, 219, 223, 236, 243, 245, 246], "worktag": [85, 149, 150, 202, 217], "someclass": 85, "detail": [86, 87, 91, 92, 93, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 134, 139, 143, 148, 169, 188, 197, 198, 199, 202, 206, 209, 213, 214, 219, 222, 223, 232, 233, 236], "shutdown": 86, "resourc": [86, 135, 137, 139, 154, 165, 203, 204, 207, 208, 209, 210, 221, 235, 243, 246], "destruct": [86, 87, 163, 164, 190, 207, 213], "thu": [86, 149, 153, 155, 189, 195, 198, 203, 204, 205, 207, 210, 213, 223, 232, 234, 242, 243, 246, 247], "context": [86, 87, 95, 135, 136, 157, 158, 159, 160, 161, 162, 189, 207, 223, 239, 240, 243], "automat": [86, 123, 133, 139, 166, 198, 204, 205, 209, 211, 213, 222, 235, 240, 242], "aid": 86, "mistak": 86, "live": [86, 213, 232], "my_view": [86, 134, 135, 136, 183, 184], "destructor": [86, 134, 135, 136, 155, 190, 207, 213, 229], "switch": [86, 196, 205, 234], "subsequ": [86, 95, 136, 156, 224, 241], "driven": [87, 232], "essenti": [87, 211, 236], "incept": 87, "recent": [87, 234], "readili": 87, "fact": [87, 223, 245], "hasn": 87, "realli": [87, 134, 198, 214, 219], "even": [87, 95, 130, 131, 135, 138, 139, 149, 197, 198, 202, 205, 208, 210, 212, 213, 219, 224, 238, 241, 245, 247], "agre": [87, 224, 233], "merg": [87, 219, 232, 234, 235, 236], "languag": [87, 88, 92, 131, 139, 151, 197, 206, 208, 209, 211, 212, 213, 214, 215, 239], "featur": [87, 88, 131, 139, 151, 173, 197, 198, 203, 204, 205, 209, 211, 213, 214, 216, 219, 222, 232, 233, 234, 236], "formal": [87, 93, 131, 139, 151, 191, 208], "rapid": [87, 222], "expans": 87, "demand": [87, 242], "lack": [87, 209, 210], "harden": 87, "acut": 87, "ever": [87, 131, 139, 150, 151, 203, 213], "project": [87, 88, 197, 198, 208, 214, 216, 231, 233, 235, 236], "horizon": 87, "resili": [87, 221], "few": [87, 95, 131, 175, 198, 203, 213, 236], "best": [87, 193, 194, 197, 204, 213, 219, 223, 243, 246], "core": [87, 88, 196, 198, 203, 204, 206, 208, 210, 216, 219, 221, 232, 235, 236, 244], "addition": [87, 93, 131, 181, 189, 200, 213], "promot": [87, 131, 139, 141, 232, 236], "plan": [87, 95, 221], "good": [87, 95, 131, 196, 197, 203, 207, 209, 210, 213, 216, 224, 244, 245], "holist": 87, "interact": [87, 167, 198, 233, 242, 245], "addit": [87, 95, 131, 142, 182, 199, 204, 206, 207, 208, 209, 211, 213, 224, 227, 232, 240, 245], "experi": [87, 206, 210, 213, 236], "garner": 87, "year": [87, 197, 215, 232, 233, 234], "particip": [87, 178, 212, 232, 235], "executor": 87, "effort": [87, 197, 198, 213, 221, 232, 236], "2011": [87, 208, 209], "sutton": 87, "stroustrup": 87, "guid": [87, 138, 151, 206, 209, 221, 227], "particular": [87, 120, 121, 126, 164, 190, 196, 198, 203, 204, 205, 209, 210, 213, 214, 219, 223, 224, 227, 228, 235, 236, 241, 245], "constraint": [87, 189, 203], "axiom": 87, "philosophi": 87, "focus": [87, 219], "balanc": [87, 95], "flexibl": [87, 131, 205], "eas": 87, "learn": [87, 131, 209], "far": [87, 95, 208, 213, 245], "though": [87, 139, 198, 247], "pure": [87, 205, 206, 207], "veri": [87, 95, 198, 208, 209, 211, 214, 241], "slightli": [87, 205, 219], "thing": [87, 131, 166, 191, 197, 198, 205, 207, 208, 210, 211, 213, 219], "By": [87, 198, 203, 208, 209, 210, 211, 213], "minim": [87, 197, 200, 204, 209, 232], "cognit": 87, "perhap": 87, "import": [87, 198, 203, 205, 208, 209, 212, 213, 224, 232, 236, 240, 243], "subsumpt": 87, "hierarchi": [87, 131, 203, 210, 221], "branch": [87, 155, 157, 158, 159, 160, 203, 210, 216, 228, 232, 234, 235, 236], "width": [87, 211, 234], "roughli": [87, 203, 233], "speak": [87, 95, 207], "high": [87, 95, 156, 197, 203, 206, 210, 211, 213, 214, 215, 232], "major": [87, 88, 197, 205, 211, 213, 219, 221, 232, 235, 236], "visibl": [87, 131, 139], "minor": [87, 88, 197, 232], "memorylayout": 87, "taskschedul": [87, 95], "treat": [87, 139, 208, 209, 236], "kokkos_concept": 87, "enumer": [87, 197], "iterationpattern": 87, "question": [87, 206, 219, 224, 232, 233], "friend": [87, 95, 131], "rather": [87, 95, 131, 139, 204, 214], "alik": 87, "extern": [87, 95, 166, 198, 213, 216, 217, 235, 248], "off": [87, 204, 208, 213, 222, 223, 246], "look": [87, 131, 204, 207, 209, 211, 212, 213, 223], "regular": [87, 95, 213, 232], "is_integral_v": 87, "scratch_memory_spac": [87, 131, 155, 203], "str": [87, 131, 204], "ostream": [87, 131], "ostr": [87, 131], "print_configur": [87, 131, 133], "ve": [87, 207, 227], "extrapol": 87, "progress": [87, 208, 210, 232, 233, 234], "eventu": [87, 197], "further": [87, 149, 198, 203, 207, 211, 213, 232, 236, 241, 246], "cannot": [87, 131, 132, 136, 140, 147, 178, 190, 204, 207, 211, 224, 232, 246], "constrain": [87, 210], "known": [87, 141, 142, 208, 212, 217, 219, 221, 222, 228, 234, 241], "decid": [87, 208, 209, 235, 236], "argu": 87, "around": [87, 185, 198, 205, 207, 213, 228, 238, 241, 243, 247], "wherebi": 87, "meet": [87, 93, 131, 153, 155, 181, 188, 219, 224, 232, 233, 235], "definit": [87, 123, 170, 191, 208, 209, 224, 240, 241, 245, 247], "practic": [87, 95, 131, 139, 142, 151, 165, 189, 206, 211, 213, 243, 245], "converg": [87, 206], "relev": [87, 104, 106, 107, 221, 232, 241], "site": [87, 236], "artifact": 87, "assess": [87, 233], "intent": [87, 197, 213, 219, 239], "expol": 87, "resulttyp": 87, "executionspaceof": 87, "executionpolicyof": 87, "impos": [87, 213], "kokkos_parallel": 87, "technic": [87, 213, 214, 223], "correct": [87, 90, 95, 134, 181, 198, 203, 207, 209, 212, 213, 219, 227, 233, 236], "rvalu": 87, "wouldn": [87, 200], "breviti": 87, "parallelfor": 87, "parallelscan": 87, "parallelscanwithtot": 87, "red": 87, "executionspaceofreduct": 87, "kokkos_parallel_reduc": 87, "parallelreduc": 87, "closur": [87, 155, 203, 209], "implexecutionspaceof": 87, "exclud": [87, 197, 209, 224], "uniquetoken": 87, "add": [87, 123, 125, 148, 191, 196, 197, 198, 201, 203, 205, 208, 211, 213, 214, 219, 220, 222, 224, 227, 232, 238, 245, 246], "uniquetokenexecutionspac": 87, "uniquetokenscop": 87, "itok": 87, "gtok": 87, "copyconstruct": 87, "defaultconstruct": 87, "concret": [87, 208], "teampolicyintern": [87, 217], "nice": [87, 166, 211, 219], "could": [87, 156, 166, 197, 200, 207, 208, 210, 212, 213, 232], "refactor": 87, "openmptargetspac": 87, "mem": [87, 193, 195], "dealloc": [87, 127, 128, 129, 130, 139, 189, 190, 205, 212, 213, 219, 244], "implmemoryspac": 87, "sharedallocationrecord": 87, "get_label": 87, "allocate_track": 87, "reallocate_track": 87, "deallocate_track": 87, "print_record": 87, "get_record": 87, "mem1": 87, "mem2": 87, "implrelatablememoryspac": 87, "deepcopi": [87, 93], "verifyexecutioncanaccessmemoryspac": 87, "verifi": [87, 232, 236], "exec": [87, 154, 223], "think": [87, 95, 134, 207, 213, 238], "achiev": [87, 139, 203, 205, 213, 236, 240], "signific": [87, 140, 213, 243, 245], "dispar": 87, "teamthreadrangeboundariesstruct": [87, 153], "teamvectorrangeboundariesstruct": 87, "basicexecutionpolici": 87, "index_typ": [87, 151, 154, 156, 189], "cours": 87, "execution_polici": [87, 154, 179], "weren": 87, "mayb": 87, "chunkedexecutionpolici": 87, "set_chunk_s": [87, 154, 156, 217], "complic": [87, 207, 209, 213], "pretti": [87, 95, 131], "straightforward": [87, 181, 240, 241], "iteratetil": 87, "seem": [87, 214], "kokkos_openmp_parallel": 87, "were": [87, 88, 131, 141, 142, 143, 195, 207, 208, 236], "conceptu": [87, 244], "surfac": 87, "area": [87, 130], "Of": [87, 208, 222], "d": [87, 157, 161, 177, 185, 188, 197, 201, 202, 203, 207, 208, 209, 211, 212, 213, 224, 240], "still": [87, 88, 165, 166, 196, 197, 200, 203, 207, 211, 213, 243], "shortcut": [87, 131, 151], "probabl": [87, 95, 203, 209, 211, 222], "teach": [87, 209], "advanc": [87, 131, 209, 236, 248], "ax": [87, 243], "me": 87, "why": [87, 204, 219, 223, 243], "mind": [87, 207, 213], "axi": 87, "extend": [87, 206], "up": [87, 95, 135, 138, 140, 183, 184, 185, 189, 197, 198, 203, 204, 209, 210, 213, 222, 223, 236, 246], "overhead": [87, 95, 147, 209, 211, 213, 240], "describ": [87, 95, 123, 131, 139, 151, 152, 153, 154, 156, 193, 195, 199, 206, 207, 208, 210, 211, 215, 216, 222, 224, 229, 236, 243, 244, 246], "isn": [87, 95, 131, 207, 213, 223], "concern": [87, 206, 208, 241, 245], "simplest": [87, 203, 204, 241], "But": [87, 199, 203, 213, 245], "todo": 87, "annot": [88, 207, 224], "kokkos_vers": 88, "40201": 88, "kokkos_version_major": 88, "kokkos_version_minor": 88, "kokkos_version_patch": 88, "10000": [88, 209, 213], "patch": [88, 232], "denot": [88, 143, 156, 189], "40199": 88, "post": [88, 150, 232, 245], "iostream": [88, 137, 166, 175], "static_assert": [88, 131, 166, 182, 212, 223, 242], "30700": 88, "endif": [88, 170, 198, 205], "meant": 88, "kokkos_version_less": 88, "kokkos_version_less_equ": 88, "kokkos_version_great": 88, "kokkos_version_greater_equ": 88, "kokkos_version_equ": 88, "kokkos_version_": 88, "against": [88, 197, 198, 203, 214, 216, 224, 234, 235, 247], "saniti": 88, "illustr": [88, 198, 203, 213, 214, 239], "do_work": [88, 164], "rad": 88, "fall": [88, 196, 203, 206, 213, 235, 246], "bore": 88, "stuff": [88, 147, 175, 211], "kokkos_enable_debug": [88, 170, 222], "kokkos_enable_debug_bounds_check": [88, 222], "kokkos_enable_debug_dualview_modify_check": [88, 222], "kokkos_enable_deprecated_code_3": [88, 222], "kokkos_enable_deprecation_warn": [88, 222], "warn": [88, 133, 189, 197, 204, 213, 214, 217, 222, 228, 232, 234], "kokkos_enable_tun": [88, 222], "bind": [88, 166, 204, 221, 222, 224, 239], "tune": [88, 198, 204, 214, 222, 240, 248], "2422": 88, "kokkos_enable_complex_align": 88, "align": [88, 129, 190, 193, 195, 211, 213, 217, 235, 244], "kokkos_enable_aggressive_vector": [88, 222], "assumpt": [88, 204], "ignor": [88, 95, 203, 211], "aggress": [88, 213, 222], "ifdef": [88, 205], "kokkos_enable_seri": [88, 198, 222], "kokkos_enable_openmp": [88, 198, 222], "kokkos_enable_openmptarget": [88, 222], "kokkos_enable_thread": [88, 198, 222], "kokkos_enable_cuda": [88, 198, 222], "kokkos_enable_hip": [88, 198, 222], "kokkos_enable_hpx": [88, 222], "kokkos_enable_sycl": [88, 198, 222], "kokkos_enable_cuda_constexpr": [88, 222], "kokkos_enable_cuda_lambda": [88, 222], "kokkos_enable_cuda_ldg_intrinsinc": 88, "ldg": 88, "intrins": [88, 123, 140, 193, 194, 199, 205, 211, 213, 239], "kokkos_enable_cuda_relocatable_device_cod": [88, 222], "relocat": [88, 138, 214, 222, 235], "kokkos_enable_cuda_uvm": [88, 222, 237], "kokkos_enable_hip_multiple_kernel_instanti": [88, 222], "instanti": [88, 197, 207, 208, 210, 211, 213, 222, 223], "improv": [88, 197, 206, 209, 210, 222, 224, 228, 233, 240], "kokkos_enable_hip_relocatable_device_cod": [88, 222], "latest": [88, 92, 197, 227, 228], "path": [88, 133, 197, 198, 204, 222, 232, 236, 241], "expos": [88, 131, 202, 203, 210, 219, 240], "kokkos_enable_cxx14": 88, "kokkos_enable_cxx17": 88, "kokkos_enable_cxx20": 88, "inform": [88, 123, 170, 197, 199, 204, 207, 208, 210, 213, 214, 218, 223, 224, 227, 232, 233, 236, 238, 241, 244], "kokkos_enable_hwloc": [88, 198, 222], "libhwloc": [88, 198], "numa": 88, "kokkos_enable_libdl": [88, 222], "link": [88, 92, 189, 198, 214, 219, 221, 223, 224, 227, 236, 240], "linker": [88, 198, 214], "libdl": [88, 198, 222], "kokkos_enable_libquadmath": 88, "gcc": [88, 198, 214, 223, 228, 234, 235], "quad": 88, "precis": [88, 198, 207, 239, 241, 245], "math": [88, 89, 211, 217, 221, 248], "kokkos_enable_onedpl": [88, 222], "onedpl": [88, 222, 223], "tpl": [88, 198, 214, 223], "kokkos_arch_armv80": [88, 222], "armv8": [88, 198, 222], "kokkos_arch_armv8_thunderx": [88, 222], "cavium": [88, 236], "thunderx": [88, 198, 236], "kokkos_arch_armv81": [88, 222], "kokkos_arch_armv8_thunderx2": [88, 222], "thunderx2": [88, 222], "kokkos_arch_amd_avx2": 88, "avx2": [88, 193], "zen": [88, 222], "kokkos_arch_amd_gfx906": [88, 222], "amd": [88, 227, 232, 235], "mi50": [88, 222], "mi60": [88, 222], "kokkos_arch_amd_gfx908": [88, 222], "mi100": [88, 222], "kokkos_arch_amd_gfx90a": [88, 222], "mi200": [88, 222], "seri": [88, 206, 222, 236], "kokkos_arch_amd_gfx940": [88, 222], "mi300a": [88, 222], "kokkos_arch_amd_gfx942": [88, 222], "mi300x": [88, 222], "kokkos_arch_amd_gfx942_apu": [88, 222], "kokkos_arch_amd_gfx1030": [88, 222], "v620": [88, 222], "w6800": [88, 222], "kokkos_arch_amd_gfx1100": [88, 222], "7900xt": [88, 222], "kokkos_arch_amd_gfx1103": [88, 222], "phoenix": [88, 222], "apu": [88, 222], "kokkos_arch_amd_gpu": 88, "gfx90a": [88, 222], "mi250x": 88, "acceler": [88, 208, 209, 222, 236, 243, 245], "kokkos_arch_avx": 88, "avx": 88, "kokkos_arch_avx2": 88, "kokkos_arch_avx512xeon": 88, "skylak": [88, 222], "avx512": [88, 193], "kokkos_arch_knc": [88, 222], "intel": [88, 198, 203, 211, 227, 228, 232, 234, 235, 236], "knight": [88, 222, 236], "xeon": [88, 198, 222, 236], "phi": [88, 141, 198], "kokkos_arch_avx512m": 88, "mic": 88, "kokkos_arch_power8": [88, 222], "ibm": [88, 198, 228, 234], "power8": [88, 198, 222, 234], "kokkos_arch_power9": [88, 222], "power9": [88, 222], "kokkos_arch_intel_gen": [88, 222], "kokkos_arch_intel_dg1": [88, 222], "iri": [88, 222], "xemax": 88, "kokkos_arch_intel_gen9": [88, 222], "gen9": [88, 222], "kokkos_arch_intel_gen11": [88, 222], "gen11": [88, 222], "kokkos_arch_intel_gen12lp": [88, 222], "gen12lp": [88, 222], "kokkos_arch_intel_xehp": [88, 222], "xe": [88, 222], "hp": [88, 222], "kokkos_arch_intel_pvc": [88, 222], "pont": [88, 222], "vecchio": [88, 222], "kokkos_arch_intel_gpu": 88, "kokkos_arch_kepl": 88, "nvidia": [88, 198, 203, 210, 211, 223, 227, 232, 235, 236, 241], "kepler": [88, 198, 222], "kokkos_arch_kepler30": [88, 222], "cc": [88, 198, 239], "kokkos_arch_kepler32": [88, 222], "kokkos_arch_kepler35": [88, 222], "kokkos_arch_kepler37": [88, 222], "kokkos_arch_maxwel": 88, "maxwel": [88, 198, 222], "kokkos_arch_maxwell50": [88, 222], "kokkos_arch_maxwell52": [88, 222], "kokkos_arch_maxwell53": [88, 222], "kokkos_arch_navi": 88, "navi": 88, "kokkos_arch_navi1030": 88, "gfx1030": [88, 222], "kokkos_arch_pasc": 88, "pascal": [88, 222], "kokkos_arch_pascal60": [88, 222], "kokkos_arch_pascal61": [88, 222], "kokkos_arch_volta": 88, "volta": [88, 222], "kokkos_arch_volta70": [88, 222], "kokkos_arch_volta72": [88, 222], "kokkos_arch_turing75": [88, 222], "ture": [88, 222], "kokkos_arch_amper": 88, "amper": [88, 222], "kokkos_arch_ampere80": [88, 222], "kokkos_arch_ampere86": [88, 222], "kokkos_arch_ada89": [88, 222], "ada": [88, 222], "kokkos_arch_hopp": 88, "hopper": [88, 222], "kokkos_arch_hopper90": [88, 222], "kokkos_arch_amd_zen": 88, "kokkos_arch_amd_zen2": 88, "zen2": 88, "kokkos_arch_amd_zen3": 88, "zen3": 88, "kokkos_arch_vega": 88, "vega": 88, "kokkos_arch_vega900": [88, 222], "mi25": [88, 222], "gfx900": [88, 222], "kokkos_arch_vega906": [88, 222], "gfx906": [88, 222], "kokkos_arch_vega908": [88, 222], "gfx908": [88, 222], "kokkos_arch_vega90a": [88, 222], "kokkos_mathematicalconst": [89, 141, 217], "backport": [89, 232], "sqrt2": [89, 141], "kokkos_mathematicalfunct": [89, 142, 217], "consist": [89, 142, 177, 198, 203, 208, 210, 211, 217, 219, 224, 235, 241], "portabl": [89, 131, 141, 196, 205, 206, 208, 209, 211, 215, 217, 223, 232, 239, 240, 242, 244, 248], "fab": [89, 142], "sqrt": [89, 142, 193, 195, 211, 223], "sin": [89, 141, 142, 193], "kokkos_numerictrait": [89, 143, 217], "ad": [89, 104, 106, 107, 143, 177, 195, 197, 198, 203, 204, 207, 211, 213, 214, 219, 223, 232, 246], "23": [89, 143, 189, 215, 220, 221, 228, 235], "numeric_limit": [89, 143], "kokkos_bitmanipul": [89, 140], "individu": [89, 95, 142, 143, 205, 214, 224, 236, 245], "compos": [90, 241], "team_size_max": [90, 156], "team_size_recommend": [90, 144, 145, 146, 156], "strive": [92, 211], "howev": [92, 95, 131, 165, 203, 205, 206, 207, 208, 209, 210, 211, 213, 224, 228, 236, 240], "deviat": 92, "approach": [92, 95, 196, 206, 208, 209, 211, 213, 245, 248], "section": [92, 163, 164, 198, 203, 205, 207, 208, 209, 213, 222, 224, 234, 236], "usag": [92, 94, 133, 135, 136, 138, 147, 148, 162, 167, 177, 193, 194, 195, 198, 205, 210, 212, 213, 214, 217, 219, 239], "guidanc": [92, 216], "relationship": [93, 95, 165, 203, 213], "entiti": [93, 95, 197, 208, 224], "msp1": 93, "msp2": 93, "retriev": [93, 95, 154, 200, 246], "v1": [93, 236], "word": [93, 131, 139, 151, 198, 211, 222], "shape": 93, "attribut": [93, 210, 211, 213, 217, 224], "intercessori": 93, "hipspac": [94, 217], "hiphostpinnedspac": 94, "hipmanagedspac": [94, 223], "sycldeviceusmspac": 94, "syclhostusmspac": 94, "syclsharedusmspac": 94, "sharedspac": [94, 190, 207, 213, 217, 237], "sharedhostpinnedspac": [94, 190, 242], "memoryspaceconcept": [94, 181], "lightweight": 95, "substanti": 95, "futur": [95, 206, 210, 213, 226, 232, 234, 246], "Not": [95, 213, 224], "too": [95, 147, 156, 207, 213, 219, 228], "small": [95, 136, 139, 209, 219, 246], "inher": 95, "plenti": 95, "scale": [95, 131, 198, 236], "easier": [95, 209, 216, 219, 242, 244], "hierarch": [95, 157, 158, 159, 160, 161, 162, 208, 209, 210, 226, 246, 248], "ordinari": [95, 209], "portion": [95, 211, 224], "haev": 95, "output": [95, 131, 137, 166, 185, 196, 202, 210, 236, 240], "mytask": 95, "produc": [95, 206, 209, 211, 241, 243], "analog": [95, 177, 182], "task_spawn": [95, 217, 246], "host_spawn": [95, 217], "tasksingl": [95, 217, 246], "taskteam": [95, 148, 149, 150], "former": [95, 101, 102, 198, 209, 213, 236], "worker": [95, 149, 246], "spawn": [95, 246], "basicfutur": [95, 217, 246], "when_al": [95, 217, 246], "scheduler_typ": 95, "discuss": [95, 208, 211, 213, 219, 224, 232, 233], "fut": 95, "mytaskfunctor": 95, "readi": [95, 197, 213, 219], "earliest": 95, "fut2": 95, "myothertaskfunctor": 95, "my_funct": [95, 131], "sched": 95, "my_result_typ": 95, "my_task_result": 95, "ff": [95, 234], "better": [95, 196, 198, 203, 213, 214, 229, 243], "never": [95, 131, 166, 197, 198, 211, 213, 214], "share": [95, 155, 196, 198, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 219, 221, 224, 232, 240, 241], "transit": [95, 222, 232], "undefin": [95, 129, 130, 133, 189, 205, 213, 223, 247], "worst": 95, "kind": [95, 208, 209, 212, 224, 236], "bug": [95, 131, 138, 197, 207, 219, 228, 232, 233, 234], "segfault": [95, 214], "hour": [95, 197], "is_nul": 95, "attempt": [95, 208, 222], "poll": 95, "is_readi": [95, 246], "forbidden": 95, "anywher": 95, "abil": [95, 148, 208, 211, 239], "yet": [95, 130, 173, 191, 197, 206, 208, 211, 212, 232, 234], "extrem": [95, 207, 208, 213], "expens": [95, 212], "sledgehamm": 95, "sparingli": 95, "alon": [95, 198, 224], "pend": 95, "decis": [95, 203, 219, 232, 241], "piec": 95, "help": [95, 138, 201, 204, 206, 207, 209, 213, 214, 223], "cost": [95, 196, 206, 212, 213], "tradit": [95, 139], "reus": [95, 203, 245], "successor": 95, "respawn": [95, 217, 246], "future_typ": [95, 246], "got": 95, "redund": [95, 138, 217, 241], "lead": [95, 131, 197, 203, 207, 213, 214, 232, 242], "lazi": 95, "third": [95, 198, 203, 205, 208, 212, 214, 223, 224, 232, 240], "serv": [95, 131, 232], "observ": [95, 147, 207], "effect": [95, 131, 147, 189, 197, 198, 203, 207, 209, 210, 211, 218, 245], "taskprior": [95, 217], "low": [95, 196, 206, 209, 211, 213, 223], "boolean": [96, 131, 183, 184, 185, 204, 209, 211], "kokkos_assert": [97, 197, 227], "kokkos_swap": [97, 166, 217], "device_id": [97, 132, 133, 175, 176], "num_devic": [97, 172, 176, 217], "num_thread": [97, 132, 133, 172, 175, 204], "critic": [98, 208, 232], "_view": 98, "awar": [98, 189, 203, 208, 213, 215, 222, 240], "bundl": [98, 190], "loos": [98, 181, 191], "behav": [98, 182, 191, 211, 212, 213], "atomic_assign": [99, 217], "kokkos_atom": [100, 101, 102, 103, 105, 108, 217], "obj": [100, 101, 102, 103, 105, 108], "type_identity_t": [100, 101, 102, 103, 108], "whose": [100, 105, 108, 167, 197, 209, 212, 213, 240, 244], "regardless": [101, 134, 208], "bitwis": [101, 102, 110, 111, 140, 213], "held": [101, 103, 105, 108, 232], "was_exchang": 102, "prefer": [102, 131, 197, 204, 213, 214, 222, 223, 224, 247], "ptr_to_valu": [104, 106, 107], "update_valu": [104, 106, 107], "previou": [104, 136, 141, 142, 156, 181, 187, 203, 217, 234], "atomic_fetch_add": [104, 106, 196, 203], "tmp": [104, 203, 240], "atomic_fetch_and": 104, "atomic_fetch_div": 104, "divid": [104, 107, 148, 149, 150, 171, 201, 202, 238, 243], "atomic_fetch_lshift": 104, "atomic_fetch_max": 104, "atomic_fetch_min": 104, "atomic_fetch_mul": 104, "atomic_fetch_mod": 104, "atomic_fetch_or": 104, "atomic_fetch_rshift": 104, "atomic_fetch_sub": [104, 106], "subtract": [104, 106, 107], "atomic_fetch_xor": 104, "atomic_and": 106, "atomic_decr": 106, "atomic_incr": [106, 196, 217], "atomic_max": 106, "atomic_min": 106, "atomic_or": 106, "atomic_sub": 106, "atomic_add_fetch": 107, "atomic_and_fetch": 107, "atomic_div_fetch": 107, "atomic_lshift_fetch": 107, "atomic_max_fetch": 107, "atomic_min_fetch": 107, "atomic_mul_fetch": 107, "atomic_mod_fetch": 107, "atomic_or_fetch": 107, "atomic_rshift_fetch": 107, "atomic_sub_fetch": 107, "atomic_xor_fetch": 107, "conjunct": [109, 138, 153, 190, 196, 198, 203, 232], "AND": [110, 112, 224], "remove_cv": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125], "result_view_typ": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 202], "value_": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 154, 202], "local": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 133, 138, 139, 149, 150, 198, 203, 204, 208, 209, 210, 212, 213, 223, 234, 236, 242], "reduction_ident": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 149, 150, 199, 201, 209], "resid": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 139, 207, 210, 242], "customtyp": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125], "_min": [114, 115, 118, 119], "vallocscalar": [115, 117, 124, 203], "loc": [115, 117, 126, 200], "_max": [115, 116, 117, 118, 119], "idx3d_t": 117, "minloc_t": 117, "minlocval_t": 117, "lf": [117, 149, 200], "minmaxscalar": [118, 124, 203], "min_val": [118, 119, 120, 121, 200], "max_val": [118, 119, 120, 121, 200], "minmaxlocscalar": [119, 124, 203], "min_loc": [119, 120, 200], "max_loc": [119, 120, 200], "minvalu": [120, 121], "maxvalu": [120, 121], "hypothet": 123, "brief": [123, 229, 232], "build": [123, 131, 182, 189, 197, 203, 204, 206, 209, 216, 221, 222, 227, 234, 236, 248], "callback": 123, "monoid": 123, "val1": 123, "val2": 123, "ident": [123, 131, 149, 150, 154, 156, 181, 201, 203, 204, 208, 209, 213, 238], "el": [123, 222], "under": [123, 182, 197, 198, 209, 213, 216, 224, 232, 236], "reducesum": 123, "lval": 123, "l": [123, 138, 142, 159, 166, 208, 234], "resultvalu": 126, "resultindex": 126, "shrink": [127, 186, 187], "throw": [128, 129, 130, 156, 205, 213, 223], "runtime_error": 128, "failur": [128, 129, 130, 156, 189, 224, 234, 235], "uniniti": [129, 152, 154, 156, 181, 186, 187, 213], "metadata": 129, "succe": 129, "suitabl": [129, 197, 209, 219, 240], "rawmemoryallocationfailur": [129, 130], "thrown": [129, 137], "memadvis": [129, 130, 189], "tool": [129, 131, 133, 148, 149, 150, 197, 204, 221, 222, 227, 248], "kokkosp": 129, "On": [129, 130, 196, 198, 203, 207, 212, 222], "leak": [129, 130, 213], "freed": [130, 203, 213], "new_siz": 130, "invalid": [130, 213, 217], "rare": [131, 139], "offload": [131, 222], "talk": [131, 139, 151], "theoret": [131, 139, 151], "treatment": [131, 139, 151], "disclaim": [131, 139, 151, 224], "term": [131, 139, 151, 208, 213, 216, 224, 232, 245], "anyon": [131, 139, 151, 216], "who": [131, 139, 151, 206, 213, 232, 233, 235, 241, 244], "knew": [131, 139, 151], "confus": [131, 139, 151, 213], "often": [131, 138, 139, 151, 189, 190, 196, 203, 205, 206, 207, 208, 209, 211, 213, 236, 241], "shini": [131, 139, 151], "surpris": 131, "answer": [131, 203, 213], "ll": [131, 207, 213, 227], "nowher": 131, "intermedi": [131, 209], "incompat": [131, 198, 222], "explicit": [131, 142, 148, 154, 183, 184, 185, 189, 203, 209, 210, 217, 223, 232], "simpli": [131, 138, 181, 198, 203, 205, 207, 211, 214, 239, 240, 241, 245], "mental": [131, 213], "exercis": [131, 224, 236], "translat": [131, 224], "tend": [131, 196, 210], "verbos": 131, "much": [131, 148, 156, 197, 202, 206, 208, 209, 211, 213, 219], "risk": [131, 197, 219, 224], "lose": 131, "caution": [131, 198], "optiopn": 131, "event": [131, 139, 153, 203, 224, 236], "unspecifi": [131, 166, 169, 189, 210], "care": [131, 197, 211, 213], "print": [131, 133, 138, 168, 177, 185, 204, 222], "arraylayout": 131, "recommend": [131, 156, 203, 207, 209, 211, 213, 227, 228, 236], "scratchmemoryspac": [131, 217], "ex2": 131, "ex1": 131, "usabl": [131, 140, 213, 217], "shorthand": [131, 139], "lh": [131, 193, 194], "sign": [131, 189, 204, 213, 227], "typetrait": [131, 139], "num_numa": 132, "ndevic": 132, "skip_devic": 132, "disable_warn": [132, 133], "favor": [132, 207], "One": [132, 156, 196, 198, 200, 203, 205, 207, 211, 213, 240, 241, 245], "distinguish": [132, 143, 209], "kokkoscor": 133, "set_num_thread": [133, 134, 136, 204], "set_device_id": [133, 204], "set_disable_warn": [133, 136], "introduc": [133, 189, 203, 207, 209, 210, 219, 235, 242], "unset": 133, "let": [133, 155, 198, 203, 205, 207, 208, 209, 212, 213, 241], "tabl": [133, 198, 204, 207, 213, 236], "set_parameter_nam": 133, "parameter_typ": 133, "parameter_nam": 133, "has_parameter_nam": 133, "get_parameter_nam": 133, "summar": 133, "id": [133, 163, 172, 175, 176, 203, 204, 205], "minu": 133, "map_device_id_bi": 133, "mpi_rank": [133, 204], "round": [133, 142, 204, 208], "robin": [133, 204], "mpi": [133, 135, 136, 196, 198, 204, 206, 212, 214, 222, 223, 237, 244, 248], "disabl": [133, 198, 204, 222, 223], "messag": [133, 204, 206, 212, 232, 234, 236], "configur": [133, 138, 204, 211, 220, 222, 224, 227, 232, 234, 235, 236, 242], "tune_intern": 133, "autotun": [133, 204], "heurist": [133, 204], "tools_lib": 133, "full": [133, 191, 193, 196, 204, 205, 207, 210, 211], "ld_library_path": [133, 204], "tools_help": 133, "command": [133, 134, 136, 198, 214, 227, 236], "line": [133, 134, 136, 139, 196, 198, 213, 219, 227, 235, 247], "tools_arg": 133, "set_print_configur": 133, "set_map_device_id_bi": [133, 134, 136], "environ": [133, 135, 136, 137, 139, 172, 175, 176, 198, 205, 209, 213, 214, 223, 227, 234, 236], "raii": [134, 163, 164], "is_inti": 134, "is_fin": [134, 135, 136, 150, 170], "lifetim": [134, 203], "charact": [134, 224], "uncondition": [134, 217], "precondit": 134, "is_initi": [134, 135, 136, 170], "unique_ptr": 134, "make_opt": 134, "nullopt": 134, "clean": [135, 234], "destroi": [135, 163, 190, 207, 213, 229], "ill": 135, "mpi_fin": [135, 204], "push_finalize_hook": 135, "regist": [135, 137, 177, 195, 196, 203, 211, 220], "invoc": 135, "erron": 136, "pars": [136, 198, 204], "whenev": [136, 207, 213], "seen": [136, 197, 206, 236], "decrement": [136, 189, 196, 213], "implicitli": [136, 181, 189], "multibyt": 136, "backward": [136, 193, 195, 226], "mpi_init": [136, 204], "enter": [137, 205, 206, 213, 246], "exit": [137, 164, 204], "my_hook": 137, "cruel": 137, "world": [137, 177, 227], "goodby": [137, 227], "kokkos_macro": [138, 217], "deal": [138, 181, 207, 212, 247, 248], "fullfil": 138, "__host__": [138, 205, 223], "__device__": [138, 142, 205, 223], "markup": [138, 209], "primarili": [138, 204, 232, 233], "hurt": [138, 200], "bloat": 138, "excess": 138, "sycl_extern": 138, "unit": [138, 139, 198, 203, 205, 206, 208, 233], "count_even": 138, "lcount": 138, "scope_guard": 138, "captur": [138, 148, 203, 209, 213, 219, 239, 245], "claus": [138, 203, 209, 216, 245], "syntax": [138, 203, 209, 212, 213, 222, 227], "print_data": 138, "data_copi": 138, "deduct": 138, "2f": 138, "side": [139, 147, 170, 189, 203, 209, 210, 212, 233], "virtual": [139, 190, 213, 226], "xnack": 139, "movement": 139, "os": 139, "driver": [139, 236, 242], "moment": [139, 198, 213], "preprocessor": [139, 198, 214, 247], "kokkos_has_shared_spac": 139, "has_shared_spac": [139, 242], "stai": [139, 150], "nevertheless": [139, 203, 207, 208, 213, 222], "kokkos_has_shared_host_pinned_spac": 139, "has_shared_host_pinned_spac": 139, "bit_cast": 140, "byteswap": 140, "has_single_bit": 140, "bit_ceil": 140, "bit_floor": 140, "bit_width": 140, "rotl": 140, "rotr": 140, "countl_zero": 140, "countl_on": 140, "countr_zero": 140, "countr_on": 140, "popcount": 140, "reinterpret": 140, "represent": [140, 211, 213], "counterpart": 140, "_builtin": 140, "suffix": [140, 142], "magic": 140, "log2": [141, 142], "log10": [141, 142, 193], "inv_pi": 141, "inv_sqrtpi": 141, "ln2": 141, "ln10": 141, "sqrt3": 141, "inv_sqrt3": 141, "egamma": 141, "toolchain": [141, 198, 223], "henc": [141, 207, 209, 213, 223], "pi_v": 141, "motiv": [142, 206, 211, 219, 244], "borrow": 142, "llvm": [142, 224], "compilecudawithllvm": 142, "clang": [142, 198, 214, 228, 234, 235, 248], "ok": [142, 157, 159, 161, 189, 213, 223], "everyth": [142, 211, 213, 219], "nvcc": [142, 198, 228, 234], "overrid": [142, 198, 207, 214], "sinf": 142, "goal": [142, 203, 205, 206, 219, 232, 236, 240, 244], "cmath": 142, "sqrtf": 142, "sqrtl": 142, "integraltyp": 142, "arithmet": [142, 143, 165], "reader": [142, 197, 198, 206, 208], "cpprefer": 142, "com": [142, 215, 220, 221, 223, 227, 233, 234, 235], "fmod": 142, "remaind": 142, "remquo": 142, "fma": [142, 193], "fmax": 142, "fmin": 142, "fdim": 142, "nan": 142, "exp": [142, 193], "exp2": [142, 193], "expm1": 142, "log": [142, 193, 234], "log1p": 142, "exponenti": 142, "pow": [142, 193], "cbrt": [142, 193], "hypot": [142, 193], "co": [142, 193, 197, 232], "tan": [142, 193], "asin": [142, 193], "aco": [142, 193], "atan": [142, 193], "atan2": [142, 193], "trigonometr": 142, "sinh": [142, 193], "cosh": [142, 193], "tanh": [142, 193], "asinh": [142, 193], "acosh": [142, 193], "atanh": [142, 193], "hyperbol": 142, "erf": [142, 193], "erfc": [142, 193], "tgamma": [142, 193], "lgamma": [142, 193], "gamma": 142, "ceil": [142, 193], "floor": [142, 193], "trunc": [142, 193], "lround": 142, "llround": 142, "nearbyint": 142, "rint": 142, "lrint": 142, "llrint": 142, "frexp": 142, "ldexp": 142, "modf": 142, "scalbn": 142, "scalbln": 142, "ilog": 142, "logb": 142, "nextaft": 142, "nexttoward": 142, "copysign": [142, 193], "fpclassifi": 142, "isfinit": 142, "isinf": 142, "isnan": 142, "isnorm": 142, "signbit": 142, "isgreat": 142, "isgreaterequ": 142, "isless": 142, "islessequ": 142, "islessgreat": 142, "isunord": 142, "classif": 142, "4767": 142, "feel": [142, 215], "keep": [142, 207, 212, 213, 219, 244], "track": [142, 219, 224, 232, 233], "bewar": [142, 207], "unqualifi": [142, 223], "qualif": [142, 223], "p1841": 143, "break": [143, 189, 197, 214], "monolith": 143, "apart": [143, 196, 197, 213], "infin": 143, "finite_min": 143, "finite_max": 143, "epsilon": 143, "round_error": 143, "norm_min": 143, "denorm_min": 143, "reciprocal_overflow_threshold": 143, "quiet_nan": 143, "signaling_nan": 143, "characterist": [143, 208, 210, 213, 236, 246], "digit": 143, "digits10": 143, "max_digits10": 143, "radix": 143, "min_expon": 143, "min_exponent10": 143, "max_expon": 143, "max_exponent10": 143, "finite_min_v": 143, "floatingpoint": 143, "norm_min_v": 143, "finite_max_v": 143, "epsilon_v": 143, "round_error_v": 143, "infinity_v": 143, "quiet_nan_v": 143, "signaling_nan_v": 143, "denorm_min_v": 143, "digits_v": 143, "digits10_v": 143, "max_digits10_v": 143, "radix_v": 143, "min_exponent_v": 143, "min_exponent10_v": 143, "max_exponent_v": 143, "max_exponent10_v": 143, "presenc": [143, 223], "absenc": 143, "has_infin": 143, "enable_if_t": 143, "legacy_std_numeric_limits_infin": 143, "kokkos_execpolici": [144, 145, 146], "policytyp": [144, 145, 146], "recommended_team_s": [144, 145, 146], "outstand": [147, 182, 208, 224], "exec1": 147, "exec2": 147, "touch": [147, 213, 219], "wait": [147, 155, 165, 203, 209, 217, 246], "finish": [147, 148, 182, 196, 209, 213], "asynchron": [148, 149, 182, 208, 209, 213, 222, 223, 243, 248], "calle": 148, "execpolici": [148, 149, 150], "functortyp": [148, 149, 150, 156], "hook": [148, 149, 150, 204], "integertyp": [148, 149, 150], "work_tag": [148, 149, 150, 154, 156], "iN": [148, 149], "loop1": [148, 149, 150], "greet": 148, "taga": 148, "implicit": [148, 153, 158, 160, 162, 166, 189, 203, 209, 239, 243], "tagb": 148, "thread_rank": 148, "loop2": [148, 149], "deduc": [149, 152, 154, 166, 180, 207, 212, 244], "reducerargu": 149, "reducerargumentnonconst": 149, "fulfil": [149, 201, 202], "handletyp": [149, 150], "reducervaluetyp": 149, "value_count": [149, 209], "overwritten": [149, 150, 155, 213], "neutral": [149, 150], "lsum": [149, 153, 158, 160, 162, 203], "lmin": [149, 200], "tagmax": 149, "tagmin": 149, "lmax": 149, "team_rank": [149, 155, 203, 205], "returntyp": 150, "return_valu": 150, "postfix_sum": 150, "prefix_sum": 150, "partial_sum": 150, "li": 150, "domin": [151, 206], "elsewher": 151, "parallel_pattern": 151, "hand": [151, 196, 203, 207, 211, 222], "wavi": 151, "beginn": [151, 227], "tile": [152, 213, 240], "interv": [152, 154, 156], "outer": [152, 203, 213, 240], "inner": [152, 203, 213], "ot": 152, "IT": 152, "tt": 152, "de": [152, 154, 224, 232], "someexecutionspac": [152, 154], "se": [152, 154], "pl0": 152, "pl1": 152, "pl4": 152, "pl5": 152, "ctile": 152, "pc0": 152, "pc1": 152, "pc2": 152, "pc3": 152, "pc4": 152, "pc5": 152, "abegin": 152, "aend": 152, "atil": 152, "pa0": 152, "pa1": 152, "pa2": 152, "pa3": 152, "pa4": 152, "pa5": 152, "tile_typ": 152, "tile_size_recommend": 152, "array_index_typ": 152, "max_total_tile_s": 152, "policy_1": [152, 154, 156, 203], "policy_2": [152, 154, 156, 203], "t0": 152, "t1": [152, 166, 167, 171], "t2": [152, 166, 167, 171, 178], "teammembertyp": [153, 158, 160, 162], "threadvectorrangeboundariesstruct": 153, "threadsinglestruct": 153, "vectorsinglestruct": 153, "team_barri": [153, 155, 157, 158, 159, 160, 161, 162, 203], "encount": [153, 185, 223, 246], "thread_sum": 153, "team_sum": [153, 158, 160, 162, 203], "a_rowsum": [153, 157, 158, 159, 160, 162], "chunksiz": [154, 217], "policytrait": 154, "inherit": [154, 182, 236], "schedule_typ": [154, 156], "iteration_pattern": [154, 156], "launch_bound": [154, 156], "work_begin": 154, "work_end": 154, "work_spac": 154, "discret": [154, 165, 200, 240], "chunk_size_": 154, "workgroup": 154, "6754": 154, "convers": [154, 166, 171, 205, 211, 224, 232, 239, 245], "cs": [154, 209], "rp0": 154, "rp1": 154, "rp2": 154, "rp3": 154, "rp4": 154, "rp5": 154, "rp6": 154, "policy_3": [154, 156, 203], "policy_4": [154, 156], "policy_6": 154, "policy_7": 154, "teamtask": 155, "subject": [155, 173, 197, 213, 224], "leagu": [155, 156, 203, 210, 246], "league_s": [155, 156, 203], "workitem": 155, "team_shmem": [155, 203], "team_scratch": [155, 203], "thread_scratch": 155, "lexic": [155, 197], "arriv": [155, 203], "team_broadcast": 155, "source_team_rank": 155, "var": 155, "broadcast": [155, 203], "reducertyp": 155, "team_reduc": 155, "across": [155, 177, 206, 208, 210, 211, 219, 221], "team_scan": 155, "policy_typ": 155, "set_scratch_s": [155, 156, 203], "4096": 155, "tid": 155, "lid": 155, "scratch_memory_typ": 155, "vector_length": [156, 217], "auto_t": 156, "lazili": 156, "perteamvalu": 156, "per_team": 156, "perthreadvalu": 156, "per_thread": 156, "closest": 156, "bandwidth": [156, 203, 210, 211, 213], "twice": [156, 213], "overwrit": [156, 198, 209], "scratch_size_max": 156, "maxim": [156, 205], "scratch_siz": 156, "team_size_": 156, "team_scratch_s": 156, "thread_scratch_s": 156, "policy_5": 156, "extent_1": [157, 159, 161], "extent_2": [157, 159, 161, 213], "extent_i": [157, 159, 161], "violat": [157, 159, 161, 203, 207, 209, 213], "num": [157, 159, 161, 204, 236], "leaguerank": [157, 159, 161], "teamsum": [157, 159, 161], "threadsum": [157, 161, 162], "leaguesum": [157, 159], "itype1": [158, 160, 162], "itype2": [158, 160, 162], "teamtyp": 159, "vectorsum": [159, 161], "tsum": 162, "kokkos_profiling_profilesect": [163, 217], "stop": 163, "leav": [163, 205, 213, 243], "sectionnam": 163, "createprofilesect": 163, "sectionid": 163, "destroyprofilesect": 163, "startsect": 163, "stopsect": 163, "scopedregion": 163, "ownership": [163, 164, 224], "kokkos_profiling_scopedregion": 164, "push": [164, 205, 228, 234], "pop": 164, "flow": [164, 236], "earli": [164, 208, 235], "regionnam": 164, "pushregion": 164, "popregion": 164, "do_work_v1": 164, "myapp": 164, "cond": 164, "rememb": [164, 207, 213, 236], "do_work_v2": 164, "profilingsect": [164, 217], "weight": 165, "fraction": 165, "is_arithmetic_v": 165, "n_partit": 165, "3rd": 165, "stream": [165, 182, 210, 213, 217, 222, 223, 248], "otherparam": 165, "param": [165, 229], "f1": [165, 246], "f2": [165, 246], "functor1": 165, "functor2": 165, "f3": 165, "functor3": 165, "kokkos_arrai": [166, 217], "embedd": 166, "unlik": 166, "decai": 166, "As": [166, 198, 199, 203, 206, 207, 208, 209, 211, 214, 224, 227, 236, 241], "unscop": 166, "is_nothrow_swappable_v": 166, "swappabl": [166, 178], "remove_cv_t": 166, "to_arrai": 166, "protocol": 166, "00": [166, 232, 234], "kokkos_invalid_index": 166, "proxi": [166, 208, 217], "had": [166, 205, 245], "stide": 166, "embed": [166, 198, 206, 224], "string_view": 166, "type_trait": 166, "w1n": 166, "mari": 166, "patricia": 166, "linda": 166, "barbara": 166, "elizabeth": 166, "jennif": 166, "_": 166, "maybe_unus": 166, "a1": [166, 189, 213, 246], "brace": 166, "a2": [166, 189, 222, 246], "ostream_iter": 166, "\u01dd": 166, "a3": [166, 189, 246], "u018": 166, "creation": [166, 232], "a4": [166, 189], "a5": [166, 189], "a6": [166, 189], "a7": [166, 189], "liter": [166, 211], "t3": 166, "t4": [166, 222], "1f": 166, "1e23f": 166, "t5": 166, "make_uniqu": [166, 207], "t6": 166, "kokkos_pair": [167, 217], "fulli": [167, 189, 207, 241], "std_pair": 167, "int_float": 167, "converted_std_pair": 167, "converted_kokkos_pair": 167, "to_std_pair": 167, "first_typ": 167, "second_typ": 167, "kokkos_defaulted_funct": [167, 219], "kokkos_forceinline_funct": [167, 201], "wise": [167, 183, 184, 185], "msg": 168, "kokkos_abort": 168, "ndebug": 170, "assert": [170, 188, 211, 223, 224], "diagnost": 170, "text": [170, 224], "predefin": [170, 203], "__file__": 170, "__line__": 170, "imag": 171, "real": [171, 239], "imaginari": 171, "im": 171, "realtyp": 171, "nodiscard": [172, 175, 176], "announc": [173, 232], "clamp": [174, 217], "boundari": [174, 212], "kokkos_clamp": [174, 197], "kokkos_minmax": [174, 197], "cerr": 175, "kokkos_printf": 177, "format": [177, 205, 213, 235], "stdout": 177, "hello": [177, 207], "is_nothrow_move_constructible_v": 178, "is_nothrow_move_assignable_v": 178, "resolut": [178, 201, 232, 233, 245], "unless": [178, 197, 198, 209, 211, 213, 222, 224, 247], "is_move_constructible_v": 178, "is_move_assignable_v": 178, "yield": [178, 189, 247], "ambigu": [178, 217, 223], "situat": [178, 190, 196, 199, 208, 211, 232, 245], "adl": [178, 217], "measur": [179, 208], "time1": 179, "time2": 179, "impl_detail": [180, 188], "view_arg": 180, "subviewhold": 180, "a_view": 181, "sole": [181, 197, 206, 224], "host_mirror": 181, "host_mirror_view": 181, "memory_space_inst": 181, "mirror_view": 181, "implmirrortyp": 181, "conduct": [181, 232, 235], "circumst": [182, 232], "viewdest": 182, "viewsrc": [182, 189, 229], "copy_spac": 182, "submit": [182, 203, 224, 236], "necessarili": [182, 203, 205, 210, 213, 224], "cudamemcpyasync": 182, "d_a": [182, 205], "d_a_2": 182, "d_a_5": 182, "h_a": [182, 205, 243], "h_a_2": 182, "d_a_2_5": 182, "deviceview": 182, "temporari": [182, 200, 210, 213, 223], "h_view_tmp": 182, "lai": [183, 184, 185], "convent": [183, 184, 210, 213, 222], "signifi": [183, 184, 185], "is_extent_construct": [183, 184, 185], "full_mesh": 185, "mesh": [185, 238], "mesh_subcompon": 185, "z": [185, 193, 211], "frequent": 185, "noncontigu": [185, 213], "array_layout_max_rank": 185, "s0": 185, "s4": 185, "s5": 185, "s6": 185, "s7": 185, "order_dimens": 185, "itypeord": 185, "itypedimen": 185, "dimen": 185, "3d": [185, 205, 239], "grow": [186, 187, 206], "subext": 187, "191": 188, "subset": [188, 195, 196, 198, 212, 236], "arg_r": 188, "remove_const_t": [188, 212], "s3415": 188, "star": 189, "bracket": 189, "2d": [189, 200, 205, 239], "5d": 189, "Their": [189, 244], "integral_const": [189, 193, 194], "nullari": 189, "encourag": [189, 198, 203, 214, 216, 235], "akin": [189, 240], "_dynam": 189, "msvc": [189, 198, 228], "is_manag": 189, "natural_mdspan_typ": 189, "md": [189, 234], "Be": [189, 209], "upgrad": 189, "array_layout_from_map": 189, "elementtyp": 189, "extentstyp": 189, "accessortyp": 189, "see_below": 189, "i7": 189, "is_assign": 189, "assign_data": 189, "arg_data": 189, "anywai": [189, 205], "otherelementtyp": 189, "otherext": 189, "otherlayoutpolici": 189, "otheraccessor": 189, "otheraccessortyp": 189, "default_accessor": 189, "to_mdspan": 189, "other_accessor": 189, "data_handle_typ": 189, "viewdst": [189, 229], "dynamic_rank": 189, "a8": 189, "a9": 189, "a10": [189, 222], "a11": 189, "a12": 189, "a13": 189, "dictat": 189, "extents_typ": 189, "static_ext": 189, "dynamic_ext": 189, "layout_typ": 189, "layout_left_pad": 189, "layout_right_pad": 189, "layout_strid": 189, "accessor_typ": 189, "viewstr": 190, "view_wrap": 190, "pointer_to_wrapping_memori": 190, "bypass": 190, "01": [190, 213, 227], "allowpad": 190, "unspel": 190, "raw": [190, 203, 209, 217, 223], "viabl": 190, "notabl": 191, "simd_mask": [192, 193, 195, 211], "where_express": 192, "kokkos_simd": [193, 194, 195, 211], "abi": [193, 194, 195, 211], "simd_abi": [193, 194], "fallback": [193, 194], "nativ": [193, 194, 213, 222, 227], "extract": [193, 194, 205, 240], "mask_typ": [193, 194, 211], "abi_typ": [193, 194], "copy_from": [193, 195, 211], "simd_flag": [193, 195], "copy_to": [193, 195, 211], "simd_flag_default": [193, 195], "simd_flag_align": [193, 195], "element_aligned_tag": [193, 195, 211], "vector_aligned_tag": [193, 195], "mag": 193, "sgn": 193, "native_simd": [193, 195, 211], "simd_alignment_vector_align": 193, "simd_typ": [193, 194, 195, 211], "zu": 193, "simd": [194, 217, 221, 222, 226, 248], "iff": 194, "native_simd_mask": [194, 211], "basi": [195, 198, 224, 240], "const_where_express": 195, "scatter_to": 195, "gather_from": 195, "safer": 195, "domain": [195, 215], "chapter": [196, 198, 203, 205, 208, 209, 210, 212, 213, 236], "understand": [196, 198, 205, 207, 208, 212, 213, 222], "resolv": [196, 219, 232], "histogram": 196, "create_histogram": 196, "try": [196, 204, 208, 213, 214, 216, 219, 227, 232], "lost": 196, "race": [196, 205, 208, 238], "particl": [196, 244, 245], "neighbour": 196, "forc": [196, 198, 203, 208, 210, 211, 245], "compute_forc": 196, "forceloop": 196, "neighbor": [196, 245], "particle_id": 196, "neighbour_id": 196, "some_contribut": 196, "colour": 196, "ii": [196, 205, 224, 239], "iii": [196, 224], "disadvantag": 196, "transfer": [196, 213, 224], "uninterrupt": 196, "cycl": [196, 198, 232, 233, 236], "hinder": 196, "throughput": [196, 206], "createhistogram": 196, "scheme": 196, "find_indic": 196, "findindic": 196, "div": 196, "lshift": 196, "mod": 196, "mul": 196, "rshift": 196, "sub": [196, 212, 219], "xor": 196, "histogram_atom": 196, "transpar": 196, "clever": 197, "constitut": [197, 203, 224, 236], "tension": 197, "freedom": 197, "frustrat": [197, 211], "pain": 197, "deliber": [197, 224], "accident": [197, 219, 232], "breakag": [197, 232], "kokkos_": [197, 222], "chanc": 197, "inadvert": 197, "broken": 197, "kokkos_impl_": 197, "notic": [197, 207, 222, 224, 241, 242], "period": [197, 232], "hous": 197, "prime": 197, "incomplet": 197, "newer": [197, 198, 228], "particularli": [197, 240], "problemat": [197, 247], "obei": 197, "interfer": [197, 208], "collis": [197, 208], "prefac": 197, "myproject_": 197, "disambigu": 197, "cap": 197, "usual": [197, 198, 205, 208, 209, 213, 234], "syntact": 197, "revis": [197, 224, 232], "behind": [197, 211, 239, 243], "publish": 197, "drive": [197, 211], "advantag": [197, 211, 243, 245], "workaround": [197, 234], "older": [197, 222, 232], "recompil": 197, "occasion": [197, 228], "overal": [197, 213, 236, 243], "migratori": 197, "evolutionari": 197, "ideal": [197, 232], "wrong": [197, 212, 213], "wast": [197, 213], "continu": [197, 198, 205, 206, 214, 232, 236, 241], "subdirectori": [197, 198], "union": [197, 224], "fashion": [197, 212], "invok": [197, 208, 213, 222, 227], "explain": [198, 203, 207, 208, 213, 219], "mix": [198, 205, 208, 213, 214, 228], "advic": [198, 223], "mainli": [198, 213], "directori": [198, 224, 227, 232, 234, 236], "protect": [198, 203, 205, 206, 208, 211, 247], "prevent": [198, 203, 205, 213, 223, 238], "kokkoscore_config": 198, "h": [198, 215, 223, 237, 243], "mention": [198, 236], "compliant": [198, 207], "date": [198, 222, 224, 232, 234], "nightli": [198, 236], "readm": [198, 216, 234, 236], "repositori": [198, 232, 234, 235], "At": [198, 204, 207, 209, 211, 213, 222, 232, 236], "88": [198, 228], "nvc": [198, 228, 235], "rocm": [198, 207, 228], "xl": [198, 228, 234], "fujitsu": [198, 228], "arm": [198, 228], "linkag": [198, 228], "fopenmp": 198, "hwloc": [198, 204, 222, 236], "robust": [198, 214, 232], "strongli": [198, 213, 214], "cmakelist": [198, 214, 227], "txt": [198, 204, 214, 224, 227], "find_packag": [198, 214, 222], "target_link_librari": [198, 214, 227], "mytarget": [198, 214], "processor": [198, 203, 206, 208, 210, 236], "dkokkos_root": [198, 214], "lib64": 198, "especi": [198, 207, 208, 209, 211, 223, 233, 236, 242], "nvcc_wrapper": 198, "dcmake_cxx_compil": [198, 214], "bin": [198, 223], "cmake_cxx_flag": 198, "propag": [198, 214], "add_subdirectori": [198, 214], "dir": [198, 222], "include_directori": 198, "kokkos_include_dirs_ret": 198, "arch": 198, "mkdir": [198, 227, 234], "cd": [198, 227, 234], "srcdir": [198, 214], "dcmake_install_prefix": [198, 214], "my_install_fold": 198, "dkokkos_enable_openmp": [198, 214], "parti": [198, 205, 208, 214, 223, 224], "altern": [198, 205, 211, 214, 222, 236], "download": [198, 214, 227, 236], "env": [198, 214], "folder": [198, 214], "setup": [198, 214, 222, 236, 243], "sh": [198, 214, 236], "variant": [198, 209, 213, 214, 232], "deactiv": [198, 214], "chosen": [198, 214], "exact": [198, 214], "info": [198, 214, 221, 222], "hash": [198, 213, 214], "human": [198, 214], "readabl": [198, 211, 214, 224], "spec": [198, 214], "dii": 198, "wish": [198, 204], "downstream": [198, 214, 220], "almost": [198, 206, 211, 238], "myproject": [198, 227], "myvers": 198, "idiosyncrasi": 198, "annoi": 198, "dspack_workaround": 198, "spack_workaround": 198, "spack_cxx": 198, "cmake_cxx_compil": 198, "cxx": [198, 227, 239], "technolog": [198, 206, 224], "orient": [198, 245], "softwar": [198, 206, 211, 224, 227, 232, 235], "framework": [198, 208, 215], "solut": [198, 206, 207, 211, 224, 232, 236, 240], "larg": [198, 211, 213, 214, 219, 222, 240, 246], "multiphys": 198, "scientif": [198, 206, 213], "problem": [198, 205, 206, 219, 233, 236, 242], "organ": [198, 220, 222, 232, 233, 245], "stand": 198, "trilinos_enable_kokko": 198, "tpetra": 198, "infer": [198, 212], "trilinos_enable_openmp": 198, "ON": [198, 214, 222, 224, 227], "autogener": 198, "cmake_c_compil": 198, "cmake_fortran_compil": 198, "kokkos_arch_": [198, 222], "archcod": 198, "kokkos_arch_hsw": [198, 222], "haswel": [198, 222, 236], "uvm": [198, 205, 210, 213, 241], "export": 198, "cuda_launch_block": [198, 214], "cuda_managed_force_device_alloc": [198, 214], "aris": [198, 224], "stabil": 198, "symbol": 198, "ln": 198, "kokkos_source_dir_overrid": 198, "kokkoskernel": 198, "kokkoskernels_source_dir_overrid": 198, "script": [198, 214, 234, 235], "ompi_cxx": 198, "openmpi": [198, 204], "digest": 198, "matter": [198, 208, 219], "kokkos_link_depend": 198, "kokkos_cpp_depend": 198, "kokkos_cppflag": 198, "kokkos_cxxflag": 198, "kokkos_ldflag": 198, "kokkos_lib": 198, "tutori": [198, 206, 221, 227], "kokkos_path": [198, 234], "IN": [198, 224], "root": [198, 211, 222], "cuda_path": 198, "toolkit": [198, 222, 234], "kokkos_devic": 198, "kokkos_arch": [198, 211], "knl": [198, 234], "knc": 198, "snb": 198, "hsw": 198, "bdw": 198, "kepler30": 198, "kepler35": 198, "kepler37": 198, "maxwell50": 198, "pascal60": 198, "pascal61": 198, "armv81": 198, "kokkos_use_tpl": 198, "kokkos_opt": 198, "aggressive_vector": 198, "kokkos_cuda_opt": [198, 209], "force_uvm": 198, "use_ldg": 198, "rdc": [198, 222], "enable_lambda": [198, 209], "hwloc_path": 198, "ye": [198, 204], "kokkos_cxx_standard": 198, "lib": [198, 204], "cxxflag": [198, 236], "emb": 198, "metaprogram": [198, 213], "shortcom": 198, "prepend": 198, "xcompil": 198, "shell": [198, 214, 227, 236], "analyz": [198, 236], "correctli": [198, 209, 214, 219], "ccbin": 198, "edit": [198, 208, 230, 232, 234, 236], "nvcc_wrapper_default_compil": 198, "peopl": [198, 207, 220], "modul": [198, 210, 227, 234, 236, 239, 248], "icpc": 198, "pgc": 198, "attach": [198, 204, 224, 231, 236, 246], "degrad": [198, 207], "accommod": 199, "click": [199, 230], "head": [199, 246], "summat": 200, "parabl": 200, "minreduc": 200, "min_reduc": 200, "minloc_typ": 200, "minlocreduc": 200, "lminloc": 200, "reducer_typ": 200, "team_typ": 200, "team_minmaxloc": 200, "row_minmaxloc": 200, "thread_minmaxloc": 200, "gui": [200, 209, 248], "team_minmax": 200, "the_arrai": 201, "tr": [201, 202], "upd": [201, 202], "ndx": [201, 202], "myarrai": 202, "summyarrai": 202, "references_scalar": 202, "arraysumresult": 202, "exploit": [203, 240], "parallel_": [203, 210, 213, 217], "node": [203, 206, 210, 221, 236, 237, 246], "modern": [203, 214], "character": [203, 210], "higher": [203, 206, 222], "orthogon": [203, 208], "heterogen": [203, 204, 210, 236, 244], "cluster": [203, 241], "multicor": [203, 206, 208, 210], "hyper": 203, "instruct": [203, 211, 216, 222], "socket": [203, 214], "network": [203, 236], "llc": [203, 224], "l1": 203, "l2": 203, "sm": 203, "warp": [203, 205, 213], "wave": 203, "collabor": [203, 206], "close": [203, 209, 211, 216, 232], "adapt": [203, 207, 210], "suggest": [203, 236], "tightli": [203, 240, 248], "gather": 203, "choic": [203, 205, 208, 213, 214], "sometim": [203, 213, 214, 233, 234], "flat": [203, 246], "grid": [203, 205, 212], "inter": [203, 208], "guess": 203, "n_workset": 203, "choos": [203, 204, 209, 210, 213, 219, 222, 224], "sometag": 203, "action": [203, 232, 233, 235, 236], "team_memb": [203, 246], "coordin": [203, 219], "everyon": 203, "consum": 203, "indirect": [203, 224], "workset": 203, "recycl": 203, "cell": [203, 240], "team_shmem_s": 203, "double_s": 203, "team_shared_a": 203, "get_shmem": 203, "team_shared_b": 203, "160": 203, "kilobyt": 203, "gigabyt": 203, "mostli": [203, 205, 219], "shared_int_2d": 203, "shared_s": 203, "shmem_siz": 203, "layer": [203, 205, 206, 211, 223, 239], "teamthreadloop": 203, "threadvectorloop": 203, "consciou": [203, 219], "difficult": [203, 211, 240], "catch": [203, 213, 219, 232, 235], "loop_count": 203, "emploi": [203, 206, 208], "prepar": [203, 224, 234], "stage": 203, "innermost": 203, "compris": [203, 208], "workset_s": 203, "vectoriz": 203, "decor": 203, "pragma": [203, 205, 209], "ivdep": 203, "repetit": [203, 211], "bodi": [203, 213, 228, 246], "shared_arrai": 203, "somefunct": [203, 205], "global_arrai": 203, "my_offset": 203, "inner_lsum": 203, "inner_": 203, "_finalize_": 204, "subpackag": [204, 213], "alphabet": [204, 221], "interpret": 204, "openacc": [204, 206, 222, 228], "quot": [204, 211], "whitespac": 204, "delimit": [204, 213], "insensit": 204, "promis": [204, 208, 209, 210], "conflict": [204, 213, 219, 222, 224], "mvapich": 204, "slurm": 204, "deriv": [204, 206, 207, 224], "mpich": [204, 222], "dash": 204, "underscor": 204, "kokkos_num_thread": 204, "set_xxx": 204, "xxx": 204, "has_xxx": 204, "get_xxx": 204, "shut": 204, "down": [204, 207, 242], "atexit": 204, "mpi_comm_self": 204, "adopt": [205, 210], "facilit": 205, "lift": 205, "inde": [205, 213, 245], "cumbersom": 205, "__cuda_arch__": 205, "blockidx": 205, "threadidx": 205, "blockdim": 205, "omp_set_num_thread": 205, "bookkeep": 205, "ask": [205, 208, 210, 213, 219, 232, 235], "princip": 205, "insur": 205, "app": 205, "placement": [205, 207], "150": 205, "2d_arrai": 205, "200": [205, 213, 219], "scenario": [205, 210, 211], "receiv": [205, 224, 236], "straight": 205, "mykokkosfunct": 205, "host_spac": 205, "t_1d_device_view": 205, "t_2d_device_view": 205, "d_b": 205, "h_b": 205, "t_team": 205, "t_1d_view": 205, "t_3d_view": 205, "whatev": 205, "a_old": 205, "unfortun": [205, 207, 245], "unrestrict": 205, "bring": [205, 209, 219, 239], "massiv": 205, "penalti": [205, 213], "1000": [205, 209, 213, 219], "uneven": 205, "polymorph": [205, 210, 213, 215], "bla": [205, 213, 248], "matric": [205, 213], "dot": 205, "cubla": 205, "kokkos_have_cuda": 205, "call_cublas_dot": 205, "ptr_on_devic": 205, "extent_0": [205, 213], "cbla": 205, "call_cblas_dot": 205, "field": [206, 207, 232, 234, 240, 244], "hpc": [206, 221, 222, 232, 245], "verg": 206, "era": [206, 215], "angl": 206, "rate": 206, "flop": 206, "poor": 206, "workload": 206, "challeng": 206, "energi": 206, "mid": 206, "1990": [206, 209], "enjoi": 206, "seemingli": 206, "homogen": [206, 208, 236, 244], "decad": 206, "commun": [206, 212, 219, 223, 224, 232, 233, 241, 243], "realiz": 206, "review": [206, 218, 232, 235, 236], "broad": 206, "latenc": [206, 208, 213], "medium": [206, 224], "graphic": [206, 208, 222], "gp": 206, "toler": 206, "degre": [206, 210], "divers": 206, "interest": [206, 211, 229, 232], "heritag": 206, "offer": [206, 222, 224], "guidelin": [206, 223], "todai": [206, 208], "cilk": 206, "tbb": 206, "linux": [206, 227], "contemporari": [206, 208], "opencl": 206, "Such": [206, 239, 240], "varieti": [206, 236, 244], "pose": 206, "reminisc": 206, "becam": 206, "invest": [206, 213], "seek": [206, 219], "isol": 206, "fluctuat": 206, "coverag": 206, "supplementari": 206, "gradual": 206, "idea": [207, 213, 219], "odditi": 207, "face": [207, 212], "2020": 207, "subtl": 207, "cleanup": [207, 234], "disclos": 207, "glanc": 207, "fine": [207, 213], "crash": [207, 223], "nomin": 207, "among": [207, 236], "okai": 207, "amongst": 207, "hidden": [207, 213], "derefer": 207, "credit": 207, "articl": [207, 215], "pablo": 207, "aria": [207, 235], "faithfulli": 207, "happili": 207, "anymor": [207, 232], "therefor": [207, 213, 223, 247], "techniqu": 207, "deviceinstancememori": 207, "deviceinst": 207, "mykernel": 207, "distinct": [207, 208], "ugli": 207, "repo": [207, 221], "setafield": 207, "somehostvalu": 207, "despit": 207, "resort": 207, "myloop": 207, "kokkos_class_lambda": 207, "derivedptr": 207, "oh": 207, "strictli": 207, "spell": [207, 242], "educ": 207, "slack": [207, 219, 220, 221, 227, 232, 233, 235], "aspect": [208, 210, 211, 236], "programm": [208, 209, 211, 213, 241], "exascal": [208, 215], "consult": [208, 213], "ang": 208, "elect": 208, "show": [208, 209, 210, 213, 234], "die": [208, 210], "reachabl": 208, "et": [208, 232], "al": [208, 215], "sandia": [208, 224, 236], "nation": [208, 224], "laboratori": 208, "lawrenc": 208, "berkelei": 208, "consider": 208, "finit": [208, 238, 240], "packag": [208, 215, 223, 232, 234, 235, 240], "slower": [208, 213], "dram": 208, "volatil": [208, 210, 213, 217], "routin": [208, 219, 239, 240], "gain": 208, "topic": [208, 209, 232], "coher": [208, 213], "hennessi": 208, "paterson": 208, "weak": 208, "therebi": 208, "fifth": [208, 212], "quantit": 208, "morgan": 208, "kaufmann": 208, "tempt": 208, "author": [208, 215, 219, 224], "background": 208, "scientist": 208, "stick": 208, "proof": 208, "forbid": [208, 213], "implic": [208, 222], "filesystem": 208, "overlap": [208, 237], "reproduc": [208, 224, 233], "awai": [208, 211, 212], "wonder": 208, "great": 208, "unnecessari": [209, 213, 219], "harmless": [209, 224], "anonym": 209, "suppli": 209, "outermost": 209, "turn": [209, 211, 213], "surround": 209, "stack": [209, 213, 232, 235], "secondli": 209, "circumvent": 209, "harder": 209, "interoper": [209, 211, 226, 239, 248], "omp": [209, 236], "prior": [209, 213, 214, 223, 232, 233, 239, 243], "faster": [209, 219], "trip": 209, "fewer": 209, "encapsul": [209, 210, 212], "semir": 209, "maxplu": 209, "x_": 209, "inf": 209, "columnsum": 209, "convinc": 209, "numrow": 209, "numcol": 209, "sequenti": [209, 213, 222, 227, 240], "blelloch": 209, "book": 209, "hi": [209, 233], "phd": 209, "dissert": [209, 211], "val_i": 209, "mit": 209, "press": 209, "necess": 209, "unus": [209, 217, 245], "differenti": 209, "bartag": 209, "rabtag": 209, "foobar": [209, 229], "formul": 210, "vari": [210, 213], "figur": 210, "hybrid": 210, "pim": 210, "principl": [210, 213], "remot": [210, 221, 236, 248], "send": 210, "undetermin": 210, "prescript": 210, "primit": 210, "spin": 210, "dead": 210, "persist": 210, "diverg": 210, "inspir": 210, "vocabulari": [210, 236], "comfort": [210, 219], "reflect": [210, 213], "rewrit": 210, "unoptim": 210, "optimis": 210, "histori": [211, 236], "struggl": 211, "blog": [211, 223], "insight": 211, "drawback": [211, 245], "stanford": 211, "tim": 211, "folei": 211, "heart": 211, "black": 211, "box": 211, "matthia": 211, "kretz": 211, "deliv": 211, "vendor": [211, 232, 248], "fairli": 211, "pictur": 211, "clearli": [211, 219, 224], "odd": 211, "quirk": 211, "tag_typ": 211, "sx": 211, "sy": 211, "sz": 211, "sr": 211, "squar": 211, "emit": [211, 212], "4x": 211, "speedup": [211, 243], "skip": [211, 213, 223], "troublesom": 211, "pitfal": [211, 213], "evenli": 211, "divis": 211, "cleaner": 211, "wide": [211, 213, 232, 236], "reach": [211, 213, 220], "throughout": 211, "slight": 211, "quadratic_formula": 211, "x1": 211, "x2": 211, "discrimin": 211, "sqrt_discrimin": 211, "classic": [211, 228], "familiar": [211, 213, 232], "quadrat": 211, "formula": 211, "naiv": 211, "mimic": 211, "roadmap": [211, 232], "regard": [211, 224], "very_expensive_funct": 211, "statement": [211, 224], "spend": [211, 213], "lot": [211, 213, 234], "pick": [212, 213, 232], "notat": 212, "vice": 212, "versa": 212, "cross": [212, 222, 224, 235], "plane": 212, "cube": 212, "n_0": 212, "n_1": 212, "n_": 212, "a_0": 212, "a_1": 212, "a_": 212, "a_j": 212, "n_j": 212, "handi": 212, "matlab": 212, "python": [212, 221, 234, 236, 248], "colon": 212, "fourth": 212, "elabor": [212, 224], "a_sub": 212, "won": [212, 213, 219], "cheaper": 212, "keyword": [212, 214, 217, 221, 227], "easiest": [212, 214, 222], "said": 212, "dens": [212, 221, 248], "inconveni": 212, "my_view_typ": 212, "my_subview_typ": 212, "my_subview_type_deduc": 212, "fast": [213, 234], "intim": 213, "factor": 213, "coder": 213, "tie": 213, "hard": 213, "evolv": 213, "reliev": 213, "burden": [213, 232], "ty": 213, "expert": 213, "easi": [213, 214], "ellips": 213, "asterisk": 213, "typecast": 213, "a_ptr": 213, "malloc": 213, "a0": 213, "arbitrarili": 213, "unprotect": 213, "badli": 213, "advis": [213, 224], "deconstructor": 213, "disallow": 213, "indirectli": 213, "novic": 213, "THE": [213, 224, 234], "FOR": [213, 224], "IS": [213, 224], "NO": [213, 224], "rag": 213, "reorgan": 213, "v_outer": 213, "assigne": 213, "wors": 213, "yourself": [213, 234], "rid": 213, "sharedsapc": 213, "inner_view_typ": 213, "outer_view_typ": 213, "numout": 213, "numinn": 213, "to_str": 213, "device_out": 213, "nonown": 213, "dispos": 213, "a_nonconst": 213, "nonconst": 213, "a_const": 213, "readonlyfunct": 213, "skew": 213, "parenthes": 213, "enclos": 213, "comma": 213, "a_ijk": 213, "rest": [213, 219], "slow": 213, "leftmost": 213, "exempt": 213, "unwind": 213, "incorrect": 213, "100x50x4": 213, "50": [213, 224], "200x50x4": 213, "300x60x4": 213, "300": 213, "java": 213, "s_1": 213, "s_2": 213, "s_3": 213, "dim1": 213, "extent_n": 213, "conserv": 213, "benefici": [213, 224], "heavi": 213, "stringent": 213, "overflow": 213, "lapack": [213, 248], "lda": 213, "morton": 213, "thereof": [213, 224], "viewmap": 213, "renam": 213, "coalesc": 213, "callbla": 213, "callsomeblasfunct": 213, "invalid_argu": 213, "100000": 213, "biject": 213, "accessspac": 213, "affin": 213, "memcopi": 213, "firstli": 213, "discourag": [213, 223], "circumv": 213, "defeat": 213, "legaci": [213, 223, 226], "legacyfunct": 213, "x_raw": 213, "len": 213, "myfunct": 213, "somelibraryfunct": 213, "reference_type_is_lvalu": 213, "sometrait": 213, "someothertrait": 213, "ca": 213, "a_atom": 213, "irregularli": 213, "a_ra": 213, "shorter": 213, "fault": 213, "prolifer": 213, "csr": 213, "spmatvec": 213, "ind": 213, "x_ra": 213, "y_i": 213, "accordingli": 213, "x_view": 213, "functionthattakeskokkosview": 213, "safest": 213, "tree": [214, 224, 234, 246], "exceedingli": 214, "devil": 214, "kokkos_install_prefix": 214, "compiler_used_to_build_kokko": 214, "cmake_polici": 214, "cmp0074": 214, "cmake_build_instal": 214, "cmake_build_in_tre": 214, "kokkos_install_fold": 214, "craype_link_typ": 214, "miss": 214, "benchmark": [214, 222, 236], "bytes_and_flop": 214, "nvlink": [214, 241], "displai": [214, 224], "dev": [214, 234, 236], "9485033": 215, "trott": [215, 224], "christian": [215, 224, 232], "lebrun": [215, 224], "grandi\u00e9": 215, "damien": [215, 224, 232], "arndt": 215, "daniel": 215, "ciesko": 215, "jan": 215, "dang": 215, "vinh": 215, "ellingwood": 215, "nathan": 215, "gayatri": 215, "rahulkumar": 215, "harvei": 215, "evan": 215, "hollman": 215, "daisi": 215, "ibanez": 215, "dan": 215, "liber": 215, "nevin": 215, "madsen": 215, "jonathan": 215, "mile": 215, "jeff": 215, "poliakoff": 215, "david": 215, "powel": 215, "ami": 215, "rajamanickam": 215, "sivasankaran": 215, "simberg": 215, "mikael": 215, "sunderland": 215, "turcksin": 215, "bruno": 215, "wilk": 215, "jeremiah": 215, "journal": 215, "ieee": 215, "transact": 215, "titl": [215, 219, 224], "2022": [215, 224, 228], "volum": 215, "805": 215, "817": 215, "doi": 215, "1109": 215, "tpd": 215, "2021": [215, 228], "3097283": 215, "ecosystem": [215, 221, 227], "9502936": 215, "berger": 215, "vergiat": 215, "luc": 215, "grandi": [215, 224], "nader": 215, "gligor": 215, "milo": 215, "shipman": 215, "galen": 215, "womeldorff": 215, "geoff": 215, "scienc": [215, 235], "comprehens": [215, 219, 228, 234], "mcse": 215, "3098509": 215, "carteredwards20143202": 215, "manycor": 215, "3202": 215, "3216": 215, "issn": 215, "0743": 215, "7315": 215, "1016": 215, "jpdc": 215, "07": [215, 234], "003": 215, "url": [215, 227], "sciencedirect": 215, "pii": 215, "s0743731514001257": 215, "carter": 215, "edward": 215, "pull": [216, 219, 232, 234, 236, 246], "licens": [216, 220, 221], "bsd": 216, "commerci": [216, 224], "req": 216, "is_asynchron": 217, "atomic_query_vers": 217, "atoimc_inc": 217, "atomic_decremn": 217, "atomic_dec": 217, "is_layouttil": 217, "layout_iterate_type_selector": 217, "instance_mod": 217, "unique_any_send": 217, "sender": 217, "newinst": 217, "ahould": 217, "in_parallel": 217, "kokkos_if_on_host": 217, "kokkos_if_on_devic": 217, "partli": [217, 223], "inconsist": 217, "device_arch": 217, "uniform": 217, "detect_device_count": 217, "detect_device_arch": 217, "set_num_devic": 217, "has_num_devic": 217, "get_num_devic": 217, "superflu": 217, "set_skip_devic": 217, "has_skip_devic": 217, "get_skip_devic": 217, "kokkos_visible_devic": 217, "cudastream_t": 217, "manage_stream": 217, "cudastream": 217, "hipstream_t": 217, "hipstream": 217, "allocationmechan": 217, "hostspoac": 217, "undocu": 217, "activeexecutionmemoryspac": 217, "host_execution_spac": 217, "host_memory_spac": 217, "kokkos_restrict_execution_to_": 217, "data_spac": 217, "hip_safe_cal": 217, "create_inst": 217, "partition_mast": 217, "num_partit": 217, "partition_s": 217, "kokkos_openmp_inst": 217, "access_error": 217, "kokkos_hip_spac": 217, "hip_internal_safe_call_deprec": 217, "kokkos_hip_error": 217, "kokkos_openmp": 217, "openmpintern": 217, "validate_partit": 217, "getnam": 217, "getsectionid": 217, "kokkos_hip_parallel_team": 217, "kokkos_sycl_parallel_team": 217, "kokkos_openmptarget_exec": 217, "kokkos_cuda_parallel_team": 217, "kokkos_cudaspac": 217, "number_of_alloc": 217, "kokkos_hpx": 217, "masterlock": 217, "kokkos_attribute_nodiscard": 217, "amathfunct": 217, "is_reducer_typ": 217, "index_list_typ": 217, "always_use_kokkos_sort": 217, "finalize_al": 217, "withoutinitializing_t": 217, "wi": 217, "kokkos_thread_loc": 217, "thread_loc": 217, "is_view": 217, "cuda_internal_safe_call_deprec": 217, "cuda_safe_cal": 217, "trail": 217, "kokkosviewlabel": 217, "kokkos_complex": 217, "kokkos_half": 217, "kokkos_tim": 217, "kokkos_sort": 217, "kokkos_bit": 217, "kokkos_errorreport": 217, "prospect": [218, 224], "pr": 218, "submitt": 219, "criteria": 219, "meaning": 219, "changelog": [219, 232, 234], "imo": 219, "person": [219, 232, 236], "five": 219, "bugfix": 219, "intuit": 219, "async": 219, "tangl": 219, "granular": 219, "unnecessarili": 219, "feedback": [219, 231, 232, 235], "respond": 219, "quickli": 219, "stall": 219, "bunch": 219, "feasibl": 219, "ci": 219, "happi": 219, "video": [219, 221], "contact": [219, 220, 224], "clarif": 219, "zone": 219, "quorum": 219, "audienc": [219, 232], "channel": [220, 232, 233, 235], "kokkosteam": [220, 221, 233], "email": 220, "whitelist": 220, "workspac": [220, 227, 236], "invit": [220, 232, 235], "cmake": [220, 221, 223, 227, 228, 242], "dcmake_cxx_standard": 220, "batch": [221, 248], "pykokko": 221, "checkpoint": 221, "mdspan": 221, "p0009": 221, "stdbla": 221, "p1673": 221, "quick": 221, "instal": [221, 222, 227, 236, 241], "lectur": 221, "slide": 221, "faq": [221, 227], "cite": 221, "sensit": 222, "recal": 222, "dkeyword_nam": 222, "ccmake": 222, "dkokkos_enable_": 222, "dkokkos_enable_cuda": [222, 227], "mutual": 222, "kokkos_enable_openacc": 222, "kokkos_enable_benchmark": 222, "kokkos_enable_exampl": 222, "kokkos_enable_test": 222, "kokkos_enable_deprecated_code_4": [222, 242], "relax": 222, "um": 222, "kokkos_enable_impl_cuda_malloc_async": 222, "cudamallocasync": [222, 223], "ucx": [222, 223], "crai": 222, "kokkos_enable_sycl_relocatable_device_cod": 222, "kokkos_enable_atomics_bypass": 222, "kokkos_enable_impl_hpx_async_dispatch": 222, "kokkos_enable_compiler_warn": 222, "kokkos_enable_header_self_containment_test": 222, "kokkos_enable_large_mem_test": 222, "kokkos_enable_rocthrust": 222, "rocthrust": 222, "kokkos_cuda_dir": 222, "cuda_root": 222, "kokkos_hwloc_dir": 222, "hwloc_root": 222, "kokkos_libdl_dir": 222, "libdl_root": 222, "hpx_dir": 222, "hpx_root": 222, "config": [222, 234, 236], "kokkos_arch_n": 222, "march": 222, "kokkos_arch_zen4": 222, "amd64": 222, "epyc": 222, "genoa": 222, "llnl": 222, "capitan": 222, "kokkos_arch_zen3": 222, "7713": 222, "ornl": [222, 224, 235], "frontier": [222, 246], "kokkos_arch_zen2": 222, "7742": 222, "noaa": 222, "kokkos_arch_zen": 222, "anl": [222, 235], "selen": 222, "kokkos_arch_amdavx": 222, "bulloz": 222, "kokkos_arch_armv9_grac": 222, "armv9": 222, "a64": 222, "neovers": 222, "gh200": 222, "csc": 222, "alp": 222, "kokkos_arch_a64fx": 222, "a64fx": 222, "fugaku": 222, "snl": [222, 235], "astra": 222, "cea": 222, "bullsequana": 222, "a32": 222, "isa": 222, "summit": 222, "sierra": [222, 235], "kokkos_arch_spr": 222, "sapphir": 222, "x86": [222, 234, 236], "9470c": 222, "aurora": 222, "lanl": 222, "crossroad": 222, "kokkos_arch_skx": 222, "6130": 222, "osu": 222, "pete": 222, "2680v3": 222, "nasa": 222, "pleiad": 222, "kokkos_arch_bdw": 222, "broadwel": 222, "2680v4": 222, "kokkos_arch_knl": 222, "31s1p": 222, "tianh": 222, "kokkos_arch_snb": 222, "sandi": 222, "bridg": 222, "kokkos_arch_riscv_rva22v": 222, "rva22v": 222, "spacemit": 222, "k1": 222, "kokkos_arch_riscv_sg2042": 222, "sg2042": 222, "milk": 222, "pioneer": 222, "eponym": 222, "microarchitectur": 222, "compute_cap": 222, "autodetect": 222, "h100": 222, "lovelac": 222, "l4": 222, "l40": 222, "a40": 222, "a16": 222, "a100": 222, "a30": 222, "v100": 222, "p40": 222, "p4": 222, "p100": [222, 236], "m60": 222, "m40": 222, "k80": [222, 236], "k40": [222, 236], "k20": 222, "k10": 222, "amd_": 222, "kokkos_arch_amd_": 222, "architecture_flag": 222, "gfx942": 222, "gfx940": 222, "gfx1103": 222, "ryzen": 222, "8000g": 222, "gfx1100": 222, "center": 222, "1550": 222, "dg1": 222, "uhd": 222, "770": 222, "hd": 222, "510": 222, "pro": 222, "580": 222, "wherea": 222, "ahead": [222, 232], "jit": 222, "aot": 222, "cudarawmemoryallocationfailur": 223, "dkokkos_enable_impl_cuda_malloc_async": 223, "explan": 223, "cudamempool_t": 223, "interprocess": 223, "ipc": 223, "tweak": 223, "interprocess_communication_support": 223, "library_compos": 223, "glibc": 223, "librt": 223, "stub": 223, "7512": 223, "hsa_xnack": 223, "is_device_copy": 223, "mycompar": 223, "my_compar": 223, "usr": 223, "2572": 223, "is_device_copyable_v": 223, "oneapi": 223, "dpl": 223, "pstl": 223, "hetero": 223, "dpcpp": 223, "parallel_backend_sycl": 223, "1816": 223, "isdeprecateddevicecopy": 223, "fieldt": 223, "2573": 223, "2605": 223, "checkfieldsaredevicecopy": 223, "1578": 223, "funct": 223, "__builtin_num_field": 223, "2613": 223, "checkdevicecopy": 223, "kerneltyp": 223, "handler": 223, "1652": 223, "roundedrangekernel": 223, "1694": 223, "unpack": 223, "ext": 223, "1697": 223, "kernelnam": 223, "propertiest": 223, "1293": 223, "kernel_parallel_for_wrapp": 223, "kname": 223, "transformedargtyp": 223, "2332": 223, "backtrac": 223, "ftemplat": 223, "parallel_for_lambda_impl": 223, "do_math": 223, "sqrt5": 223, "highli": 223, "z1": 223, "z2": 223, "z3": 223, "copyright": 224, "ntess": 224, "contract": [224, 243], "na0003525": 224, "govern": 224, "retain": 224, "apach": 224, "januari": 224, "2004": 224, "reproduct": [224, 235], "shall": [224, 233], "licensor": 224, "owner": [224, 234, 236, 241], "fifti": 224, "percent": 224, "permiss": [224, 234, 236], "media": 224, "authorship": 224, "appendix": 224, "editori": 224, "mere": 224, "intention": 224, "behalf": 224, "electron": 224, "verbal": 224, "sent": [224, 241], "mail": 224, "conspicu": 224, "contributor": 224, "whom": 224, "incorpor": 224, "herebi": 224, "perpetu": 224, "worldwid": 224, "charg": 224, "royalti": 224, "irrevoc": 224, "publicli": [224, 235], "sublicens": 224, "patent": 224, "sell": 224, "claim": 224, "infring": 224, "institut": [224, 235], "litig": 224, "counterclaim": 224, "lawsuit": 224, "alleg": 224, "contributori": 224, "redistribut": 224, "recipi": 224, "carri": [224, 244], "promin": 224, "trademark": 224, "pertain": 224, "wherev": [224, 232], "alongsid": 224, "addendum": 224, "constru": 224, "compli": 224, "submiss": [224, 236], "notwithstand": 224, "herein": 224, "supersed": 224, "agreement": 224, "trade": 224, "servic": 224, "customari": 224, "warranti": 224, "law": 224, "AS": 224, "OF": 224, "merchant": 224, "liabil": 224, "theori": [224, 243], "tort": 224, "neglig": 224, "grossli": 224, "liabl": 224, "damag": 224, "incident": 224, "consequenti": 224, "inabl": 224, "loss": 224, "goodwil": 224, "stoppag": 224, "malfunct": 224, "fee": 224, "indemn": 224, "oblig": 224, "indemnifi": 224, "defend": 224, "incur": 224, "gplv2": 224, "court": 224, "compet": 224, "jurisdict": 224, "provis": 224, "retroact": 224, "deem": 224, "waiv": 224, "entireti": 224, "BY": 224, "BUT": 224, "exemplari": 224, "procur": [224, 232], "substitut": 224, "profit": 224, "busi": 224, "interrupt": 224, "strict": 224, "IF": 224, "SUCH": 224, "crtrott": 224, "gov": 224, "lebrungrandt": 224, "introduct": [226, 236, 248], "jump": 227, "maco": 227, "window": [227, 237], "ninja": 227, "kit": [227, 232], "sdk": 227, "fetchcont": 227, "cmake_minimum_requir": 227, "fetchcontent_declar": 227, "archiv": 227, "ref": 227, "zip": 227, "fetchcontent_makeavail": 227, "hellokokko": 227, "partial_r": 227, "demonstr": [227, 238, 239, 240, 243], "coupl": 227, "add_execut": 227, "identif": [227, 236], "gnu": 227, "dkokkos_enable_hip": 227, "dkokkos_enable_sycl": 227, "congratul": 227, "troubl": 227, "unawar": 228, "appleclang": 228, "intelllvm": 228, "2023": 228, "pthread": [228, 234, 236], "wall": [228, 234], "wunus": 228, "wshadow": [228, 234], "pedant": [228, 234], "werror": [228, 234], "wsign": [228, 234], "wtype": [228, 234], "wignor": 228, "wempti": 228, "wclobber": 228, "wuniniti": 228, "master": [228, 234, 236], "rigor": 228, "some_var": 229, "frobrnic": 229, "foobat": 229, "frobnic": 229, "pencil": 230, "button": 230, "workflow": [231, 235, 238], "ramp": 232, "overarch": 232, "outdat": 232, "facto": 232, "month": [232, 234], "phase": [232, 235], "defect": 232, "upcom": 232, "seamless": 232, "anticip": 232, "soon": 232, "deploy": [232, 235], "engag": 232, "fund": [232, 235], "agenc": [232, 235], "monitor": 232, "hpe": 232, "research": 232, "hackathon": 232, "chanel": 232, "bi": 232, "annual": 232, "usergroup": [232, 233], "influenc": 232, "sustain": 232, "mainten": [232, 236], "proven": 232, "committe": 232, "greatest": 232, "matur": 232, "train": 232, "bump": 232, "leadership": 232, "prioriti": [232, 233], "thrust": 232, "refin": 232, "unassign": 232, "aren": 232, "weekli": [232, 233], "reassign": 232, "obsolet": 232, "avenu": 232, "week": [232, 235], "mondai": 232, "urgent": 232, "triag": 232, "preliminari": 232, "agenda": 232, "kept": 232, "nucleu": 232, "ongo": 232, "ephemer": 232, "dai": [232, 234], "unpaid": 232, "longer": 232, "nda": 232, "wednesdai": 232, "2pm": 232, "pm": 232, "mt": 232, "utc": 232, "zoom": 232, "six": 232, "candid": [232, 235], "cherri": 232, "nearing": 232, "delai": 232, "ship": 232, "partner": [232, 233], "onto": 232, "regress": 232, "unaddress": 232, "approxim": 232, "overview": [232, 240], "enhanc": [233, 234, 245], "priorit": 233, "mileston": 233, "slot": 233, "15feb18": 234, "043": 234, "196": 234, "128": 234, "pgi": 234, "103": 234, "174": 234, "cygwin": 234, "64bit": 234, "test_all_sandia": [234, 236], "trilino": [234, 235, 236, 240], "atdm": 234, "lammp": [234, 235], "sparc": 234, "master_histori": 234, "snapshot": [234, 236], "clone": [234, 236], "git": 234, "nohup": 234, "tail": 234, "watch": 234, "white": [234, 236], "shepard": [234, 236], "shepard_jenkins_run_script_serial_intel": [234, 236], "pristin": [234, 236], "rerun": 234, "token": [234, 248], "oldtag": 234, "newtag": 234, "04": 234, "rubi": 234, "gitthub_changelog_gener": 234, "indevelop": 234, "cat": 234, "commit": [234, 236], "clariti": [234, 245], "noteworthi": 234, "checkout": [234, 236], "majornumb": 234, "minornumb": 234, "weekssinceminornumberupd": 234, "sha1": 234, "append": [234, 246], "03": 234, "27": 234, "da314444": 234, "29ccb58a": 234, "amend": 234, "mm": [234, 239], "dd": 234, "yyyi": 234, "sem": [234, 236], "checkin": [234, 236], "disk": [234, 243], "ram": 234, "ceerws1113": 234, "trilinos_path": 234, "pwd": 234, "untrack": 234, "py": [234, 236], "backtrack": 234, "server": [235, 236], "approv": [235, 236], "jenkin": [235, 236], "travi": 235, "durat": 235, "pipelin": 235, "verif": 235, "offici": [235, 236], "judg": 235, "thorough": 235, "wider": 235, "poc": 235, "arborx": 235, "million": 235, "nnsa": 235, "offic": 235, "empir": 235, "sparta": 235, "cabana": [235, 237], "petsc": 235, "advertis": 235, "role": 236, "databas": 236, "fork": 236, "privileg": 236, "865": 236, "begun": 236, "conclus": 236, "haap": 236, "secondari": 236, "outag": 236, "scroll": 236, "ohpc": 236, "srn": 236, "apollo": 236, "bowman": 236, "elli": 236, "hansen": 236, "e5": 236, "2698": 236, "kokkos_dev": 236, "ride": 236, "p8": 236, "tuleta": 236, "fireston": 236, "garrison": 236, "tesla": 236, "36": 236, "sullivan": 236, "mac": 236, "bed": 236, "connect": 236, "webcar": 236, "intranet": 236, "staff": 236, "leader": 236, "assist": 236, "csri": 236, "csu": 236, "administ": 236, "daili": 236, "regimen": 236, "suit": 236, "job": 236, "dashboard": 236, "terminolog": 236, "joint": 236, "simul": [236, 241, 244, 245], "qthread": 236, "briefli": 236, "generate_makefil": 236, "bash": 236, "makefil": 236, "spot": 236, "jenkins_test_driv": 236, "testing_script": 236, "sha": 236, "accomplish": [236, 240], "prepare_trilinos_repo": 236, "shepard_jenkins_run_script_pthread_intel": 236, "white_run_jenkins_script_cuda": 236, "white_run_jenkins_script_omp": 236, "test_kokkos_master_develop_promot": 236, "checkintest": 236, "flavor": 236, "speed": 236, "central": 236, "equat": 236, "viz": 236, "accuraci": 236, "replica": 236, "nearli": 236, "hundr": 236, "unit_test": 236, "performance_test": 236, "perf_test": 236, "scrutini": 236, "inadequaci": 236, "defici": 236, "halo": 237, "averag": 237, "interop": [237, 248], "quantiti": 238, "ratio": 238, "ultim": 238, "count_adjacent_el": 238, "elements_to_nod": 238, "number_of_nod": 238, "elements_per_nod": 238, "scatter_elements_per_nod": 238, "create_scatter_view": 238, "access_elements_per_nod": 238, "node_of_el": 238, "sum_to_nod": 238, "element_valu": 238, "node_valu": 238, "scatter_node_valu": 238, "access_node_valu": 238, "average_to_nod": 238, "flcl": 239, "daxpi": 239, "ndarrai": 239, "flcl_ndarray_t": 239, "dope": 239, "flatten": [239, 240], "_flcl_nd_array_t": 239, "flcl_ndarray_max_rank": 239, "f90": 239, "nd_array_t": 239, "c_size_t": 239, "nd_array_max_rank": 239, "c_ptr": 239, "procedur": 239, "to_nd_arrai": 239, "to_nd_array_l_1d": 239, "to_nd_array_i32_1d": 239, "to_nd_array_i64_1d": 239, "to_nd_array_r32_1d": 239, "to_nd_array_r64_1d": 239, "to_nd_array_l_2d": 239, "to_nd_array_i32_2d": 239, "to_nd_array_i64_2d": 239, "to_nd_array_r32_2d": 239, "to_nd_array_r64_2d": 239, "to_nd_array_l_3d": 239, "to_nd_array_i32_3d": 239, "to_nd_array_i64_3d": 239, "to_nd_array_r32_3d": 239, "to_nd_array_r64_3d": 239, "view_from_ndarrai": 239, "axpi": 239, "flcl_mod": 239, "c_doubl": 239, "allocat": 239, "f_y": 239, "c_y": 239, "alpha": 239, "subroutin": 239, "iso_c_bind": 239, "inout": 239, "f_axpi": 239, "nd_arrai": 239, "earlier": 239, "c_axpi": 239, "nd_array_i": 239, "nd_array_x": 239, "tensor": 240, "pde": 240, "inputdata": 240, "inputfield": 240, "outputfield": 240, "tripl": 240, "paral": 240, "for_all_cel": 240, "merit": 240, "notion": 240, "natur": 240, "mdr_for_all_cel": 240, "wiki": 240, "intrepid2": 240, "intrepid2_arraytoolsdef": 240, "intrepid": 240, "complementari": 241, "scalabl": 241, "walk": 241, "source_rank": 241, "destination_rank": 241, "number_of_doubl": 241, "my_rank": 241, "mpi_comm": 241, "comm": 241, "mpi_comm_world": 241, "mpi_comm_rank": 241, "mpi_send": 241, "mpi_doubl": 241, "mpi_recv": 241, "quit": 241, "pcie": 241, "unstructur": 241, "redudantli": 241, "filter": 241, "subset_scann": 241, "keys_in": 241, "desired_key_in": 241, "subset_indices_in": 241, "m_kei": 241, "m_desired_kei": 241, "m_subset_indic": 241, "final_pass": 241, "is_in": 241, "find_subset": 241, "desired_kei": 241, "subset_s": 241, "local_sum": 241, "subset_indic": 241, "transmit": 241, "pack_messag": 241, "all_element_data": 241, "tediou": 242, "appar": 242, "acess": 242, "myview": 242, "c_style_memori": 242, "c_style_alloc": 242, "concur": 243, "stagger": 243, "littl": 243, "hostexecspac": 243, "deviceexecspac": 243, "device_range_polici": 243, "host_range_polici": 243, "viewvectortyp": 243, "viewmatrixtyp": 243, "xval": 243, "init_src_view": 243, "p_x": 243, "p_a": 243, "init_a": 243, "init_x": 243, "h_x": 243, "h_y": 243, "nrepeat": 243, "synch": 243, "yax": 243, "temp2": 243, "ini_src_view": 243, "occupi": 243, "attent": 243, "paid": 243, "opportun": [243, 245], "range_polici": 243, "v_r": 243, "v_r1": 243, "h_v": 243, "get_initial_st": 243, "get_rhs_func": 243, "serialize_st": 243, "view_r": 243, "exhibit": 244, "cabana_soa": 244, "vectorlength": 244, "membertyp": 244, "cabana_aosoa": 244, "memorymanag": 244, "evolut": 245, "particleinteract": 245, "particleposit": 245, "po": 245, "particleforc": 245, "particleneighbor": 245, "pairforc": 245, "parallelis": 245, "rectifi": 245, "qualiti": 245, "plai": 245, "tagphase1": 245, "tagphase2": 245, "compute1": 245, "compute2": 245, "prescrib": 246, "predetermin": 246, "surrog": 246, "roll": 246, "b1": 246, "b2": 246, "b3": 246, "fib": 246, "wait_list": 246, "a_f1": 246, "b_f1": 246, "b_f2": 246, "a_f2": 246, "tm": 246, "vertex": 246, "subteam": 246, "visit": 246, "vertic": 246, "exce": 246, "threshold": 246, "unvisit": 246, "edg": 246, "greatli": 246, "nominmax": 247, "uninterpret": 247, "redefin": 247, "dnominmax": 247, "intro": 248, "multidim": 248, "safeti": 248, "pga": 248, "analysi": 248, "linear": 248, "algebra": 248, "solver": 248}, "objects": {"": [[74, 0, 1, "_CPPv4I0E6Bitset", "Bitset"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_FORWARD_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_FORWARD_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_FORWARD"], [74, 1, 1, "_CPPv4N6Bitset16BIT_SCAN_REVERSEE", "Bitset::BIT_SCAN_REVERSE"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_REVERSE_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_REVERSE_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_FORWARD"], [74, 2, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset"], [74, 3, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset::arg_size"], [74, 4, 1, "_CPPv4I0E6Bitset", "Bitset::Device"], [74, 1, 1, "_CPPv4N6Bitset18MOVE_HINT_BACKWARDE", "Bitset::MOVE_HINT_BACKWARD"], [74, 2, 1, "_CPPv4N6Bitset5clearEv", "Bitset::clear"], [74, 2, 1, "_CPPv4NK6Bitset5countEv", "Bitset::count"], [74, 2, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset12is_allocatedEv", "Bitset::is_allocated"], [74, 2, 1, "_CPPv4NK6Bitset8max_hintEv", "Bitset::max_hint"], [74, 2, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset"], [74, 2, 1, "_CPPv4N6Bitset5resetEv", "Bitset::reset"], [74, 3, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset::i"], [74, 2, 1, "_CPPv4N6Bitset3setEj", "Bitset::set"], [74, 2, 1, "_CPPv4N6Bitset3setEv", "Bitset::set"], [74, 3, 1, "_CPPv4N6Bitset3setEj", "Bitset::set::i"], [74, 2, 1, "_CPPv4NK6Bitset4sizeEv", "Bitset::size"], [74, 2, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test"], [74, 3, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test::i"], [74, 0, 1, "_CPPv4I0E11ConstBitset", "ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetEv", "ConstBitset::ConstBitset"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset::rhs"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset::rhs"], [74, 4, 1, "_CPPv4I0E11ConstBitset", "ConstBitset::Device"], [74, 2, 1, "_CPPv4NK11ConstBitset5countEv", "ConstBitset::count"], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator="], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator="], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator=::rhs"], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator=::rhs"], [74, 2, 1, "_CPPv4NK11ConstBitset4sizeEv", "ConstBitset::size"], [74, 2, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test"], [74, 3, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test::i"], [189, 5, 1, "_CPPv410HostMirror", "HostMirror"], [148, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [148, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [148, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [148, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [148, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [148, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [148, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [148, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [148, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::name"], [148, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [148, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [150, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [150, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [150, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [150, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [150, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [150, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [150, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [150, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [150, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [150, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [150, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [150, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [150, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [150, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [150, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [150, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [150, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [150, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [150, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::name"], [150, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::name"], [150, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [150, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [150, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [150, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [150, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [150, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [185, 0, 1, "_CPPv412LayoutStride", "LayoutStride"], [134, 0, 1, "_CPPv410ScopeGuard", "ScopeGuard"], [134, 2, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard"], [134, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK10ScopeGuard", "ScopeGuard::ScopeGuard"], [134, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard"], [134, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERR10ScopeGuard", "ScopeGuard::ScopeGuard"], [134, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard"], [134, 4, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::Args"], [134, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argc"], [134, 3, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::args"], [134, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard::arguments"], [134, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argv"], [134, 2, 1, "_CPPv4N10ScopeGuardaSERK10ScopeGuard", "ScopeGuard::operator="], [134, 2, 1, "_CPPv4N10ScopeGuardaSERR10ScopeGuard", "ScopeGuard::operator="], [134, 2, 1, "_CPPv4N10ScopeGuardD0Ev", "ScopeGuard::~ScopeGuard"], [189, 5, 1, "_CPPv412array_layout", "array_layout"], [189, 5, 1, "_CPPv415const_data_type", "const_data_type"], [189, 5, 1, "_CPPv423const_scalar_array_type", "const_scalar_array_type"], [189, 5, 1, "_CPPv410const_type", "const_type"], [189, 5, 1, "_CPPv416const_value_type", "const_value_type"], [189, 5, 1, "_CPPv49data_type", "data_type"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::src"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::src"], [189, 5, 1, "_CPPv411device_type", "device_type"], [189, 5, 1, "_CPPv49dimension", "dimension"], [189, 5, 1, "_CPPv415execution_space", "execution_space"], [189, 5, 1, "_CPPv417host_mirror_space", "host_mirror_space"], [189, 5, 1, "_CPPv412memory_space", "memory_space"], [189, 5, 1, "_CPPv413memory_traits", "memory_traits"], [189, 5, 1, "_CPPv419non_const_data_type", "non_const_data_type"], [189, 5, 1, "_CPPv427non_const_scalar_array_type", "non_const_scalar_array_type"], [189, 5, 1, "_CPPv414non_const_type", "non_const_type"], [189, 5, 1, "_CPPv420non_const_value_type", "non_const_value_type"], [189, 5, 1, "_CPPv412pointer_type", "pointer_type"], [189, 5, 1, "_CPPv414reference_type", "reference_type"], [189, 5, 1, "_CPPv417scalar_array_type", "scalar_array_type"], [189, 5, 1, "_CPPv49size_type", "size_type"], [189, 5, 1, "_CPPv410specialize", "specialize"], [189, 5, 1, "_CPPv410value_type", "value_type"], [190, 6, 1, "_CPPv410ALLOC_PROP", "ALLOC_PROP"], [166, 7, 1, "_CPPv4I0_6size_t0E5Array", "Array"], [166, 7, 1, "_CPPv4I0_6size_tE5Array", "Array"], [166, 8, 1, "_CPPv4I0DpE5Array5ArrayI1TXplL1EsZ1UEE1TDp1U", "Array"], [166, 9, 1, "_CPPv4I0_6size_t0E5Array", "Array::N"], [166, 9, 1, "_CPPv4I0_6size_tE5Array", "Array::N"], [166, 9, 1, "_CPPv4I0_6size_t0E5Array", "Array::Proxy"], [166, 9, 1, "_CPPv4I0DpE5Array5ArrayI1TXplL1EsZ1UEE1TDp1U", "Array::T"], [166, 9, 1, "_CPPv4I0_6size_t0E5Array", "Array::T"], [166, 9, 1, "_CPPv4I0_6size_tE5Array", "Array::T"], [166, 9, 1, "_CPPv4I0DpE5Array5ArrayI1TXplL1EsZ1UEE1TDp1U", "Array::U"], [166, 6, 1, "_CPPv4N5Array13const_pointerE", "Array::const_pointer"], [166, 6, 1, "_CPPv4N5Array15const_referenceE", "Array::const_reference"], [166, 8, 1, "_CPPv4N5Array4dataEv", "Array::data"], [166, 8, 1, "_CPPv4NK5Array4dataEv", "Array::data"], [166, 6, 1, "_CPPv4N5Array15difference_typeE", "Array::difference_type"], [166, 8, 1, "_CPPv4N5Array5emptyEv", "Array::empty"], [166, 8, 1, "_CPPv4NK5Array8max_sizeEv", "Array::max_size"], [166, 8, 1, "_CPPv4I0EN5ArrayixE9referenceRK5iType", "Array::operator[]"], [166, 8, 1, "_CPPv4I0ENK5ArrayixE15const_referenceRK5iType", "Array::operator[]"], [166, 10, 1, "_CPPv4I0EN5ArrayixE9referenceRK5iType", "Array::operator[]::i"], [166, 10, 1, "_CPPv4I0ENK5ArrayixE15const_referenceRK5iType", "Array::operator[]::i"], [166, 9, 1, "_CPPv4I0EN5ArrayixE9referenceRK5iType", "Array::operator[]::iType"], [166, 9, 1, "_CPPv4I0ENK5ArrayixE15const_referenceRK5iType", "Array::operator[]::iType"], [166, 6, 1, "_CPPv4N5Array7pointerE", "Array::pointer"], [166, 6, 1, "_CPPv4N5Array9referenceE", "Array::reference"], [166, 8, 1, "_CPPv4N5Array4sizeEv", "Array::size"], [166, 6, 1, "_CPPv4N5Array9size_typeE", "Array::size_type"], [166, 6, 1, "_CPPv4N5Array10value_typeE", "Array::value_type"], [166, 7, 1, "_CPPv4I00E5ArrayI1TXL0EE5ProxyE", "Array&lt;T, 0, Proxy&gt;"], [166, 9, 1, "_CPPv4I00E5ArrayI1TXL0EE5ProxyE", "Array&lt;T, 0, Proxy&gt;::Proxy"], [166, 9, 1, "_CPPv4I00E5ArrayI1TXL0EE5ProxyE", "Array&lt;T, 0, Proxy&gt;::T"], [166, 7, 1, "_CPPv4I0E5ArrayI1T20KOKKOS_INVALID_INDEXN5ArrayIE10contiguousEE", "Array&lt;T, KOKKOS_INVALID_INDEX, Array&lt;&gt;::contiguous&gt;"], [166, 9, 1, "_CPPv4I0E5ArrayI1T20KOKKOS_INVALID_INDEXN5ArrayIE10contiguousEE", "Array&lt;T, KOKKOS_INVALID_INDEX, Array&lt;&gt;::contiguous&gt;::T"], [166, 7, 1, "_CPPv4I0E5ArrayI1T20KOKKOS_INVALID_INDEXN5ArrayIE7stridedEE", "Array&lt;T, KOKKOS_INVALID_INDEX, Array&lt;&gt;::strided&gt;"], [166, 9, 1, "_CPPv4I0E5ArrayI1T20KOKKOS_INVALID_INDEXN5ArrayIE7stridedEE", "Array&lt;T, KOKKOS_INVALID_INDEX, Array&lt;&gt;::strided&gt;::T"], [166, 7, 1, "_CPPv4IE5ArrayIv20KOKKOS_INVALID_INDEXvE", "Array&lt;void, KOKKOS_INVALID_INDEX, void&gt;"], [166, 6, 1, "_CPPv4N5ArrayIv20KOKKOS_INVALID_INDEXvE10contiguousE", "Array&lt;void, KOKKOS_INVALID_INDEX, void&gt;::contiguous"], [166, 6, 1, "_CPPv4N5ArrayIv20KOKKOS_INVALID_INDEXvE6stidedE", "Array&lt;void, KOKKOS_INVALID_INDEX, void&gt;::stided"], [110, 7, 1, "_CPPv4I00E4BAnd", "BAnd"], [110, 11, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd"], [110, 11, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd"], [110, 10, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd::value_"], [110, 10, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd::value_"], [110, 9, 1, "_CPPv4I00E4BAnd", "BAnd::Scalar"], [110, 9, 1, "_CPPv4I00E4BAnd", "BAnd::Space"], [110, 11, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init"], [110, 10, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init::val"], [110, 11, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join"], [110, 10, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::dest"], [110, 10, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::src"], [110, 6, 1, "_CPPv4N4BAnd7reducerE", "BAnd::reducer"], [110, 11, 1, "_CPPv4NK4BAnd9referenceEv", "BAnd::reference"], [110, 6, 1, "_CPPv4N4BAnd16result_view_typeE", "BAnd::result_view_type"], [110, 6, 1, "_CPPv4N4BAnd10value_typeE", "BAnd::value_type"], [110, 11, 1, "_CPPv4NK4BAnd4viewEv", "BAnd::view"], [111, 7, 1, "_CPPv4I00E3BOr", "BOr"], [111, 11, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr"], [111, 11, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr"], [111, 10, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr::value_"], [111, 10, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr::value_"], [111, 9, 1, "_CPPv4I00E3BOr", "BOr::Scalar"], [111, 9, 1, "_CPPv4I00E3BOr", "BOr::Space"], [111, 11, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init"], [111, 10, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init::val"], [111, 11, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join"], [111, 10, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::dest"], [111, 10, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::src"], [111, 6, 1, "_CPPv4N3BOr7reducerE", "BOr::reducer"], [111, 11, 1, "_CPPv4NK3BOr9referenceEv", "BOr::reference"], [111, 6, 1, "_CPPv4N3BOr16result_view_typeE", "BOr::result_view_type"], [111, 6, 1, "_CPPv4N3BOr10value_typeE", "BOr::value_type"], [111, 11, 1, "_CPPv4NK3BOr4viewEv", "BOr::view"], [154, 8, 1, "_CPPv49ChunkSizei", "ChunkSize"], [154, 10, 1, "_CPPv49ChunkSizei", "ChunkSize::value_"], [229, 7, 1, "_CPPv4I0DpE10CoolerView", "CoolerView"], [229, 8, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView"], [229, 10, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView::rhs"], [229, 9, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::DataType"], [229, 9, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::Traits"], [229, 6, 1, "_CPPv4N10CoolerView9data_typeE", "CoolerView::data_type"], [229, 8, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo"], [229, 9, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::U"], [229, 10, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::x"], [229, 6, 1, "_CPPv4N10CoolerView6foobarE", "CoolerView::foobar"], [229, 6, 1, "_CPPv4N10CoolerView6foobatE", "CoolerView::foobat"], [229, 12, 1, "_CPPv4N10CoolerView8some_varE", "CoolerView::some_var"], [229, 8, 1, "_CPPv4N10CoolerViewD0Ev", "CoolerView::~CoolerView"], [75, 7, 1, "_CPPv4I0000E8DualView", "DualView"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg1Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg2Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg3Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::DataType"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 8, 1, "_CPPv4N8DualView8DualViewEv", "DualView::DualView"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::arg0"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::arg_prop"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::args"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::d_view_"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::h_view_"], [75, 10, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::label"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 10, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 10, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 10, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 10, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 10, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 10, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 10, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 10, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::src"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView::src"], [75, 8, 1, "_CPPv4N8DualView16clear_sync_stateEv", "DualView::clear_sync_state"], [75, 12, 1, "_CPPv4N8DualView6d_viewE", "DualView::d_view"], [75, 11, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent"], [75, 9, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::iType"], [75, 10, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::r"], [75, 11, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int"], [75, 9, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::iType"], [75, 10, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::r"], [75, 8, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side"], [75, 9, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side::Device"], [75, 12, 1, "_CPPv4N8DualView6h_viewE", "DualView::h_view"], [75, 6, 1, "_CPPv4N8DualView17host_mirror_spaceE", "DualView::host_mirror_space"], [75, 8, 1, "_CPPv4NK8DualView12is_allocatedEv", "DualView::is_allocated"], [75, 12, 1, "_CPPv4N8DualView15modified_deviceE", "DualView::modified_device"], [75, 12, 1, "_CPPv4N8DualView14modified_flagsE", "DualView::modified_flags"], [75, 12, 1, "_CPPv4N8DualView13modified_hostE", "DualView::modified_host"], [75, 8, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify"], [75, 9, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify::Device"], [75, 8, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync"], [75, 9, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync::Device"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc"], [75, 10, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n0"], [75, 10, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n1"], [75, 10, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n2"], [75, 10, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n3"], [75, 10, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n4"], [75, 10, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n5"], [75, 10, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n6"], [75, 10, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n7"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize"], [75, 10, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n0"], [75, 10, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n1"], [75, 10, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n2"], [75, 10, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n3"], [75, 10, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n4"], [75, 10, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n5"], [75, 10, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n6"], [75, 10, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n7"], [75, 11, 1, "_CPPv4NK8DualView4spanEv", "DualView::span"], [75, 11, 1, "_CPPv4N8DualView18span_is_contiguousEv", "DualView::span_is_contiguous"], [75, 8, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride"], [75, 9, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::iType"], [75, 10, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::stride_"], [75, 8, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 8, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 9, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 9, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 6, 1, "_CPPv4N8DualView5t_devE", "DualView::t_dev"], [75, 6, 1, "_CPPv4N8DualView11t_dev_constE", "DualView::t_dev_const"], [75, 6, 1, "_CPPv4N8DualView22t_dev_const_randomreadE", "DualView::t_dev_const_randomread"], [75, 6, 1, "_CPPv4N8DualView25t_dev_const_randomread_umE", "DualView::t_dev_const_randomread_um"], [75, 6, 1, "_CPPv4N8DualView14t_dev_const_umE", "DualView::t_dev_const_um"], [75, 6, 1, "_CPPv4N8DualView8t_dev_umE", "DualView::t_dev_um"], [75, 6, 1, "_CPPv4N8DualView6t_hostE", "DualView::t_host"], [75, 6, 1, "_CPPv4N8DualView12t_host_constE", "DualView::t_host_const"], [75, 6, 1, "_CPPv4N8DualView23t_host_const_randomreadE", "DualView::t_host_const_randomread"], [75, 6, 1, "_CPPv4N8DualView26t_host_const_randomread_umE", "DualView::t_host_const_randomread_um"], [75, 6, 1, "_CPPv4N8DualView15t_host_const_umE", "DualView::t_host_const_um"], [75, 6, 1, "_CPPv4N8DualView9t_host_umE", "DualView::t_host_um"], [75, 6, 1, "_CPPv4N8DualView15t_modified_flagE", "DualView::t_modified_flag"], [75, 6, 1, "_CPPv4N8DualView16t_modified_flagsE", "DualView::t_modified_flags"], [75, 6, 1, "_CPPv4N8DualView6traitsE", "DualView::traits"], [75, 11, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view"], [75, 9, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view::Device"], [76, 7, 1, "_CPPv4I0000E11DynRankView", "DynRankView"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::DataType"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewEv", "DynRankView::DynRankView"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::args"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::layout"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::layout"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::layout"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::layout"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::name"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::name"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::prop"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::prop"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::ptr"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::ptr"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView::rhs"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::rhs"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView::rhs"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView::rhs"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::space"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::space"], [76, 6, 1, "_CPPv4N11DynRankView10HostMirrorE", "DynRankView::HostMirror"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::LayoutType"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemorySpace"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemoryTraits"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access"], [76, 10, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i0"], [76, 10, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i1"], [76, 10, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i2"], [76, 10, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i3"], [76, 10, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i4"], [76, 10, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i5"], [76, 10, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i6"], [76, 6, 1, "_CPPv4N11DynRankView12array_layoutE", "DynRankView::array_layout"], [76, 6, 1, "_CPPv4N11DynRankView15const_data_typeE", "DynRankView::const_data_type"], [76, 6, 1, "_CPPv4N11DynRankView23const_scalar_array_typeE", "DynRankView::const_scalar_array_type"], [76, 6, 1, "_CPPv4N11DynRankView10const_typeE", "DynRankView::const_type"], [76, 6, 1, "_CPPv4N11DynRankView16const_value_typeE", "DynRankView::const_value_type"], [76, 8, 1, "_CPPv4NK11DynRankView4dataEv", "DynRankView::data"], [76, 6, 1, "_CPPv4N11DynRankView9data_typeE", "DynRankView::data_type"], [76, 6, 1, "_CPPv4N11DynRankView11device_typeE", "DynRankView::device_type"], [76, 6, 1, "_CPPv4N11DynRankView9dimensionE", "DynRankView::dimension"], [76, 6, 1, "_CPPv4N11DynRankView15execution_spaceE", "DynRankView::execution_space"], [76, 8, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent"], [76, 10, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::iType"], [76, 8, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int"], [76, 10, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::iType"], [76, 6, 1, "_CPPv4N11DynRankView17host_mirror_spaceE", "DynRankView::host_mirror_space"], [76, 8, 1, "_CPPv4NK11DynRankView12is_allocatedEv", "DynRankView::is_allocated"], [76, 8, 1, "_CPPv4NK11DynRankView5labelEv", "DynRankView::label"], [76, 8, 1, "_CPPv4NK11DynRankView6layoutEv", "DynRankView::layout"], [76, 6, 1, "_CPPv4N11DynRankView12memory_spaceE", "DynRankView::memory_space"], [76, 6, 1, "_CPPv4N11DynRankView13memory_traitsE", "DynRankView::memory_traits"], [76, 6, 1, "_CPPv4N11DynRankView19non_const_data_typeE", "DynRankView::non_const_data_type"], [76, 6, 1, "_CPPv4N11DynRankView27non_const_scalar_array_typeE", "DynRankView::non_const_scalar_array_type"], [76, 6, 1, "_CPPv4N11DynRankView14non_const_typeE", "DynRankView::non_const_type"], [76, 6, 1, "_CPPv4N11DynRankView20non_const_value_typeE", "DynRankView::non_const_value_type"], [76, 8, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()"], [76, 10, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()::indices"], [76, 6, 1, "_CPPv4N11DynRankView12pointer_typeE", "DynRankView::pointer_type"], [76, 8, 1, "_CPPv4NK11DynRankView4rankEv", "DynRankView::rank"], [76, 6, 1, "_CPPv4N11DynRankView14reference_typeE", "DynRankView::reference_type"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size"], [76, 10, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N0"], [76, 10, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N1"], [76, 10, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N2"], [76, 10, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N3"], [76, 10, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N4"], [76, 10, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N5"], [76, 10, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N6"], [76, 10, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N7"], [76, 10, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N8"], [76, 10, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size::layout"], [76, 6, 1, "_CPPv4N11DynRankView17scalar_array_typeE", "DynRankView::scalar_array_type"], [76, 6, 1, "_CPPv4N11DynRankView9size_typeE", "DynRankView::size_type"], [76, 8, 1, "_CPPv4NK11DynRankView4spanEv", "DynRankView::span"], [76, 8, 1, "_CPPv4NK11DynRankView18span_is_contiguousEv", "DynRankView::span_is_contiguous"], [76, 6, 1, "_CPPv4N11DynRankView10specializeE", "DynRankView::specialize"], [76, 8, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride"], [76, 10, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::iType"], [76, 8, 1, "_CPPv4NK11DynRankView8stride_0Ev", "DynRankView::stride_0"], [76, 8, 1, "_CPPv4NK11DynRankView8stride_1Ev", "DynRankView::stride_1"], [76, 8, 1, "_CPPv4NK11DynRankView8stride_2Ev", "DynRankView::stride_2"], [76, 8, 1, "_CPPv4NK11DynRankView8stride_3Ev", "DynRankView::stride_3"], [76, 8, 1, "_CPPv4NK11DynRankView8stride_4Ev", "DynRankView::stride_4"], [76, 8, 1, "_CPPv4NK11DynRankView8stride_5Ev", "DynRankView::stride_5"], [76, 8, 1, "_CPPv4NK11DynRankView8stride_6Ev", "DynRankView::stride_6"], [76, 8, 1, "_CPPv4NK11DynRankView8stride_7Ev", "DynRankView::stride_7"], [76, 8, 1, "_CPPv4NK11DynRankView9use_countEv", "DynRankView::use_count"], [76, 6, 1, "_CPPv4N11DynRankView10value_typeE", "DynRankView::value_type"], [77, 7, 1, "_CPPv4I0DpE11DynamicView", "DynamicView"], [77, 9, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::DataType"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewEv", "DynamicView::DynamicView"], [77, 10, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::arg_label"], [77, 10, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::max_extent"], [77, 10, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::min_chunk_size"], [77, 10, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView::rhs"], [77, 10, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView::rhs"], [77, 6, 1, "_CPPv4N11DynamicView10HostMirrorE", "DynamicView::HostMirror"], [77, 9, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::P"], [77, 11, 1, "_CPPv4NK11DynamicView17allocation_extentEv", "DynamicView::allocation_extent"], [77, 6, 1, "_CPPv4N11DynamicView10array_typeE", "DynamicView::array_type"], [77, 11, 1, "_CPPv4NK11DynamicView10chunk_sizeEv", "DynamicView::chunk_size"], [77, 6, 1, "_CPPv4N11DynamicView10const_typeE", "DynamicView::const_type"], [77, 11, 1, "_CPPv4NK11DynamicView4dataEv", "DynamicView::data"], [77, 11, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent"], [77, 10, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::iType"], [77, 11, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int"], [77, 10, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::iType"], [77, 8, 1, "_CPPv4NK11DynamicView12is_allocatedEv", "DynamicView::is_allocated"], [77, 8, 1, "_CPPv4N11DynamicView5labelEv", "DynamicView::label"], [77, 6, 1, "_CPPv4N11DynamicView14non_const_typeE", "DynamicView::non_const_type"], [77, 11, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()"], [77, 10, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::args"], [77, 10, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::i0"], [77, 6, 1, "_CPPv4N11DynamicView12pointer_typeE", "DynamicView::pointer_type"], [77, 6, 1, "_CPPv4N11DynamicView14reference_typeE", "DynamicView::reference_type"], [77, 12, 1, "_CPPv4N11DynamicView34reference_type_is_lvalue_referenceE", "DynamicView::reference_type_is_lvalue_reference"], [77, 8, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial"], [77, 9, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::IntType"], [77, 10, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::n"], [77, 11, 1, "_CPPv4NK11DynamicView4sizeEv", "DynamicView::size"], [77, 11, 1, "_CPPv4NK11DynamicView4spanEv", "DynamicView::span"], [77, 11, 1, "_CPPv4NK11DynamicView18span_is_contiguousEv", "DynamicView::span_is_contiguous"], [77, 11, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride"], [77, 10, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::iType"], [77, 11, 1, "_CPPv4NK11DynamicView8stride_0Ev", "DynamicView::stride_0"], [77, 11, 1, "_CPPv4NK11DynamicView8stride_1Ev", "DynamicView::stride_1"], [77, 11, 1, "_CPPv4NK11DynamicView8stride_2Ev", "DynamicView::stride_2"], [77, 11, 1, "_CPPv4NK11DynamicView8stride_3Ev", "DynamicView::stride_3"], [77, 11, 1, "_CPPv4NK11DynamicView8stride_4Ev", "DynamicView::stride_4"], [77, 11, 1, "_CPPv4NK11DynamicView8stride_5Ev", "DynamicView::stride_5"], [77, 11, 1, "_CPPv4NK11DynamicView8stride_6Ev", "DynamicView::stride_6"], [77, 11, 1, "_CPPv4NK11DynamicView8stride_7Ev", "DynamicView::stride_7"], [77, 6, 1, "_CPPv4N11DynamicView6traitsE", "DynamicView::traits"], [77, 11, 1, "_CPPv4NK11DynamicView9use_countEv", "DynamicView::use_count"], [132, 7, 1, "_CPPv413InitArguments", "InitArguments"], [132, 8, 1, "_CPPv4N13InitArguments13InitArgumentsEv", "InitArguments::InitArguments"], [132, 12, 1, "_CPPv4N13InitArguments9device_idE", "InitArguments::device_id"], [132, 12, 1, "_CPPv4N13InitArguments16disable_warningsE", "InitArguments::disable_warnings"], [132, 12, 1, "_CPPv4N13InitArguments8ndevicesE", "InitArguments::ndevices"], [132, 12, 1, "_CPPv4N13InitArguments8num_numaE", "InitArguments::num_numa"], [132, 12, 1, "_CPPv4N13InitArguments11num_threadsE", "InitArguments::num_threads"], [132, 12, 1, "_CPPv4N13InitArguments11skip_deviceE", "InitArguments::skip_device"], [133, 7, 1, "_CPPv422InitializationSettings", "InitializationSettings"], [133, 8, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings"], [133, 8, 1, "_CPPv4N22InitializationSettings22InitializationSettingsEv", "InitializationSettings::InitializationSettings"], [133, 10, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings::arguments"], [133, 8, 1, "_CPPv4NK22InitializationSettings18get_PARAMETER_NAMEEv", "InitializationSettings::get_PARAMETER_NAME"], [133, 8, 1, "_CPPv4NK22InitializationSettings18has_PARAMETER_NAMEEv", "InitializationSettings::has_PARAMETER_NAME"], [133, 8, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME"], [133, 10, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME::value"], [182, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [182, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [182, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [182, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [182, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [182, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [182, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [182, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ExecSpace"], [182, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [182, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [182, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [182, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [182, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [182, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [182, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [182, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [182, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [182, 10, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [182, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [182, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [182, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [182, 10, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [182, 10, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [182, 10, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::exec_space"], [182, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::exec_space"], [182, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::exec_space"], [182, 10, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [182, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [182, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [182, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [182, 10, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [182, 10, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [112, 7, 1, "_CPPv4I00E4LAnd", "LAnd"], [112, 11, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd"], [112, 11, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd"], [112, 10, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd::value_"], [112, 10, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd::value_"], [112, 9, 1, "_CPPv4I00E4LAnd", "LAnd::Scalar"], [112, 9, 1, "_CPPv4I00E4LAnd", "LAnd::Space"], [112, 11, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init"], [112, 10, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init::val"], [112, 11, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join"], [112, 10, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::dest"], [112, 10, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::src"], [112, 6, 1, "_CPPv4N4LAnd7reducerE", "LAnd::reducer"], [112, 11, 1, "_CPPv4NK4LAnd9referenceEv", "LAnd::reference"], [112, 6, 1, "_CPPv4N4LAnd16result_view_typeE", "LAnd::result_view_type"], [112, 6, 1, "_CPPv4N4LAnd10value_typeE", "LAnd::value_type"], [112, 11, 1, "_CPPv4NK4LAnd4viewEv", "LAnd::view"], [113, 7, 1, "_CPPv4I00E3LOr", "LOr"], [113, 11, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr"], [113, 11, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr"], [113, 10, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr::value_"], [113, 10, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr::value_"], [113, 9, 1, "_CPPv4I00E3LOr", "LOr::Scalar"], [113, 9, 1, "_CPPv4I00E3LOr", "LOr::Space"], [113, 11, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init"], [113, 10, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init::val"], [113, 11, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join"], [113, 10, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::dest"], [113, 10, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::src"], [113, 6, 1, "_CPPv4N3LOr7reducerE", "LOr::reducer"], [113, 11, 1, "_CPPv4NK3LOr9referenceEv", "LOr::reference"], [113, 6, 1, "_CPPv4N3LOr16result_view_typeE", "LOr::result_view_type"], [113, 6, 1, "_CPPv4N3LOr10value_typeE", "LOr::value_type"], [113, 11, 1, "_CPPv4NK3LOr4viewEv", "LOr::view"], [183, 7, 1, "_CPPv410LayoutLeft", "LayoutLeft"], [183, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftERK10LayoutLeft", "LayoutLeft::LayoutLeft"], [183, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftERR10LayoutLeft", "LayoutLeft::LayoutLeft"], [183, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft"], [183, 10, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N0"], [183, 10, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N1"], [183, 10, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N2"], [183, 10, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N3"], [183, 10, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N4"], [183, 10, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N5"], [183, 10, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N6"], [183, 10, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N7"], [183, 6, 1, "_CPPv4N10LayoutLeft12array_layoutE", "LayoutLeft::array_layout"], [183, 12, 1, "_CPPv4N10LayoutLeft9dimensionE", "LayoutLeft::dimension"], [183, 12, 1, "_CPPv4N10LayoutLeft23is_extent_constructibleE", "LayoutLeft::is_extent_constructible"], [183, 8, 1, "_CPPv4N10LayoutLeftaSERK10LayoutLeft", "LayoutLeft::operator="], [183, 8, 1, "_CPPv4N10LayoutLeftaSERR10LayoutLeft", "LayoutLeft::operator="], [184, 7, 1, "_CPPv411LayoutRight", "LayoutRight"], [184, 8, 1, "_CPPv4N11LayoutRight11LayoutRightERK11LayoutRight", "LayoutRight::LayoutRight"], [184, 8, 1, "_CPPv4N11LayoutRight11LayoutRightERR11LayoutRight", "LayoutRight::LayoutRight"], [184, 11, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight"], [184, 10, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N0"], [184, 10, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N1"], [184, 10, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N2"], [184, 10, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N3"], [184, 10, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N4"], [184, 10, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N5"], [184, 10, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N6"], [184, 10, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N7"], [184, 6, 1, "_CPPv4N11LayoutRight12array_layoutE", "LayoutRight::array_layout"], [184, 12, 1, "_CPPv4N11LayoutRight9dimensionE", "LayoutRight::dimension"], [184, 12, 1, "_CPPv4N11LayoutRight23is_extent_constructibleE", "LayoutRight::is_extent_constructible"], [184, 8, 1, "_CPPv4N11LayoutRightaSERK11LayoutRight", "LayoutRight::operator="], [184, 8, 1, "_CPPv4N11LayoutRightaSERR11LayoutRight", "LayoutRight::operator="], [185, 8, 1, "_CPPv412LayoutStrideRK12LayoutStride", "LayoutStride"], [185, 8, 1, "_CPPv412LayoutStrideRR12LayoutStride", "LayoutStride"], [185, 11, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N0"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N1"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N2"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N3"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N4"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N5"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N6"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N7"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S0"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S1"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S2"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S3"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S4"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S5"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S6"], [185, 10, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S7"], [152, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [152, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [152, 8, 1, "_CPPv413MDRangePolicyv", "MDRangePolicy"], [152, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy"], [152, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy"], [152, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::IT"], [152, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::IT"], [152, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::OT"], [152, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::OT"], [152, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::TT"], [152, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::TT"], [152, 10, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [152, 10, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [152, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::begin"], [152, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::begin"], [152, 10, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [152, 10, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [152, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::end"], [152, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::end"], [152, 10, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::tiling"], [152, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::tiling"], [114, 7, 1, "_CPPv4I00E3Max", "Max"], [114, 11, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max"], [114, 11, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max"], [114, 10, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max::value_"], [114, 10, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max::value_"], [114, 9, 1, "_CPPv4I00E3Max", "Max::Scalar"], [114, 9, 1, "_CPPv4I00E3Max", "Max::Space"], [114, 11, 1, "_CPPv4NK3Max4initER10value_type", "Max::init"], [114, 10, 1, "_CPPv4NK3Max4initER10value_type", "Max::init::val"], [114, 11, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join"], [114, 10, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::dest"], [114, 10, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::src"], [114, 6, 1, "_CPPv4N3Max7reducerE", "Max::reducer"], [114, 11, 1, "_CPPv4NK3Max9referenceEv", "Max::reference"], [114, 6, 1, "_CPPv4N3Max16result_view_typeE", "Max::result_view_type"], [114, 6, 1, "_CPPv4N3Max10value_typeE", "Max::value_type"], [114, 11, 1, "_CPPv4NK3Max4viewEv", "Max::view"], [115, 7, 1, "_CPPv4I000E6MaxLoc", "MaxLoc"], [115, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Index"], [115, 11, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc"], [115, 11, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc"], [115, 10, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc::value_"], [115, 10, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc::value_"], [115, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Scalar"], [115, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Space"], [115, 11, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init"], [115, 10, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init::val"], [115, 11, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join"], [115, 10, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::dest"], [115, 10, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::src"], [115, 6, 1, "_CPPv4N6MaxLoc7reducerE", "MaxLoc::reducer"], [115, 11, 1, "_CPPv4NK6MaxLoc9referenceEv", "MaxLoc::reference"], [115, 6, 1, "_CPPv4N6MaxLoc16result_view_typeE", "MaxLoc::result_view_type"], [115, 6, 1, "_CPPv4N6MaxLoc10value_typeE", "MaxLoc::value_type"], [115, 11, 1, "_CPPv4NK6MaxLoc4viewEv", "MaxLoc::view"], [116, 7, 1, "_CPPv4I00E3Min", "Min"], [116, 11, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min"], [116, 11, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min"], [116, 10, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min::value_"], [116, 10, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min::value_"], [116, 9, 1, "_CPPv4I00E3Min", "Min::Scalar"], [116, 9, 1, "_CPPv4I00E3Min", "Min::Space"], [116, 11, 1, "_CPPv4NK3Min4initER10value_type", "Min::init"], [116, 10, 1, "_CPPv4NK3Min4initER10value_type", "Min::init::val"], [116, 11, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join"], [116, 10, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::dest"], [116, 10, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::src"], [116, 6, 1, "_CPPv4N3Min7reducerE", "Min::reducer"], [116, 11, 1, "_CPPv4NK3Min9referenceEv", "Min::reference"], [116, 6, 1, "_CPPv4N3Min16result_view_typeE", "Min::result_view_type"], [116, 6, 1, "_CPPv4N3Min10value_typeE", "Min::value_type"], [116, 11, 1, "_CPPv4NK3Min4viewEv", "Min::view"], [117, 7, 1, "_CPPv4I000E6MinLoc", "MinLoc"], [117, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Index"], [117, 11, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc"], [117, 11, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc"], [117, 10, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc::value_"], [117, 10, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc::value_"], [117, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Scalar"], [117, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Space"], [117, 11, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init"], [117, 10, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init::val"], [117, 11, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join"], [117, 10, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::dest"], [117, 10, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::src"], [117, 6, 1, "_CPPv4N6MinLoc7reducerE", "MinLoc::reducer"], [117, 11, 1, "_CPPv4NK6MinLoc9referenceEv", "MinLoc::reference"], [117, 6, 1, "_CPPv4N6MinLoc16result_view_typeE", "MinLoc::result_view_type"], [117, 6, 1, "_CPPv4N6MinLoc10value_typeE", "MinLoc::value_type"], [117, 11, 1, "_CPPv4NK6MinLoc4viewEv", "MinLoc::view"], [118, 7, 1, "_CPPv4I00E6MinMax", "MinMax"], [118, 11, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax"], [118, 11, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax"], [118, 10, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax::value_"], [118, 10, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax::value_"], [118, 9, 1, "_CPPv4I00E6MinMax", "MinMax::Scalar"], [118, 9, 1, "_CPPv4I00E6MinMax", "MinMax::Space"], [118, 11, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init"], [118, 10, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init::val"], [118, 11, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join"], [118, 10, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::dest"], [118, 10, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::src"], [118, 6, 1, "_CPPv4N6MinMax7reducerE", "MinMax::reducer"], [118, 11, 1, "_CPPv4NK6MinMax9referenceEv", "MinMax::reference"], [118, 6, 1, "_CPPv4N6MinMax16result_view_typeE", "MinMax::result_view_type"], [118, 6, 1, "_CPPv4N6MinMax10value_typeE", "MinMax::value_type"], [118, 11, 1, "_CPPv4NK6MinMax4viewEv", "MinMax::view"], [119, 7, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc"], [119, 11, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc"], [119, 11, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc"], [119, 10, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc::value_"], [119, 10, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc::value_"], [119, 9, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Scalar"], [119, 9, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Space"], [119, 11, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init"], [119, 10, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init::val"], [119, 11, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join"], [119, 10, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::dest"], [119, 10, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::src"], [119, 6, 1, "_CPPv4N9MinMaxLoc7reducerE", "MinMaxLoc::reducer"], [119, 11, 1, "_CPPv4NK9MinMaxLoc9referenceEv", "MinMaxLoc::reference"], [119, 6, 1, "_CPPv4N9MinMaxLoc16result_view_typeE", "MinMaxLoc::result_view_type"], [119, 6, 1, "_CPPv4N9MinMaxLoc10value_typeE", "MinMaxLoc::value_type"], [119, 11, 1, "_CPPv4NK9MinMaxLoc4viewEv", "MinMaxLoc::view"], [120, 7, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar"], [120, 9, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Index"], [120, 9, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Scalar"], [120, 12, 1, "_CPPv4N15MinMaxLocScalar7max_locE", "MinMaxLocScalar::max_loc"], [120, 12, 1, "_CPPv4N15MinMaxLocScalar7max_valE", "MinMaxLocScalar::max_val"], [120, 12, 1, "_CPPv4N15MinMaxLocScalar7min_locE", "MinMaxLocScalar::min_loc"], [120, 12, 1, "_CPPv4N15MinMaxLocScalar7min_valE", "MinMaxLocScalar::min_val"], [120, 8, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator="], [120, 10, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator=::rhs"], [121, 7, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar"], [121, 9, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar::Scalar"], [121, 12, 1, "_CPPv4N12MinMaxScalar7max_valE", "MinMaxScalar::max_val"], [121, 12, 1, "_CPPv4N12MinMaxScalar7min_valE", "MinMaxScalar::min_val"], [121, 8, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator="], [121, 10, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator=::rhs"], [153, 8, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam"], [153, 10, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam::team"], [153, 8, 1, "_CPPv49PerThread14TeamMemberType", "PerThread"], [153, 10, 1, "_CPPv49PerThread14TeamMemberType", "PerThread::team"], [122, 7, 1, "_CPPv4I00E4Prod", "Prod"], [122, 11, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod"], [122, 11, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod"], [122, 10, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod::value_"], [122, 10, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod::value_"], [122, 9, 1, "_CPPv4I00E4Prod", "Prod::Scalar"], [122, 9, 1, "_CPPv4I00E4Prod", "Prod::Space"], [122, 11, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init"], [122, 10, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init::val"], [122, 11, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join"], [122, 10, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::dest"], [122, 10, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::src"], [122, 6, 1, "_CPPv4N4Prod7reducerE", "Prod::reducer"], [122, 11, 1, "_CPPv4NK4Prod9referenceEv", "Prod::reference"], [122, 6, 1, "_CPPv4N4Prod16result_view_typeE", "Prod::result_view_type"], [122, 6, 1, "_CPPv4N4Prod10value_typeE", "Prod::value_type"], [122, 11, 1, "_CPPv4NK4Prod4viewEv", "Prod::view"], [163, 8, 1, "_CPPv416ProfilingSectionRKNSt6stringE", "ProfilingSection"], [163, 10, 1, "_CPPv416ProfilingSectionRKNSt6stringE", "ProfilingSection::sectionName"], [154, 8, 1, "_CPPv411RangePolicy7int64_t7int64_t", "RangePolicy"], [154, 8, 1, "_CPPv411RangePolicy7int64_t7int64_t9ChunkSize", "RangePolicy"], [154, 8, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t", "RangePolicy"], [154, 8, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy"], [154, 8, 1, "_CPPv411RangePolicyv", "RangePolicy"], [154, 10, 1, "_CPPv411RangePolicy7int64_t7int64_t", "RangePolicy::begin"], [154, 10, 1, "_CPPv411RangePolicy7int64_t7int64_t9ChunkSize", "RangePolicy::begin"], [154, 10, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t", "RangePolicy::begin"], [154, 10, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy::begin"], [154, 10, 1, "_CPPv411RangePolicy7int64_t7int64_t9ChunkSize", "RangePolicy::chunk_size"], [154, 10, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy::chunk_size"], [154, 10, 1, "_CPPv411RangePolicy7int64_t7int64_t", "RangePolicy::end"], [154, 10, 1, "_CPPv411RangePolicy7int64_t7int64_t9ChunkSize", "RangePolicy::end"], [154, 10, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t", "RangePolicy::end"], [154, 10, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy::end"], [154, 10, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t", "RangePolicy::space"], [154, 10, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy::space"], [123, 11, 1, "_CPPv47ReducerR10value_type", "Reducer"], [123, 11, 1, "_CPPv47ReducerRK16result_view_type", "Reducer"], [123, 10, 1, "_CPPv47ReducerR10value_type", "Reducer::value_"], [123, 10, 1, "_CPPv47ReducerRK16result_view_type", "Reducer::value_"], [79, 7, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::DataType"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::ExecSpace"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Layout"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Op"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERK10ALLOC_PROPDp4Dims", "ScatterView::ScatterView"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERK4ViewI2RTDp2RPE", "ScatterView::ScatterView"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewEv", "ScatterView::ScatterView"], [79, 10, 1, "_CPPv4N11ScatterView11ScatterViewERK10ALLOC_PROPDp4Dims", "ScatterView::ScatterView::arg_prop"], [79, 10, 1, "_CPPv4N11ScatterView11ScatterViewERK10ALLOC_PROPDp4Dims", "ScatterView::ScatterView::dims"], [79, 10, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::dims"], [79, 10, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::name"], [79, 8, 1, "_CPPv4NK11ScatterView6accessEv", "ScatterView::access"], [79, 8, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into"], [79, 10, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into::dest"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::contribution"], [79, 6, 1, "_CPPv4N11ScatterView14data_type_infoE", "ScatterView::data_type_info"], [79, 6, 1, "_CPPv4N11ScatterView18internal_data_typeE", "ScatterView::internal_data_type"], [79, 6, 1, "_CPPv4N11ScatterView18internal_view_typeE", "ScatterView::internal_view_type"], [79, 8, 1, "_CPPv4NK11ScatterView12is_allocatedEv", "ScatterView::is_allocated"], [79, 6, 1, "_CPPv4N11ScatterView23original_reference_typeE", "ScatterView::original_reference_type"], [79, 6, 1, "_CPPv4N11ScatterView19original_value_typeE", "ScatterView::original_value_type"], [79, 6, 1, "_CPPv4N11ScatterView18original_view_typeE", "ScatterView::original_view_type"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc"], [79, 10, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n0"], [79, 10, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n1"], [79, 10, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n2"], [79, 10, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n3"], [79, 10, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n4"], [79, 10, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n5"], [79, 10, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n6"], [79, 10, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n7"], [79, 8, 1, "_CPPv4N11ScatterView5resetEv", "ScatterView::reset"], [79, 8, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except"], [79, 10, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except::view"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize"], [79, 10, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n0"], [79, 10, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n1"], [79, 10, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n2"], [79, 10, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n3"], [79, 10, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n4"], [79, 10, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n5"], [79, 10, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n6"], [79, 10, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n7"], [79, 8, 1, "_CPPv4NK11ScatterView7subviewEv", "ScatterView::subview"], [164, 8, 1, "_CPPv412ScopedRegionRKNSt6stringE", "ScopedRegion"], [164, 10, 1, "_CPPv412ScopedRegionRKNSt6stringE", "ScopedRegion::regionName"], [190, 6, 1, "_CPPv418SequentialHostInit", "SequentialHostInit"], [125, 7, 1, "_CPPv4I00E3Sum", "Sum"], [125, 9, 1, "_CPPv4I00E3Sum", "Sum::Scalar"], [125, 9, 1, "_CPPv4I00E3Sum", "Sum::Space"], [125, 11, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum"], [125, 11, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum"], [125, 10, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum::value_"], [125, 10, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum::value_"], [125, 11, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init"], [125, 10, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init::val"], [125, 11, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join"], [125, 10, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::dest"], [125, 10, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::src"], [125, 6, 1, "_CPPv4N3Sum7reducerE", "Sum::reducer"], [125, 11, 1, "_CPPv4NK3Sum9referenceEv", "Sum::reference"], [125, 6, 1, "_CPPv4N3Sum16result_view_typeE", "Sum::result_view_type"], [125, 6, 1, "_CPPv4N3Sum10value_typeE", "Sum::value_type"], [125, 11, 1, "_CPPv4NK3Sum4viewEv", "Sum::view"], [155, 7, 1, "_CPPv417TeamHandleConcept", "TeamHandleConcept"], [155, 8, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERK17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [155, 8, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERR17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [155, 8, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptEv", "TeamHandleConcept::TeamHandleConcept"], [155, 6, 1, "_CPPv4N17TeamHandleConcept15execution_spaceE", "TeamHandleConcept::execution_space"], [155, 11, 1, "_CPPv4NK17TeamHandleConcept11league_rankEv", "TeamHandleConcept::league_rank"], [155, 11, 1, "_CPPv4NK17TeamHandleConcept11league_sizeEv", "TeamHandleConcept::league_size"], [155, 8, 1, "_CPPv4N17TeamHandleConceptaSERK17TeamHandleConcept", "TeamHandleConcept::operator="], [155, 8, 1, "_CPPv4N17TeamHandleConceptaSERR17TeamHandleConcept", "TeamHandleConcept::operator="], [155, 6, 1, "_CPPv4N17TeamHandleConcept20scratch_memory_spaceE", "TeamHandleConcept::scratch_memory_space"], [155, 11, 1, "_CPPv4NK17TeamHandleConcept12team_barrierEv", "TeamHandleConcept::team_barrier"], [155, 11, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast"], [155, 11, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast"], [155, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::Closure"], [155, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::T"], [155, 9, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::T"], [155, 10, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::f"], [155, 10, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [155, 10, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [155, 10, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::value"], [155, 10, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::value"], [155, 11, 1, "_CPPv4NK17TeamHandleConcept9team_rankEv", "TeamHandleConcept::team_rank"], [155, 11, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce"], [155, 9, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::ReducerType"], [155, 10, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::reducer"], [155, 11, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan"], [155, 9, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::T"], [155, 10, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::global"], [155, 10, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::value"], [155, 11, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch"], [155, 10, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch::level"], [155, 11, 1, "_CPPv4NK17TeamHandleConcept10team_shmemEv", "TeamHandleConcept::team_shmem"], [155, 11, 1, "_CPPv4NK17TeamHandleConcept9team_sizeEv", "TeamHandleConcept::team_size"], [155, 11, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch"], [155, 10, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch::level"], [155, 8, 1, "_CPPv4N17TeamHandleConceptD0Ev", "TeamHandleConcept::~TeamHandleConcept"], [156, 7, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy"], [156, 9, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy::Args"], [156, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [156, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [156, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [156, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [156, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyERK10TeamPolicy", "TeamPolicy::TeamPolicy"], [156, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyERR10TeamPolicy", "TeamPolicy::TeamPolicy"], [156, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyEv", "TeamPolicy::TeamPolicy"], [156, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [156, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [156, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [156, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [156, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::space"], [156, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::space"], [156, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [156, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [156, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [156, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [156, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [156, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [156, 8, 1, "_CPPv4NK10TeamPolicy10chunk_sizeEv", "TeamPolicy::chunk_size"], [156, 6, 1, "_CPPv4N10TeamPolicy15execution_spaceE", "TeamPolicy::execution_space"], [156, 6, 1, "_CPPv4N10TeamPolicy10index_typeE", "TeamPolicy::index_type"], [156, 6, 1, "_CPPv4N10TeamPolicy17iteration_patternE", "TeamPolicy::iteration_pattern"], [156, 6, 1, "_CPPv4N10TeamPolicy13launch_boundsE", "TeamPolicy::launch_bounds"], [156, 8, 1, "_CPPv4NK10TeamPolicy11league_sizeEv", "TeamPolicy::league_size"], [156, 6, 1, "_CPPv4N10TeamPolicy11member_typeE", "TeamPolicy::member_type"], [156, 6, 1, "_CPPv4N10TeamPolicy13schedule_typeE", "TeamPolicy::schedule_type"], [156, 8, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size"], [156, 10, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::level"], [156, 10, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::team_size_"], [156, 8, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max"], [156, 10, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max::level"], [156, 8, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size"], [156, 10, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size::chunk"], [156, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [156, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [156, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [156, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [156, 10, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [156, 10, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [156, 10, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [156, 10, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [156, 10, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [156, 10, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_team"], [156, 10, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [156, 10, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [156, 10, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [156, 10, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_thread"], [156, 8, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size"], [156, 10, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size::level"], [156, 8, 1, "_CPPv4NK10TeamPolicy9team_sizeEv", "TeamPolicy::team_size"], [156, 8, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max"], [156, 8, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max"], [156, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::FunctorType"], [156, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::FunctorType"], [156, 10, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::f"], [156, 10, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::f"], [156, 8, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended"], [156, 8, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended"], [156, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::FunctorType"], [156, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::FunctorType"], [156, 10, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::f"], [156, 10, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::f"], [156, 8, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size"], [156, 10, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size::level"], [156, 8, 1, "_CPPv4N10TeamPolicy17vector_length_maxEv", "TeamPolicy::vector_length_max"], [156, 6, 1, "_CPPv4N10TeamPolicy8work_tagE", "TeamPolicy::work_tag"], [157, 7, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange"], [157, 9, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::Rank"], [157, 9, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::TeamHandle"], [157, 8, 1, "_CPPv4N17TeamThreadMDRange17TeamThreadMDRangeE4team8extent_18extent_2z", "TeamThreadMDRange::TeamThreadMDRange"], [153, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange"], [153, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange"], [153, 10, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::begin"], [153, 10, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::count"], [153, 10, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::end"], [153, 10, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::team"], [153, 10, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::team"], [159, 7, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange"], [159, 9, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::Rank"], [159, 9, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::TeamHandle"], [159, 8, 1, "_CPPv4N17TeamVectorMDRange17TeamVectorMDRangeE4team8extent_18extent_2z", "TeamVectorMDRange::TeamVectorMDRange"], [161, 7, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange"], [161, 9, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::Rank"], [161, 9, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::TeamHandle"], [161, 8, 1, "_CPPv4N19ThreadVectorMDRange19ThreadVectorMDRangeE4team8extent_18extent_2z", "ThreadVectorMDRange::ThreadVectorMDRange"], [153, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange"], [153, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange"], [153, 10, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::begin"], [153, 10, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::count"], [153, 10, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::end"], [153, 10, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::team"], [153, 10, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::team"], [81, 7, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Device"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Key"], [81, 8, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap"], [81, 10, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap::capacity_hint"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Value"], [81, 8, 1, "_CPPv4N12UnorderedMap13allocate_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::allocate_view"], [81, 10, 1, "_CPPv4N12UnorderedMap13allocate_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::allocate_view::src"], [81, 11, 1, "_CPPv4NK12UnorderedMap8capacityEv", "UnorderedMap::capacity"], [81, 8, 1, "_CPPv4N12UnorderedMap5clearEv", "UnorderedMap::clear"], [81, 8, 1, "_CPPv4N12UnorderedMap16create_copy_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::create_copy_view"], [81, 10, 1, "_CPPv4N12UnorderedMap16create_copy_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::create_copy_view::src"], [81, 8, 1, "_CPPv4N12UnorderedMap13create_mirrorERK12UnorderedMapI3Key9ValueType6Device6Hasher7EqualToE", "UnorderedMap::create_mirror"], [81, 10, 1, "_CPPv4N12UnorderedMap13create_mirrorERK12UnorderedMapI3Key9ValueType6Device6Hasher7EqualToE", "UnorderedMap::create_mirror::src"], [81, 8, 1, "_CPPv4N12UnorderedMap9deep_copyER12UnorderedMapI4DKey2DT7DDevice6Hasher7EqualToERK12UnorderedMapI4SKey2ST7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy"], [81, 10, 1, "_CPPv4N12UnorderedMap9deep_copyER12UnorderedMapI4DKey2DT7DDevice6Hasher7EqualToERK12UnorderedMapI4SKey2ST7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy::dst"], [81, 10, 1, "_CPPv4N12UnorderedMap9deep_copyER12UnorderedMapI4DKey2DT7DDevice6Hasher7EqualToERK12UnorderedMapI4SKey2ST7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy::src"], [81, 8, 1, "_CPPv4N12UnorderedMap14deep_copy_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy_view"], [81, 10, 1, "_CPPv4N12UnorderedMap14deep_copy_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy_view::src"], [81, 11, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists"], [81, 10, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists::key"], [81, 11, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find"], [81, 10, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find::key"], [81, 11, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert"], [81, 11, 1, "_CPPv4NK12UnorderedMap6insertE3key", "UnorderedMap::insert"], [81, 10, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::key"], [81, 10, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::op"], [81, 10, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::value"], [81, 11, 1, "_CPPv4NK12UnorderedMap12is_allocatedEv", "UnorderedMap::is_allocated"], [81, 11, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at"], [81, 10, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at::index"], [81, 8, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash"], [81, 10, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash::requested_capacity"], [81, 8, 1, "_CPPv4NK12UnorderedMap4sizeEv", "UnorderedMap::size"], [81, 11, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at"], [81, 10, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at::index"], [81, 11, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at"], [81, 10, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at::index"], [81, 7, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes"], [81, 7, 1, "_CPPv4N25UnorderedMapInsertOpTypes9AtomicAddE", "UnorderedMapInsertOpTypes::AtomicAdd"], [81, 7, 1, "_CPPv4N25UnorderedMapInsertOpTypes4NoOpE", "UnorderedMapInsertOpTypes::NoOp"], [81, 9, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValueTypeView"], [81, 9, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValuesIdxType"], [81, 7, 1, "_CPPv424UnorderedMapInsertResult", "UnorderedMapInsertResult"], [81, 11, 1, "_CPPv4NK24UnorderedMapInsertResult8existingEv", "UnorderedMapInsertResult::existing"], [81, 11, 1, "_CPPv4NK24UnorderedMapInsertResult6failedEv", "UnorderedMapInsertResult::failed"], [81, 11, 1, "_CPPv4NK24UnorderedMapInsertResult5indexEv", "UnorderedMapInsertResult::index"], [81, 11, 1, "_CPPv4NK24UnorderedMapInsertResult7successEv", "UnorderedMapInsertResult::success"], [189, 8, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View"], [189, 8, 1, "_CPPv44View12pointer_typeRK12array_layout", "View"], [189, 8, 1, "_CPPv44ViewRK10ALLOC_PROPDpRK7IntType", "View"], [189, 8, 1, "_CPPv44ViewRK10ALLOC_PROPRK12array_layout", "View"], [189, 8, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View"], [189, 8, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View"], [189, 8, 1, "_CPPv44ViewRK19NATURAL_MDSPAN_TYPE", "View"], [189, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View"], [189, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View"], [189, 8, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View"], [189, 8, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View"], [189, 8, 1, "_CPPv44ViewRR4View", "View"], [189, 8, 1, "_CPPv44Viewv", "View"], [189, 8, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View"], [189, 9, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::AccessorType"], [189, 9, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::ElementType"], [189, 9, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::ExtentsType"], [189, 9, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::LayoutType"], [189, 10, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::args"], [189, 10, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::indices"], [189, 10, 1, "_CPPv44ViewRK10ALLOC_PROPDpRK7IntType", "View::indices"], [189, 10, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::indices"], [189, 10, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::indices"], [189, 10, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::layout"], [189, 10, 1, "_CPPv44ViewRK10ALLOC_PROPRK12array_layout", "View::layout"], [189, 10, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::layout"], [189, 10, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::layout"], [189, 10, 1, "_CPPv44ViewRK19NATURAL_MDSPAN_TYPE", "View::mds"], [189, 10, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::mds"], [189, 10, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::name"], [189, 10, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::name"], [189, 10, 1, "_CPPv44ViewRK10ALLOC_PROPDpRK7IntType", "View::prop"], [189, 10, 1, "_CPPv44ViewRK10ALLOC_PROPRK12array_layout", "View::prop"], [189, 10, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::ptr"], [189, 10, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::ptr"], [189, 10, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View::rhs"], [189, 10, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::rhs"], [189, 10, 1, "_CPPv44ViewRR4View", "View::rhs"], [189, 10, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::space"], [189, 10, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::space"], [190, 6, 1, "_CPPv419WithoutInitializing", "WithoutInitializing"], [189, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access"], [189, 10, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i0"], [189, 10, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i1"], [189, 10, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i2"], [189, 10, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i3"], [189, 10, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i4"], [189, 10, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i5"], [189, 10, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i6"], [189, 10, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i7"], [185, 6, 1, "_CPPv412array_layout", "array_layout"], [189, 8, 1, "_CPPv411assign_data12pointer_type", "assign_data"], [189, 10, 1, "_CPPv411assign_data12pointer_type", "assign_data::arg_data"], [106, 8, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add"], [106, 9, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::T"], [106, 10, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::ptr_to_value"], [106, 10, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::value"], [107, 8, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch"], [107, 9, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::T"], [107, 10, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::ptr_to_value"], [107, 10, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::value"], [106, 8, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and"], [106, 9, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::T"], [106, 10, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::ptr_to_value"], [106, 10, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::value"], [107, 8, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch"], [107, 9, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::T"], [107, 10, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::ptr_to_value"], [107, 10, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::value"], [100, 8, 1, "_CPPv4I0E13atomic_assignvP1TNSt15type_identity_tI1TEE", "atomic_assign"], [100, 9, 1, "_CPPv4I0E13atomic_assignvP1TNSt15type_identity_tI1TEE", "atomic_assign::T"], [100, 10, 1, "_CPPv4I0E13atomic_assignvP1TNSt15type_identity_tI1TEE", "atomic_assign::ptr"], [100, 10, 1, "_CPPv4I0E13atomic_assignvP1TNSt15type_identity_tI1TEE", "atomic_assign::val"], [101, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange"], [101, 9, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange::T"], [101, 10, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange::desired"], [101, 10, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange::expected"], [101, 10, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange::ptr"], [102, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong"], [102, 9, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong::T"], [102, 10, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong::desired"], [102, 10, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong::expected"], [102, 10, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong::ptr"], [106, 8, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement"], [106, 9, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::T"], [106, 10, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::ptr_to_value"], [107, 8, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch"], [107, 9, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::T"], [107, 10, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::ptr_to_value"], [107, 10, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::value"], [103, 8, 1, "_CPPv4I0E15atomic_exchange1TP1TNSt15type_identity_tI1TEE", "atomic_exchange"], [103, 9, 1, "_CPPv4I0E15atomic_exchange1TP1TNSt15type_identity_tI1TEE", "atomic_exchange::T"], [103, 10, 1, "_CPPv4I0E15atomic_exchange1TP1TNSt15type_identity_tI1TEE", "atomic_exchange::ptr"], [103, 10, 1, "_CPPv4I0E15atomic_exchange1TP1TNSt15type_identity_tI1TEE", "atomic_exchange::val"], [104, 8, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::T"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::ptr_to_value"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::value"], [104, 8, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::T"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::ptr_to_value"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::value"], [104, 8, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::T"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::ptr_to_value"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::value"], [104, 8, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift"], [104, 9, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::T"], [104, 10, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::ptr_to_value"], [104, 10, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::shift"], [104, 8, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::T"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::ptr_to_value"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::value"], [104, 8, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::T"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::ptr_to_value"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::value"], [104, 8, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::T"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::ptr_to_value"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::value"], [104, 8, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::T"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::ptr_to_value"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::value"], [104, 8, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or"], [104, 9, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::T"], [104, 10, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::ptr_to_value"], [104, 10, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::value"], [104, 8, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift"], [104, 9, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::T"], [104, 10, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::ptr_to_value"], [104, 10, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::shift"], [104, 8, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::T"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::ptr_to_value"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::value"], [104, 8, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::T"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::ptr_to_value"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::value"], [106, 8, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment"], [106, 9, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::T"], [106, 10, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::ptr_to_value"], [105, 8, 1, "_CPPv4I0E11atomic_load1TP1T", "atomic_load"], [105, 9, 1, "_CPPv4I0E11atomic_load1TP1T", "atomic_load::T"], [105, 10, 1, "_CPPv4I0E11atomic_load1TP1T", "atomic_load::ptr"], [107, 8, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch"], [107, 9, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::T"], [107, 10, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::ptr_to_value"], [107, 10, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::shift"], [106, 8, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max"], [106, 9, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::T"], [106, 10, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::ptr_to_value"], [106, 10, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::value"], [107, 8, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch"], [107, 9, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::T"], [107, 10, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::ptr_to_value"], [107, 10, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::value"], [106, 8, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min"], [106, 9, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::T"], [106, 10, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::ptr_to_value"], [106, 10, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::value"], [107, 8, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch"], [107, 9, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::T"], [107, 10, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::ptr_to_value"], [107, 10, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::value"], [107, 8, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch"], [107, 9, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::T"], [107, 10, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::ptr_to_value"], [107, 10, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::value"], [107, 8, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch"], [107, 9, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::T"], [107, 10, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::ptr_to_value"], [107, 10, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::value"], [106, 8, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or"], [106, 9, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::T"], [106, 10, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::ptr_to_value"], [106, 10, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::value"], [107, 8, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch"], [107, 9, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::T"], [107, 10, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::ptr_to_value"], [107, 10, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::value"], [107, 8, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch"], [107, 9, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::T"], [107, 10, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::ptr_to_value"], [107, 10, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::shift"], [108, 8, 1, "_CPPv4I0E12atomic_storevP1TNSt15type_identity_tI1TEE", "atomic_store"], [108, 9, 1, "_CPPv4I0E12atomic_storevP1TNSt15type_identity_tI1TEE", "atomic_store::T"], [108, 10, 1, "_CPPv4I0E12atomic_storevP1TNSt15type_identity_tI1TEE", "atomic_store::ptr"], [108, 10, 1, "_CPPv4I0E12atomic_storevP1TNSt15type_identity_tI1TEE", "atomic_store::val"], [106, 8, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub"], [106, 9, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::T"], [106, 10, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::ptr_to_value"], [106, 10, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::value"], [107, 8, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch"], [107, 9, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::T"], [107, 10, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::ptr_to_value"], [107, 10, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::value"], [107, 8, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch"], [107, 9, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::T"], [107, 10, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::ptr_to_value"], [107, 10, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::value"], [166, 8, 1, "_CPPv4I0_6size_tE5beginP1TR5ArrayI1T1NE", "begin"], [166, 8, 1, "_CPPv4I0_6size_tE5beginPK1TRK5ArrayI1T1NE", "begin"], [4, 11, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::DataType"], [166, 9, 1, "_CPPv4I0_6size_tE5beginP1TR5ArrayI1T1NE", "begin::N"], [166, 9, 1, "_CPPv4I0_6size_tE5beginPK1TRK5ArrayI1T1NE", "begin::N"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::Properties"], [166, 9, 1, "_CPPv4I0_6size_tE5beginP1TR5ArrayI1T1NE", "begin::T"], [166, 9, 1, "_CPPv4I0_6size_tE5beginPK1TRK5ArrayI1T1NE", "begin::T"], [166, 10, 1, "_CPPv4I0_6size_tE5beginP1TR5ArrayI1T1NE", "begin::a"], [166, 10, 1, "_CPPv4I0_6size_tE5beginPK1TRK5ArrayI1T1NE", "begin::a"], [4, 10, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::view"], [4, 11, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::DataType"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::Properties"], [4, 10, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::view"], [4, 11, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::DataType"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::Properties"], [4, 10, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::view"], [171, 7, 1, "_CPPv4I0E7complex", "complex"], [171, 9, 1, "_CPPv4I0E7complex", "complex::Scalar"], [171, 8, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex"], [171, 11, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex"], [171, 11, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex"], [171, 11, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex"], [171, 11, 1, "_CPPv4N7complex7complexEv", "complex::complex"], [171, 9, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::T"], [171, 9, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::T"], [171, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T1"], [171, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T2"], [171, 10, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::imag"], [171, 10, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::real"], [171, 10, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::real"], [171, 10, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::src"], [171, 10, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex::src"], [171, 12, 1, "_CPPv4N7complex2imE", "complex::im"], [171, 11, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag"], [171, 11, 1, "_CPPv4N7complex4imagEv", "complex::imag"], [171, 11, 1, "_CPPv4NK7complex4imagEv", "complex::imag"], [171, 10, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag::v"], [171, 8, 1, "_CPPv4NK7complexcvNSt7complexI10value_typeEEEv", "complex::operator std::complex&lt;value_type&gt;"], [171, 8, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!="], [171, 11, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!="], [171, 11, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!="], [171, 9, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::T"], [171, 9, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::T"], [171, 9, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::T"], [171, 10, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::real"], [171, 10, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::src"], [171, 10, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::src"], [171, 8, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*="], [171, 11, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*="], [171, 11, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*="], [171, 9, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::T"], [171, 9, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::T"], [171, 9, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::T"], [171, 10, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::real"], [171, 10, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::src"], [171, 10, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::src"], [171, 8, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+="], [171, 11, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+="], [171, 11, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+="], [171, 9, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::T"], [171, 9, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::T"], [171, 9, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::T"], [171, 10, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::real"], [171, 10, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::src"], [171, 10, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::src"], [171, 8, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-="], [171, 11, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-="], [171, 11, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-="], [171, 9, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::T"], [171, 9, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::T"], [171, 9, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::T"], [171, 10, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::real"], [171, 10, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::src"], [171, 10, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::src"], [171, 8, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/="], [171, 11, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/="], [171, 11, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/="], [171, 9, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::T"], [171, 9, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::T"], [171, 9, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::T"], [171, 10, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::real"], [171, 10, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::src"], [171, 10, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::src"], [171, 11, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator="], [171, 11, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator="], [171, 11, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator="], [171, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::T"], [171, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::T"], [171, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::T"], [171, 10, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::re"], [171, 10, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::src"], [171, 10, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::src"], [171, 8, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator=="], [171, 11, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator=="], [171, 11, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator=="], [171, 9, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::T"], [171, 9, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::T"], [171, 9, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::T"], [171, 10, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::real"], [171, 10, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::src"], [171, 10, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::src"], [171, 12, 1, "_CPPv4N7complex2reE", "complex::re"], [171, 11, 1, "_CPPv4N7complex4realE8RealType", "complex::real"], [171, 11, 1, "_CPPv4N7complex4realEv", "complex::real"], [171, 11, 1, "_CPPv4NK7complex4realEv", "complex::real"], [171, 10, 1, "_CPPv4N7complex4realE8RealType", "complex::real::v"], [171, 6, 1, "_CPPv4N7complex10value_typeE", "complex::value_type"], [79, 8, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute"], [79, 10, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::dest"], [79, 10, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::src"], [181, 8, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror"], [181, 8, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror"], [181, 8, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror"], [181, 8, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror"], [181, 8, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror"], [181, 9, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror::ALLOC_PROP"], [181, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::Space"], [181, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::Space"], [181, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::ViewType"], [181, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::ViewType"], [181, 9, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror::ViewType"], [181, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::ViewType"], [181, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::ViewType"], [181, 10, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror::arg_prop"], [181, 10, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::space"], [181, 10, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::space"], [181, 10, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::src"], [181, 10, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::src"], [181, 10, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror::src"], [181, 10, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::src"], [181, 10, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::src"], [181, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view"], [181, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view"], [181, 8, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view"], [181, 8, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view"], [181, 8, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view"], [181, 9, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view::ALLOC_PROP"], [181, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::Space"], [181, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::Space"], [181, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [181, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [181, 9, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view::ViewType"], [181, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::ViewType"], [181, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::ViewType"], [181, 10, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view::arg_prop"], [181, 10, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::space"], [181, 10, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::space"], [181, 10, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::src"], [181, 10, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::src"], [181, 10, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view::src"], [181, 10, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::src"], [181, 10, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::src"], [181, 8, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy"], [181, 8, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy"], [181, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy::ALLOC_PROP"], [181, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::Space"], [181, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy::ViewType"], [181, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::ViewType"], [181, 10, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy::arg_prop"], [181, 10, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::space"], [181, 10, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy::src"], [181, 10, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::src"], [189, 8, 1, "_CPPv4NK4dataEv", "data"], [185, 12, 1, "_CPPv49dimension", "dimension"], [4, 11, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance"], [4, 9, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::IteratorType"], [4, 10, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::first"], [4, 10, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::last"], [166, 8, 1, "_CPPv4I0_6size_tE3endP1TR5ArrayI1T1NE", "end"], [166, 8, 1, "_CPPv4I0_6size_tE3endPK1TRK5ArrayI1T1NE", "end"], [4, 11, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::DataType"], [166, 9, 1, "_CPPv4I0_6size_tE3endP1TR5ArrayI1T1NE", "end::N"], [166, 9, 1, "_CPPv4I0_6size_tE3endPK1TRK5ArrayI1T1NE", "end::N"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::Properties"], [166, 9, 1, "_CPPv4I0_6size_tE3endP1TR5ArrayI1T1NE", "end::T"], [166, 9, 1, "_CPPv4I0_6size_tE3endPK1TRK5ArrayI1T1NE", "end::T"], [166, 10, 1, "_CPPv4I0_6size_tE3endP1TR5ArrayI1T1NE", "end::a"], [166, 10, 1, "_CPPv4I0_6size_tE3endPK1TRK5ArrayI1T1NE", "end::a"], [4, 10, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::view"], [189, 8, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent"], [189, 10, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::dim"], [189, 9, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::iType"], [189, 8, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int"], [189, 10, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::dim"], [189, 9, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::iType"], [123, 11, 1, "_CPPv4NK5finalER10value_type", "final"], [123, 10, 1, "_CPPv4NK5finalER10value_type", "final::val"], [229, 8, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator"], [229, 10, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator::v"], [166, 8, 1, "_CPPv4I_6size_t0_6size_tE3getR1TR5ArrayI1T1NE", "get"], [166, 8, 1, "_CPPv4I_6size_t0_6size_tE3getRK1TRK5ArrayI1T1NE", "get"], [166, 8, 1, "_CPPv4I_6size_t0_6size_tE3getRR1TRR5ArrayI1T1NE", "get"], [166, 8, 1, "_CPPv4I_6size_t0_6size_tE3getRRK1TRRK5ArrayI1T1NE", "get"], [166, 9, 1, "_CPPv4I_6size_t0_6size_tE3getR1TR5ArrayI1T1NE", "get::I"], [166, 9, 1, "_CPPv4I_6size_t0_6size_tE3getRK1TRK5ArrayI1T1NE", "get::I"], [166, 9, 1, "_CPPv4I_6size_t0_6size_tE3getRR1TRR5ArrayI1T1NE", "get::I"], [166, 9, 1, "_CPPv4I_6size_t0_6size_tE3getRRK1TRRK5ArrayI1T1NE", "get::I"], [166, 9, 1, "_CPPv4I_6size_t0_6size_tE3getR1TR5ArrayI1T1NE", "get::N"], [166, 9, 1, "_CPPv4I_6size_t0_6size_tE3getRK1TRK5ArrayI1T1NE", "get::N"], [166, 9, 1, "_CPPv4I_6size_t0_6size_tE3getRR1TRR5ArrayI1T1NE", "get::N"], [166, 9, 1, "_CPPv4I_6size_t0_6size_tE3getRRK1TRRK5ArrayI1T1NE", "get::N"], [166, 9, 1, "_CPPv4I_6size_t0_6size_tE3getR1TR5ArrayI1T1NE", "get::T"], [166, 9, 1, "_CPPv4I_6size_t0_6size_tE3getRK1TRK5ArrayI1T1NE", "get::T"], [166, 9, 1, "_CPPv4I_6size_t0_6size_tE3getRR1TRR5ArrayI1T1NE", "get::T"], [166, 9, 1, "_CPPv4I_6size_t0_6size_tE3getRRK1TRRK5ArrayI1T1NE", "get::T"], [166, 10, 1, "_CPPv4I_6size_t0_6size_tE3getR1TR5ArrayI1T1NE", "get::a"], [166, 10, 1, "_CPPv4I_6size_t0_6size_tE3getRK1TRK5ArrayI1T1NE", "get::a"], [166, 10, 1, "_CPPv4I_6size_t0_6size_tE3getRR1TRR5ArrayI1T1NE", "get::a"], [166, 10, 1, "_CPPv4I_6size_t0_6size_tE3getRRK1TRRK5ArrayI1T1NE", "get::a"], [123, 11, 1, "_CPPv4NK4initER10value_type", "init"], [123, 10, 1, "_CPPv4NK4initER10value_type", "init::val"], [189, 8, 1, "_CPPv4NK12is_allocatedEv", "is_allocated"], [189, 8, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable"], [189, 10, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable::rhs"], [185, 12, 1, "_CPPv423is_extent_constructible", "is_extent_constructible"], [4, 8, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap"], [4, 9, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::IteratorType"], [4, 10, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::first"], [4, 10, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::last"], [123, 11, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [123, 10, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [123, 10, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [128, 8, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free"], [128, 9, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::MemorySpace"], [128, 10, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::ptr"], [129, 8, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc"], [129, 8, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc"], [129, 9, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::MemorySpace"], [129, 9, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::MemorySpace"], [129, 10, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::label"], [129, 10, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::size"], [129, 10, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::size"], [130, 8, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc"], [130, 9, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::MemorySpace"], [130, 10, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::new_size"], [130, 10, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::ptr"], [166, 8, 1, "_CPPv4I0_6size_tE11kokkos_swapR5ArrayI1T1NER5ArrayI1T1NE", "kokkos_swap"], [166, 9, 1, "_CPPv4I0_6size_tE11kokkos_swapR5ArrayI1T1NER5ArrayI1T1NE", "kokkos_swap::N"], [166, 9, 1, "_CPPv4I0_6size_tE11kokkos_swapR5ArrayI1T1NER5ArrayI1T1NE", "kokkos_swap::T"], [166, 10, 1, "_CPPv4I0_6size_tE11kokkos_swapR5ArrayI1T1NER5ArrayI1T1NE", "kokkos_swap::l"], [166, 10, 1, "_CPPv4I0_6size_tE11kokkos_swapR5ArrayI1T1NER5ArrayI1T1NE", "kokkos_swap::r"], [189, 8, 1, "_CPPv4NK5labelEv", "label"], [189, 8, 1, "_CPPv4NK6layoutEv", "layout"], [152, 8, 1, "_CPPv4NK19max_total_tile_sizeEv", "max_total_tile_size"], [189, 8, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;"], [189, 9, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;::OtherAccessor"], [189, 9, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;::OtherElementType"], [189, 9, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;::OtherExtents"], [189, 9, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;::OtherLayoutPolicy"], [166, 8, 1, "_CPPv4I0_6size_tEnebRK5ArrayI1T1NERK5ArrayI1T1NE", "operator!="], [189, 8, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!="], [166, 9, 1, "_CPPv4I0_6size_tEnebRK5ArrayI1T1NERK5ArrayI1T1NE", "operator!=::N"], [166, 9, 1, "_CPPv4I0_6size_tEnebRK5ArrayI1T1NERK5ArrayI1T1NE", "operator!=::T"], [189, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewDst"], [189, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewSrc"], [166, 10, 1, "_CPPv4I0_6size_tEnebRK5ArrayI1T1NERK5ArrayI1T1NE", "operator!=::l"], [166, 10, 1, "_CPPv4I0_6size_tEnebRK5ArrayI1T1NERK5ArrayI1T1NE", "operator!=::r"], [189, 8, 1, "_CPPv4NKclEDpRK7IntType", "operator()"], [189, 10, 1, "_CPPv4NKclEDpRK7IntType", "operator()::indices"], [185, 8, 1, "_CPPv4aSRK12LayoutStride", "operator="], [185, 8, 1, "_CPPv4aSRR12LayoutStride", "operator="], [166, 8, 1, "_CPPv4I0_6size_tEeqbRK5ArrayI1T1NERK5ArrayI1T1NE", "operator=="], [189, 8, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator=="], [229, 8, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator=="], [166, 9, 1, "_CPPv4I0_6size_tEeqbRK5ArrayI1T1NERK5ArrayI1T1NE", "operator==::N"], [166, 9, 1, "_CPPv4I0_6size_tEeqbRK5ArrayI1T1NERK5ArrayI1T1NE", "operator==::T"], [189, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewDst"], [189, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewSrc"], [229, 9, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator==::ViewSrc"], [166, 10, 1, "_CPPv4I0_6size_tEeqbRK5ArrayI1T1NERK5ArrayI1T1NE", "operator==::l"], [166, 10, 1, "_CPPv4I0_6size_tEeqbRK5ArrayI1T1NERK5ArrayI1T1NE", "operator==::r"], [185, 11, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions"], [185, 10, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::dimen"], [185, 10, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::order"], [185, 10, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::rank"], [165, 8, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space"], [165, 8, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space"], [165, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::Args"], [165, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::ExecSpace"], [165, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::ExecSpace"], [165, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::T"], [165, 10, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::args"], [165, 10, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::space"], [165, 10, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::space"], [165, 10, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::weights"], [137, 8, 1, "_CPPv418push_finalize_hookNSt8functionIFvvEEE", "push_finalize_hook"], [137, 10, 1, "_CPPv418push_finalize_hookNSt8functionIFvvEEE", "push_finalize_hook::func"], [189, 8, 1, "_CPPv44rankv", "rank"], [189, 8, 1, "_CPPv412rank_dynamicv", "rank_dynamic"], [123, 11, 1, "_CPPv4NK9referenceEv", "reference"], [189, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size"], [189, 8, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size"], [189, 10, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N0"], [189, 10, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N1"], [189, 10, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N2"], [189, 10, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N3"], [189, 10, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N4"], [189, 10, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N5"], [189, 10, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N6"], [189, 10, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N7"], [189, 10, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N8"], [189, 10, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size::layout"], [189, 8, 1, "_CPPv4NK4sizeEv", "size"], [189, 8, 1, "_CPPv4NK4spanEv", "span"], [189, 8, 1, "_CPPv4NK18span_is_contiguousEv", "span_is_contiguous"], [163, 8, 1, "_CPPv45startv", "start"], [163, 8, 1, "_CPPv44stopv", "stop"], [189, 8, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride"], [189, 8, 1, "_CPPv4I0ENK6strideEvP5iType", "stride"], [185, 12, 1, "_CPPv46stride", "stride"], [189, 10, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::dim"], [189, 9, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::iType"], [189, 9, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::iType"], [189, 10, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::strides"], [189, 8, 1, "_CPPv4NK8stride_0Ev", "stride_0"], [189, 8, 1, "_CPPv4NK8stride_1Ev", "stride_1"], [189, 8, 1, "_CPPv4NK8stride_2Ev", "stride_2"], [189, 8, 1, "_CPPv4NK8stride_3Ev", "stride_3"], [189, 8, 1, "_CPPv4NK8stride_4Ev", "stride_4"], [189, 8, 1, "_CPPv4NK8stride_5Ev", "stride_5"], [189, 8, 1, "_CPPv4NK8stride_6Ev", "stride_6"], [189, 8, 1, "_CPPv4NK8stride_7Ev", "stride_7"], [188, 8, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview"], [188, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::Args"], [188, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::ViewType"], [188, 10, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::args"], [188, 10, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::v"], [152, 8, 1, "_CPPv4NK21tile_size_recommendedEv", "tile_size_recommended"], [166, 8, 1, "_CPPv4I0_6size_tE8to_array5ArrayI11remove_cv_tI1TE1NERA1N_1T", "to_array"], [166, 8, 1, "_CPPv4I0_6size_tE8to_array5ArrayI11remove_cv_tI1TE1NERRA1N_1T", "to_array"], [166, 9, 1, "_CPPv4I0_6size_tE8to_array5ArrayI11remove_cv_tI1TE1NERA1N_1T", "to_array::N"], [166, 9, 1, "_CPPv4I0_6size_tE8to_array5ArrayI11remove_cv_tI1TE1NERRA1N_1T", "to_array::N"], [166, 9, 1, "_CPPv4I0_6size_tE8to_array5ArrayI11remove_cv_tI1TE1NERA1N_1T", "to_array::T"], [166, 9, 1, "_CPPv4I0_6size_tE8to_array5ArrayI11remove_cv_tI1TE1NERRA1N_1T", "to_array::T"], [166, 10, 1, "_CPPv4I0_6size_tE8to_array5ArrayI11remove_cv_tI1TE1NERA1N_1T", "to_array::a"], [166, 10, 1, "_CPPv4I0_6size_tE8to_array5ArrayI11remove_cv_tI1TE1NERRA1N_1T", "to_array::a"], [189, 8, 1, "_CPPv4I0E9to_mdspanDaRK17OtherAccessorType", "to_mdspan"], [189, 9, 1, "_CPPv4I0E9to_mdspanDaRK17OtherAccessorType", "to_mdspan::OtherAccessorType"], [189, 10, 1, "_CPPv4I0E9to_mdspanDaRK17OtherAccessorType", "to_mdspan::other_accessor"], [189, 8, 1, "_CPPv4NK9use_countEv", "use_count"], [82, 7, 1, "_CPPv4I00E6vector", "vector"], [82, 9, 1, "_CPPv4I00E6vector", "vector::Arg1Type"], [82, 9, 1, "_CPPv4I00E6vector", "vector::Scalar"], [82, 8, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign"], [82, 10, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::n"], [82, 10, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::val"], [82, 8, 1, "_CPPv4N6vector4backEv", "vector::back"], [82, 8, 1, "_CPPv4NK6vector4backEv", "vector::back"], [82, 8, 1, "_CPPv4NK6vector5beginEv", "vector::begin"], [82, 8, 1, "_CPPv4N6vector5clearEv", "vector::clear"], [82, 6, 1, "_CPPv4N6vector14const_iteratorE", "vector::const_iterator"], [82, 6, 1, "_CPPv4N6vector13const_pointerE", "vector::const_pointer"], [82, 6, 1, "_CPPv4N6vector15const_referenceE", "vector::const_reference"], [82, 8, 1, "_CPPv4NK6vector4dataEv", "vector::data"], [82, 8, 1, "_CPPv4N6vector14device_to_hostEv", "vector::device_to_host"], [82, 8, 1, "_CPPv4NK6vector5emptyEv", "vector::empty"], [82, 8, 1, "_CPPv4NK6vector3endEv", "vector::end"], [82, 8, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find"], [82, 10, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find::val"], [82, 8, 1, "_CPPv4N6vector5frontEv", "vector::front"], [82, 8, 1, "_CPPv4NK6vector5frontEv", "vector::front"], [82, 8, 1, "_CPPv4NK6vector14host_to_deviceEv", "vector::host_to_device"], [82, 8, 1, "_CPPv4NK6vector12is_allocatedEv", "vector::is_allocated"], [82, 8, 1, "_CPPv4N6vector9is_sortedEv", "vector::is_sorted"], [82, 6, 1, "_CPPv4N6vector8iteratorE", "vector::iterator"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound"], [82, 10, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::comp_val"], [82, 10, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::start"], [82, 10, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::theEnd"], [82, 8, 1, "_CPPv4NK6vector8max_sizeEv", "vector::max_size"], [82, 8, 1, "_CPPv4N6vector9on_deviceEv", "vector::on_device"], [82, 8, 1, "_CPPv4N6vector7on_hostEv", "vector::on_host"], [82, 11, 1, "_CPPv4NK6vectorclEi", "vector::operator()"], [82, 10, 1, "_CPPv4NK6vectorclEi", "vector::operator()::i"], [82, 11, 1, "_CPPv4NK6vectorixEi", "vector::operator[]"], [82, 10, 1, "_CPPv4NK6vectorixEi", "vector::operator[]::i"], [82, 6, 1, "_CPPv4N6vector7pointerE", "vector::pointer"], [82, 8, 1, "_CPPv4N6vector8pop_backEv", "vector::pop_back"], [82, 8, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back"], [82, 10, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back::val"], [82, 6, 1, "_CPPv4N6vector9referenceE", "vector::reference"], [82, 8, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve"], [82, 10, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve::n"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize"], [82, 10, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize::n"], [82, 10, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::n"], [82, 10, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::val"], [82, 8, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation"], [82, 10, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation::extra"], [82, 8, 1, "_CPPv4NK6vector4sizeEv", "vector::size"], [82, 8, 1, "_CPPv4NK6vector4spanEv", "vector::span"], [82, 6, 1, "_CPPv4N6vector10value_typeE", "vector::value_type"], [82, 8, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector"], [82, 8, 1, "_CPPv4N6vector6vectorEv", "vector::vector"], [82, 10, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::n"], [82, 10, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::val"], [123, 11, 1, "_CPPv4NK4viewEv", "view"], [190, 8, 1, "_CPPv4IDpE10view_alloc10ALLOC_PROPDpRK4Args", "view_alloc"], [190, 9, 1, "_CPPv4IDpE10view_alloc10ALLOC_PROPDpRK4Args", "view_alloc::Args"], [190, 10, 1, "_CPPv4IDpE10view_alloc10ALLOC_PROPDpRK4Args", "view_alloc::args"], [190, 8, 1, "_CPPv4IDpE9view_wrap10ALLOC_PROPDpRK4Args", "view_wrap"], [190, 9, 1, "_CPPv4IDpE9view_wrap10ALLOC_PROPDpRK4Args", "view_wrap::Args"], [190, 10, 1, "_CPPv4IDpE9view_wrap10ALLOC_PROPDpRK4Args", "view_wrap::args"], [163, 8, 1, "_CPPv4D0v", "~ProfilingSection"], [164, 8, 1, "_CPPv4D0v", "~ScopedRegion"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:member", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:templateParam", "5": "cpp:type", "6": "cppkokkos:type", "7": "cppkokkos:class", "8": "cppkokkos:function", "9": "cppkokkos:templateParam", "10": "cppkokkos:functionParam", "11": "cppkokkos:kokkosinlinefunction", "12": "cppkokkos:member"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "member", "C++ member"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "templateParam", "C++ template parameter"], "5": ["cpp", "type", "C++ type"], "6": ["cppkokkos", "type", "C++ type"], "7": ["cppkokkos", "class", "C++ class"], "8": ["cppkokkos", "function", "C++ function"], "9": ["cppkokkos", "templateParam", "C++ template parameter"], "10": ["cppkokkos", "functionParam", "C++ function parameter"], "11": ["cppkokkos", "kokkosinlinefunction", "C++ kokkosinlinefunction"], "12": ["cppkokkos", "member", "C++ member"]}, "titleterms": {"api": [0, 72, 73, 83, 84, 192, 197, 232], "algorithm": [0, 3, 72, 217, 246], "random": [1, 213], "number": [1, 238], "rand": 1, "gener": [1, 32, 88, 131, 152, 153, 154, 198, 222, 235], "synopsi": [1, 2, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 131, 139, 144, 145, 146, 153, 154, 158, 160, 162, 167, 179], "exampl": [1, 2, 4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 53, 56, 76, 77, 79, 81, 84, 117, 123, 132, 133, 134, 135, 136, 137, 141, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 175, 177, 179, 180, 182, 185, 186, 187, 188, 189, 193, 194, 195, 201, 202, 204, 208, 209, 211, 229, 237, 243, 246], "sort": [2, 10], "nest": [2, 84, 85, 203], "polici": [2, 85, 90, 95, 203, 210], "team": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 90, 197, 203, 210], "thread": [2, 131, 203, 205, 208], "level": [2, 85], "addit": [2, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125], "inform": [2, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 198], "sampl": 2, "output": 2, "std": [3, 205], "iter": [4, 81], "kokko": [4, 86, 87, 91, 95, 131, 139, 153, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 197, 198, 205, 207, 208, 213, 214, 215, 217, 221, 228, 231, 232, 234, 235, 236, 239, 240, 246, 247], "experiment": [4, 173, 193, 194, 195], "begin": 4, "cbegin": 4, "end": 4, "cend": 4, "note": [4, 87, 134, 140, 141, 142, 152, 168, 170, 174, 175, 177, 178], "paramet": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 136, 147, 148, 149, 150, 152, 154, 182, 189, 193, 194, 195, 244], "requir": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 123, 135, 136, 147, 148, 149, 150, 152, 165, 180, 182, 228, 232, 233, 242], "distanc": 4, "return": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71], "iter_swap": 4, "minimum": [5, 174], "maximum": [5, 174], "modifi": [6, 7], "sequenc": [6, 7, 246], "non": [7, 74, 131, 139, 166, 205, 229, 244], "numer": [8, 89, 143], "partit": 9, "adjacent_differ": 11, "descript": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 81, 82, 100, 101, 102, 103, 104, 105, 106, 107, 108, 128, 129, 130, 134, 153, 155, 156, 157, 158, 159, 160, 161, 162, 166, 171, 180, 181, 183, 184, 185, 186, 187, 188, 190, 219, 229], "adjacent_find": 12, "interfac": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 74, 78, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 132, 133, 135, 136, 137, 147, 148, 149, 150, 152, 157, 159, 161, 165, 166, 180, 182, 189, 193, 194, 195, 219, 229], "overload": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71], "set": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 88, 227], "accept": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71], "execut": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 85, 88, 90, 131, 198, 203, 208, 209, 210, 213, 227, 243], "space": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 88, 93, 94, 131, 139, 198, 208, 209, 210, 213], "handl": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71], "valu": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 193, 194, 207, 238], "all_of": 13, "any_of": 14, "copi": [15, 131, 147, 182, 213], "copy_backward": 16, "copy_if": 17, "copy_n": 18, "count": [19, 213], "count_if": 20, "equal": 21, "detail": [21, 26, 27], "exclusive_scan": 22, "fill": 23, "fill_n": 24, "find": 25, "find_end": 26, "find_first_of": 27, "find_if": 28, "find_if_not": 29, "for_each": 30, "for_each_n": 31, "generate_n": 33, "inclusive_scan": 34, "is_partit": 35, "is_sort": 36, "is_sorted_until": 37, "lexicographical_compar": 38, "max_el": 39, "min_el": 40, "minmax_el": 41, "mismatch": 42, "move": [43, 242], "move_backward": 44, "none_of": 45, "partition_copi": 46, "partition_point": 47, "reduc": [48, 109, 123, 200, 201, 202, 209], "remov": 49, "remove_copi": 50, "remove_copy_if": 51, "remove_if": 52, "replac": 53, "replace_copi": 54, "replace_copy_if": 55, "replace_if": 56, "revers": 57, "reverse_copi": 58, "rotat": 59, "rotate_copi": 60, "search": 61, "search_n": 62, "shift_left": 63, "shift_right": 64, "swap_rang": 65, "transform": 66, "transform_exclusive_scan": 67, "transform_inclusive_scan": 68, "transform_reduc": 69, "uniqu": 70, "unique_copi": 71, "alphabet": 72, "order": 72, "contain": [72, 73, 213, 217], "core": [72, 83, 217], "bitset": 74, "class": [74, 123, 144, 145, 146, 152, 154, 167, 179, 189, 217], "constbitset": 74, "member": [74, 123, 126, 131, 139, 144, 145, 146, 152, 154, 166, 167, 179, 189, 217, 229, 244], "function": [74, 88, 123, 127, 131, 138, 139, 142, 144, 145, 146, 151, 152, 166, 167, 189, 193, 195, 196, 207, 209, 213, 217, 223, 229, 244], "dualview": 75, "usag": [75, 76, 80, 82, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 134, 137, 144, 145, 146, 149, 150, 152, 153, 154, 156, 158, 160, 163, 164, 165, 171, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 240, 243, 246], "dynrankview": 76, "assign": [76, 126, 167, 189, 195, 211], "rule": [76, 189, 213], "dynamicview": 77, "offsetview": 78, "construct": [78, 131, 213], "scatterview": [79, 196, 238], "staticcrsgraph": 80, "unorderedmap": 81, "insert": 81, "us": [81, 131, 147, 198, 209, 213, 214, 237, 239, 240, 242, 246], "default": [81, 131, 213], "unorderedmapinsertoptyp": 81, "noop": 81, "atomicadd": 81, "vector": [82, 203, 205, 211], "deprec": [82, 166, 197, 217], "detect": [84, 131], "idiom": [84, 213], "an": [84, 151, 209, 211, 227, 233], "express": 84, "typedef": [84, 123, 131, 139, 144, 145, 146, 167, 189, 193, 194], "top": [85, 246], "common": [85, 142], "argument": [85, 152, 204], "all": [85, 131, 169], "initi": [86, 136, 204, 213, 240], "final": [86, 135, 204], "scopeguard": [86, 134], "concept": 87, "introduct": [87, 206], "approach": [87, 207], "overview": 87, "The": [87, 207, 211, 221, 242], "executionspac": 87, "implement": [87, 219, 240], "some": [87, 182], "de": 87, "facto": 87, "memoryspac": 87, "executionpolici": [87, 151], "teammemb": 87, "functor": [87, 95, 209, 246], "A": [87, 212, 234], "deleg": 87, "macro": [88, 138, 197, 217], "markup": 88, "version": [88, 228], "backend": [88, 222, 236], "option": [88, 222], "c": [88, 127, 197, 205, 212, 221, 232, 245], "standard": [88, 213, 221], "third": [88, 222], "parti": [88, 222], "librari": [88, 205, 211, 221, 222], "architectur": [88, 222], "parallel": [90, 95, 203, 209, 222, 240], "dispatch": [90, 209], "pattern": [90, 95, 210, 243, 246], "tag": [90, 209, 245], "calcul": 90, "profil": [91, 163, 164], "scopedregion": [91, 164], "profilingsect": [91, 163], "stl": 92, "compat": [92, 197, 232], "issu": [92, 214, 223, 232, 233], "access": [93, 189, 193, 194, 213], "task": [95, 246], "Will": 95, "work": [95, 207, 221, 243, 246], "my": 95, "problem": [95, 207, 213, 240], "basic": [95, 203, 211], "predecessor": 95, "schedul": 95, "wait": 95, "aggreg": 95, "prioriti": 95, "trait": [96, 143, 196, 210, 213], "is_array_layout": 96, "is_execution_polici": 96, "is_memory_spac": 96, "is_memory_trait": 96, "is_reduc": 96, "is_spac": 96, "util": 97, "view": [98, 182, 189, 191, 205, 212, 213], "relat": [98, 221], "atom": [99, 196, 213], "atomic_assign": 100, "atomic_compare_exchang": 101, "see": [101, 103, 105, 108, 132, 133, 134, 135, 136, 137, 141, 142, 170, 174], "also": [101, 103, 105, 108, 132, 133, 134, 135, 136, 137, 141, 142, 170, 174], "atomic_compare_exchange_strong": 102, "atomic_exchang": 103, "atomic_fetch_": 104, "op": [104, 106, 107], "atomic_load": 105, "atomic_": [106, 107], "_fetch": 107, "atomic_stor": 108, "built": [109, 123, 200, 201], "band": 110, "bor": 111, "land": 112, "lor": 113, "max": [114, 193], "maxloc": 115, "min": [116, 193], "minloc": 117, "minmax": 118, "minmaxloc": 119, "minmaxlocscalar": 120, "minmaxscalar": 121, "prod": 122, "reducerconcept": 123, "public": [123, 126, 144, 145, 146, 152, 154, 167, 179, 189, 217, 219], "constructor": [123, 131, 139, 144, 145, 146, 152, 154, 167, 179, 189, 193, 194], "In": [123, 200, 201], "reduct": [124, 194, 199, 209, 211], "scalar": [124, 201], "type": [124, 191, 201, 211, 212, 213, 217], "sum": [125, 238], "vallocscalar": 126, "variabl": [126, 204], "oper": [126, 174, 193, 194, 196, 211, 239, 240, 243, 245], "style": 127, "memori": [127, 139, 196, 203, 205, 208, 210, 213], "manag": [127, 205, 213, 236], "kokkos_fre": 128, "kokkos_malloc": 129, "kokkos_realloc": 130, "cuda": [131, 198, 205, 214, 223, 241], "hip": [131, 223], "sycl": [131, 223], "hpx": 131, "openmp": [131, 205], "openmptarget": 131, "serial": [131, 222, 240, 243], "executionspaceconcept": 131, "alias": [131, 217], "base": 131, "configur": [131, 198, 214], "defaultexecutionspac": 131, "defaulthostexecutionspac": 131, "veri": [131, 207], "simplest": 131, "Not": 131, "Being": 131, "more": 131, "facil": [131, 139], "initargu": 132, "initializationset": 133, "semant": [135, 136, 147, 148, 149, 150, 165, 182], "push_finalize_hook": 137, "annot": 138, "kokkos_funct": 138, "kokkos_inline_funct": 138, "kokkos_forceinline_funct": 138, "kokkos_relocatable_funct": 138, "kokkos_lambda": 138, "kokkos_class_lambda": 138, "kokkos_deduction_guid": 138, "cudaspac": 139, "cudahostpinnedspac": 139, "cudauvmspac": 139, "hipspac": 139, "hiphostpinnedspac": 139, "hipmanagedspac": 139, "sycldeviceusmspac": 139, "syclhostusmspac": 139, "syclsharedusmspac": 139, "hostspac": 139, "sharedspac": [139, 242], "sharedhostpinnedspac": 139, "memoryspaceconcept": 139, "bit": 140, "manipul": 140, "mathemat": [141, 223], "constant": [141, 223], "math": 142, "parallelfortag": 144, "parallelreducetag": 145, "parallelscantag": 146, "fenc": 147, "time": 147, "kernel": [147, 203, 243], "asynchron": 147, "deep": [147, 213], "parallel_for": 148, "parallel_reduc": 149, "parallel_scan": 150, "what": [151, 207, 213], "mdrangepolici": [152, 240], "templat": [152, 153, 154, 193, 194, 195, 230, 244, 245], "agument": [152, 153, 154], "specif": [152, 222], "ctad": [152, 154], "sinc": [152, 154], "4": [152, 154, 196, 198, 203, 204, 205, 209, 210, 213, 217, 228], "3": [152, 154, 196, 198, 202, 203, 204, 205, 208, 209, 210, 212, 213, 217, 228, 246], "nestedpolici": 153, "list": [153, 198], "perteam": 153, "perthread": 153, "teamthreadrang": [153, 158], "teamthreadmdrang": [153, 157], "teamvectorrang": [153, 160], "teamvectormdrang": [153, 159], "threadvectorrang": [153, 162], "threadvectormdrang": [153, 161], "rangepolici": [154, 240], "precondit": [154, 243, 246], "teamhandleconcept": 155, "teampolici": 156, "partition_spac": 165, "arrai": [166, 209, 213, 239, 240, 244], "deduct": [166, 212], "guid": [166, 218, 226], "pair": 167, "convers": [167, 189, 213], "abort": 168, "kokkos_assert": 170, "complex": 171, "device_id": 172, "num_devic": 175, "num_thread": 176, "printf": 177, "kokkos_swap": 178, "timer": 179, "subview": [180, 188, 212], "create_mirror": 181, "_view": 181, "deep_copi": 182, "thing": 182, "you": [182, 213], "can": [182, 213], "cannot": 182, "do": [182, 207, 213], "how": [182, 207, 212, 213], "get": [182, 213, 227], "layout": [182, 189, 210, 213], "incompat": 182, "layoutleft": 183, "layoutright": 184, "layoutstrid": 185, "realloc": 186, "resiz": [187, 213], "enum": 189, "data": [189, 205, 213], "dimens": [189, 212, 213], "stride": [189, 213], "other": [189, 197, 213, 217], "mdspan": 189, "nonmemb": 189, "natur": 189, "view_alloc": 190, "like": 191, "simd": [192, 193, 195, 211], "width": [193, 194], "load": [193, 195], "store": [193, 195], "method": [193, 194, 195], "flag": [193, 195], "arithmet": 193, "comparison": [193, 194], "round": 193, "cmath": 193, "global": [193, 194], "simd_mask": 194, "boolean": 194, "where_express": 195, "where": 195, "gather": [195, 232], "scatter": 195, "10": 196, "1": [196, 198, 200, 203, 204, 205, 206, 208, 209, 210, 212, 213, 217, 243], "write": 196, "conflict": 196, "Their": 196, "resolut": 196, "With": 196, "2": [196, 198, 201, 203, 204, 205, 208, 209, 210, 212, 213, 217, 243], "free": [196, 217], "12": [197, 205], "backward": 197, "futur": [197, 208], "user": 197, "defin": 197, "abi": 197, "header": [197, 204, 217], "right": 197, "reserv": 197, "miscellan": 197, "proof": 197, "compil": [198, 228, 234, 236], "cmake": [198, 214, 222], "build": [198, 214, 228], "system": [198, 228], "instal": [198, 214], "packag": [198, 214], "tree": 198, "spack": [198, 214], "develop": [198, 214, 218, 222, 232], "keyword": [198, 222], "trilino": 198, "branch": 198, "gnu": 198, "makefil": [198, 214], "5": [198, 204, 209, 210, 213, 217], "6": [198, 210, 213], "restrict": [198, 203], "9": [199, 200, 201, 202], "custom": [199, 201, 202, 235], "8": 203, "hierarch": 203, "motiv": [203, 208], "creat": [203, 213, 227], "instanc": [203, 208], "scratch": 203, "pad": 203, "loop": [203, 209], "barrier": 203, "singl": [203, 241], "executor": 203, "0": [204, 217], "includ": 204, "command": 204, "line": 204, "environ": 204, "struct": 204, "code": [204, 205, 211, 242, 243], "13": 205, "interoper": 205, "legaci": 205, "structur": [205, 239, 244], "raw": [205, 213, 214], "alloc": [205, 239], "through": [205, 246], "extern": 205, "fundament": 205, "own": 205, "call": 205, "14": 207, "virtual": 207, "vtabl": 207, "vpointer": 207, "annoi": 207, "gpu": [207, 222], "Then": 207, "why": [207, 213], "doesn": 207, "t": [207, 213], "straightforward": 207, "make": [207, 213], "i": [207, 209, 213], "need": [207, 213], "setter": 207, "host": [207, 222, 243], "But": 207, "realli": [207, 213], "devic": [207, 222, 243], "side": 207, "thi": [207, 213, 232], "portabl": [207, 221], "case": [207, 237, 239, 240, 246], "doe": 207, "nvcc": 207, "solv": 207, "question": [207, 221], "follow": 207, "up": [207, 227], "machin": 208, "model": [208, 210, 221, 232], "abstract": 208, "figur": 208, "conceptu": 208, "high": 208, "perform": [208, 211, 221, 236, 243], "comput": [208, 236, 238, 243], "node": [208, 238], "program": [208, 210, 221, 226, 232, 239], "safeti": 208, "7": [209, 213, 217], "specifi": [209, 213], "bodi": 209, "lambda": 209, "should": 209, "join": 209, "init": 209, "result": 209, "scan": 209, "name": [209, 214], "rang": 210, "15": 211, "background": 211, "idea": 211, "deal": [211, 245], "remaind": 211, "condit": [211, 246], "ternari": 211, "11": 212, "slice": 212, "take": 212, "degener": 212, "obtain": 212, "multidimension": [213, 239], "mai": 213, "probabl": 213, "don": 213, "want": 213, "s": 213, "const": 213, "entri": 213, "index": 213, "refer": [213, 240], "lifetim": 213, "depend": 213, "explicitli": 213, "placement": 213, "hostmirror": 213, "pointer": 213, "unmanag": 213, "special": 213, "philosophi": 214, "known": [214, 223], "knownissu": 214, "crai": 214, "fortran": [214, 239], "inlin": 214, "vs": 214, "uvm": 214, "cite": 215, "contribut": 216, "document": [216, 230], "x": [217, 228], "namespac": 217, "updat": 217, "pr": 219, "review": 219, "intern": [219, 235], "test": [219, 231, 235, 236], "behavior": 219, "faq": 220, "websit": 221, "content": 221, "select": 222, "debug": 222, "tpl": 222, "cpu": 222, "amd": 222, "arm": 222, "ibm": 222, "intel": 222, "risc": 222, "v": 222, "nvidia": 222, "licens": 224, "quick": 227, "start": 227, "prerequisit": 227, "project": [227, 232], "run": 227, "help": 227, "coolerview": 229, "plan": [231, 232], "stabil": 232, "activ": 232, "support": [232, 234], "platform": [232, 236], "capabl": 232, "iso": 232, "releas": [232, 235], "priorit": 232, "coordin": 232, "process": [232, 235], "feedback": 233, "report": 233, "attach": 234, "identif": 234, "b": 234, "file": 234, "promot": 234, "txt": 234, "chang": 235, "pull": 235, "request": 235, "nightli": 235, "integr": 235, "prefer": 235, "commun": 235, "workflow": 236, "compon": 236, "softwar": 236, "git": 236, "repositori": 236, "batch": 236, "queue": 236, "account": 236, "script": 236, "unit": 236, "averag": 238, "element": 238, "adjac": 238, "full": 238, "interop": 239, "multi": 240, "dimension": 240, "formul": 240, "mpi": 241, "halo": 241, "exchang": 241, "send": 241, "messag": 241, "awar": 241, "separ": 241, "out": 241, "identifi": 241, "subset": 241, "indic": 241, "extract": 241, "from": 242, "kokkos_enable_cuda_uvm": 242, "altern": 242, "transit": 242, "overlap": 243, "actor": [243, 246], "subject": [243, 246], "assumpt": [243, 246], "constraint": [243, 246], "while": 243, "cabana": 244, "soa": 244, "aosoa": 244, "pre": 245, "17": 245, "post": 246, "recurs": 246, "fibonacci": 246, "flow": 246, "n": 246, "divid": 246, "graph": 246, "down": 246, "bf": 246, "window": 247, "h": 247, "video": 248, "lectur": 248, "slide": 248}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "cppkokkos": 6, "sphinx": 56}})