Search.setIndex({"docnames": ["API/algorithms-index", "API/algorithms/Random-Number", "API/algorithms/Sort", "API/algorithms/std-algorithms-index", "API/algorithms/std-algorithms/Iterators", "API/algorithms/std-algorithms/StdMinMaxElement", "API/algorithms/std-algorithms/StdModSeq", "API/algorithms/std-algorithms/StdNonModSeq", "API/algorithms/std-algorithms/StdNumeric", "API/algorithms/std-algorithms/StdPartitioningOps", "API/algorithms/std-algorithms/StdSorting", "API/algorithms/std-algorithms/all/StdAdjacentDifference", "API/algorithms/std-algorithms/all/StdAdjacentFind", "API/algorithms/std-algorithms/all/StdAllOf", "API/algorithms/std-algorithms/all/StdAnyOf", "API/algorithms/std-algorithms/all/StdCopy", "API/algorithms/std-algorithms/all/StdCopyBackward", "API/algorithms/std-algorithms/all/StdCopyIf", "API/algorithms/std-algorithms/all/StdCopy_n", "API/algorithms/std-algorithms/all/StdCount", "API/algorithms/std-algorithms/all/StdCountIf", "API/algorithms/std-algorithms/all/StdEqual", "API/algorithms/std-algorithms/all/StdExclusiveScan", "API/algorithms/std-algorithms/all/StdFill", "API/algorithms/std-algorithms/all/StdFill_n", "API/algorithms/std-algorithms/all/StdFind", "API/algorithms/std-algorithms/all/StdFindEnd", "API/algorithms/std-algorithms/all/StdFindFirstOf", "API/algorithms/std-algorithms/all/StdFindIf", "API/algorithms/std-algorithms/all/StdFindIfNot", "API/algorithms/std-algorithms/all/StdForEach", "API/algorithms/std-algorithms/all/StdForEachN", "API/algorithms/std-algorithms/all/StdGenerate", "API/algorithms/std-algorithms/all/StdGenerate_n", "API/algorithms/std-algorithms/all/StdInclusiveScan", "API/algorithms/std-algorithms/all/StdIsPartitioned", "API/algorithms/std-algorithms/all/StdIsSorted", "API/algorithms/std-algorithms/all/StdIsSortedUntil", "API/algorithms/std-algorithms/all/StdLexicographicalCompare", "API/algorithms/std-algorithms/all/StdMaxElement", "API/algorithms/std-algorithms/all/StdMinElement", "API/algorithms/std-algorithms/all/StdMinMaxElement", "API/algorithms/std-algorithms/all/StdMismatch", "API/algorithms/std-algorithms/all/StdMove", "API/algorithms/std-algorithms/all/StdMoveBackward", "API/algorithms/std-algorithms/all/StdNoneOf", "API/algorithms/std-algorithms/all/StdPartitionCopy", "API/algorithms/std-algorithms/all/StdPartitionPoint", "API/algorithms/std-algorithms/all/StdReduce", "API/algorithms/std-algorithms/all/StdRemove", "API/algorithms/std-algorithms/all/StdRemoveCopy", "API/algorithms/std-algorithms/all/StdRemoveCopyIf", "API/algorithms/std-algorithms/all/StdRemoveIf", "API/algorithms/std-algorithms/all/StdReplace", "API/algorithms/std-algorithms/all/StdReplaceCopy", "API/algorithms/std-algorithms/all/StdReplaceCopyIf", "API/algorithms/std-algorithms/all/StdReplaceIf", "API/algorithms/std-algorithms/all/StdReverse", "API/algorithms/std-algorithms/all/StdReverseCopy", "API/algorithms/std-algorithms/all/StdRotate", "API/algorithms/std-algorithms/all/StdRotateCopy", "API/algorithms/std-algorithms/all/StdSearch", "API/algorithms/std-algorithms/all/StdSearchN", "API/algorithms/std-algorithms/all/StdShiftLeft", "API/algorithms/std-algorithms/all/StdShiftRight", "API/algorithms/std-algorithms/all/StdSwapRanges", "API/algorithms/std-algorithms/all/StdTransform", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan", "API/algorithms/std-algorithms/all/StdTransformReduce", "API/algorithms/std-algorithms/all/StdUnique", "API/algorithms/std-algorithms/all/StdUniqueCopy", "API/alphabetical", "API/containers-index", "API/containers/Bitset", "API/containers/DualView", "API/containers/DynRankView", "API/containers/DynamicView", "API/containers/Offset-View", "API/containers/ScatterView", "API/containers/StaticCrsGraph", "API/containers/Unordered-Map", "API/containers/vector", "API/core-index", "API/core/Detection-Idiom", "API/core/Execution-Policies", "API/core/Initialize-and-Finalize", "API/core/KokkosConcepts", "API/core/Macros", "API/core/Numerics", "API/core/ParallelDispatch", "API/core/Profiling", "API/core/STL-Compatibility", "API/core/SpaceAccessibility", "API/core/Spaces", "API/core/Task-Parallelism", "API/core/Traits", "API/core/Utilities", "API/core/View", "API/core/atomics", "API/core/atomics/atomic_compare_exchange", "API/core/atomics/atomic_compare_exchange_strong", "API/core/atomics/atomic_exchange", "API/core/atomics/atomic_fetch_op", "API/core/atomics/atomic_load", "API/core/atomics/atomic_op", "API/core/atomics/atomic_op_fetch", "API/core/atomics/atomic_store", "API/core/builtin_reducers", "API/core/builtinreducers/BAnd", "API/core/builtinreducers/BOr", "API/core/builtinreducers/LAnd", "API/core/builtinreducers/LOr", "API/core/builtinreducers/Max", "API/core/builtinreducers/MaxLoc", "API/core/builtinreducers/Min", "API/core/builtinreducers/MinLoc", "API/core/builtinreducers/MinMax", "API/core/builtinreducers/MinMaxLoc", "API/core/builtinreducers/MinMaxLocScalar", "API/core/builtinreducers/MinMaxScalar", "API/core/builtinreducers/Prod", "API/core/builtinreducers/ReducerConcept", "API/core/builtinreducers/ReductionScalarTypes", "API/core/builtinreducers/Sum", "API/core/builtinreducers/ValLocScalar", "API/core/c_style_memory_management", "API/core/c_style_memory_management/free", "API/core/c_style_memory_management/malloc", "API/core/c_style_memory_management/realloc", "API/core/execution_spaces", "API/core/initialize_finalize/InitArguments", "API/core/initialize_finalize/InitializationSettings", "API/core/initialize_finalize/ScopeGuard", "API/core/initialize_finalize/finalize", "API/core/initialize_finalize/initialize", "API/core/initialize_finalize/push_finalize_hook", "API/core/macros-special/host_device_macros", "API/core/memory_spaces", "API/core/numerics/bit-manipulation", "API/core/numerics/mathematical-constants", "API/core/numerics/mathematical-functions", "API/core/numerics/numeric-traits", "API/core/parallel-dispatch/ParallelForTag", "API/core/parallel-dispatch/ParallelReduceTag", "API/core/parallel-dispatch/ParallelScanTag", "API/core/parallel-dispatch/fence", "API/core/parallel-dispatch/parallel_for", "API/core/parallel-dispatch/parallel_reduce", "API/core/parallel-dispatch/parallel_scan", "API/core/policies/ExecutionPolicyConcept", "API/core/policies/MDRangePolicy", "API/core/policies/NestedPolicies", "API/core/policies/RangePolicy", "API/core/policies/TeamHandleConcept", "API/core/policies/TeamPolicy", "API/core/policies/TeamThreadMDRange", "API/core/policies/TeamThreadRange", "API/core/policies/TeamVectorMDRange", "API/core/policies/TeamVectorRange", "API/core/policies/ThreadVectorMDRange", "API/core/policies/ThreadVectorRange", "API/core/profiling/profiling_section", "API/core/profiling/scoped_region", "API/core/spaces/partition_space", "API/core/stl-compat/pair", "API/core/utilities/abort", "API/core/utilities/all", "API/core/utilities/assert", "API/core/utilities/complex", "API/core/utilities/device_id", "API/core/utilities/experimental", "API/core/utilities/min_max_clamp", "API/core/utilities/num_devices", "API/core/utilities/num_threads", "API/core/utilities/printf", "API/core/utilities/swap", "API/core/utilities/timer", "API/core/view/Subview_type", "API/core/view/create_mirror", "API/core/view/deep_copy", "API/core/view/layoutLeft", "API/core/view/layoutRight", "API/core/view/layoutStride", "API/core/view/realloc", "API/core/view/resize", "API/core/view/subview", "API/core/view/view", "API/core/view/view_alloc", "API/core/view/view_like", "API/simd-index", "API/simd/simd", "API/simd/simd_mask", "API/simd/where_expression", "ProgrammingGuide/Atomic-Operations", "ProgrammingGuide/Compatibility", "ProgrammingGuide/Compiling", "ProgrammingGuide/Custom-Reductions", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types", "ProgrammingGuide/Custom-Reductions-Custom-Reducers", "ProgrammingGuide/HierarchicalParallelism", "ProgrammingGuide/Initialization", "ProgrammingGuide/Interoperability", "ProgrammingGuide/Introduction", "ProgrammingGuide/Kokkos-and-Virtual-Functions", "ProgrammingGuide/Machine-Model", "ProgrammingGuide/ParallelDispatch", "ProgrammingGuide/ProgrammingModel", "ProgrammingGuide/SIMD", "ProgrammingGuide/Subviews", "ProgrammingGuide/View", "building", "citation", "contributing", "deprecation_page", "developer-guides/index", "developer-guides/prs-and-reviews", "faq", "index", "keywords", "known-issues", "license", "mydefs", "programmingguide", "quick_start", "requirements", "templates/class_api", "templates/index", "testing-and-issue-tracking", "testing-and-issue-tracking/Kokkos-Project-Planning", "testing-and-issue-tracking/Requirements-Issues-and-Feedback", "testing-and-issue-tracking/Testing-Process-Details", "testing-and-issue-tracking/Testing-Processes", "testing-and-issue-tracking/Testing-Workflow-Components", "usecases", "usecases/Average-To-Nodes", "usecases/Kokkos-Fortran-Interoperability", "usecases/MDRangePolicy", "usecases/MPI-Halo-Exchange", "usecases/Moving_from_EnableUVM_to_SharedSpace", "usecases/OverlappingHostAndDeviceWork", "usecases/SoA-and-AoSoA-with-Cabana", "usecases/TaggedOperators", "usecases/Tasking", "usecases/WindowsHeader", "videolectures"], "filenames": ["API/algorithms-index.rst", "API/algorithms/Random-Number.rst", "API/algorithms/Sort.rst", "API/algorithms/std-algorithms-index.rst", "API/algorithms/std-algorithms/Iterators.rst", "API/algorithms/std-algorithms/StdMinMaxElement.rst", "API/algorithms/std-algorithms/StdModSeq.rst", "API/algorithms/std-algorithms/StdNonModSeq.rst", "API/algorithms/std-algorithms/StdNumeric.rst", "API/algorithms/std-algorithms/StdPartitioningOps.rst", "API/algorithms/std-algorithms/StdSorting.rst", "API/algorithms/std-algorithms/all/StdAdjacentDifference.md", "API/algorithms/std-algorithms/all/StdAdjacentFind.rst", "API/algorithms/std-algorithms/all/StdAllOf.rst", "API/algorithms/std-algorithms/all/StdAnyOf.rst", "API/algorithms/std-algorithms/all/StdCopy.rst", "API/algorithms/std-algorithms/all/StdCopyBackward.rst", "API/algorithms/std-algorithms/all/StdCopyIf.rst", "API/algorithms/std-algorithms/all/StdCopy_n.rst", "API/algorithms/std-algorithms/all/StdCount.rst", "API/algorithms/std-algorithms/all/StdCountIf.rst", "API/algorithms/std-algorithms/all/StdEqual.rst", "API/algorithms/std-algorithms/all/StdExclusiveScan.md", "API/algorithms/std-algorithms/all/StdFill.md", "API/algorithms/std-algorithms/all/StdFill_n.md", "API/algorithms/std-algorithms/all/StdFind.rst", "API/algorithms/std-algorithms/all/StdFindEnd.rst", "API/algorithms/std-algorithms/all/StdFindFirstOf.rst", "API/algorithms/std-algorithms/all/StdFindIf.rst", "API/algorithms/std-algorithms/all/StdFindIfNot.rst", "API/algorithms/std-algorithms/all/StdForEach.md", "API/algorithms/std-algorithms/all/StdForEachN.md", "API/algorithms/std-algorithms/all/StdGenerate.rst", "API/algorithms/std-algorithms/all/StdGenerate_n.rst", "API/algorithms/std-algorithms/all/StdInclusiveScan.md", "API/algorithms/std-algorithms/all/StdIsPartitioned.rst", "API/algorithms/std-algorithms/all/StdIsSorted.rst", "API/algorithms/std-algorithms/all/StdIsSortedUntil.rst", "API/algorithms/std-algorithms/all/StdLexicographicalCompare.md", "API/algorithms/std-algorithms/all/StdMaxElement.rst", "API/algorithms/std-algorithms/all/StdMinElement.rst", "API/algorithms/std-algorithms/all/StdMinMaxElement.rst", "API/algorithms/std-algorithms/all/StdMismatch.md", "API/algorithms/std-algorithms/all/StdMove.rst", "API/algorithms/std-algorithms/all/StdMoveBackward.rst", "API/algorithms/std-algorithms/all/StdNoneOf.rst", "API/algorithms/std-algorithms/all/StdPartitionCopy.rst", "API/algorithms/std-algorithms/all/StdPartitionPoint.md", "API/algorithms/std-algorithms/all/StdReduce.md", "API/algorithms/std-algorithms/all/StdRemove.rst", "API/algorithms/std-algorithms/all/StdRemoveCopy.rst", "API/algorithms/std-algorithms/all/StdRemoveCopyIf.rst", "API/algorithms/std-algorithms/all/StdRemoveIf.rst", "API/algorithms/std-algorithms/all/StdReplace.md", "API/algorithms/std-algorithms/all/StdReplaceCopy.md", "API/algorithms/std-algorithms/all/StdReplaceCopyIf.md", "API/algorithms/std-algorithms/all/StdReplaceIf.md", "API/algorithms/std-algorithms/all/StdReverse.rst", "API/algorithms/std-algorithms/all/StdReverseCopy.rst", "API/algorithms/std-algorithms/all/StdRotate.rst", "API/algorithms/std-algorithms/all/StdRotateCopy.rst", "API/algorithms/std-algorithms/all/StdSearch.md", "API/algorithms/std-algorithms/all/StdSearchN.md", "API/algorithms/std-algorithms/all/StdShiftLeft.rst", "API/algorithms/std-algorithms/all/StdShiftRight.rst", "API/algorithms/std-algorithms/all/StdSwapRanges.rst", "API/algorithms/std-algorithms/all/StdTransform.rst", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformReduce.md", "API/algorithms/std-algorithms/all/StdUnique.rst", "API/algorithms/std-algorithms/all/StdUniqueCopy.rst", "API/alphabetical.rst", "API/containers-index.rst", "API/containers/Bitset.rst", "API/containers/DualView.rst", "API/containers/DynRankView.rst", "API/containers/DynamicView.rst", "API/containers/Offset-View.rst", "API/containers/ScatterView.rst", "API/containers/StaticCrsGraph.rst", "API/containers/Unordered-Map.rst", "API/containers/vector.rst", "API/core-index.rst", "API/core/Detection-Idiom.rst", "API/core/Execution-Policies.rst", "API/core/Initialize-and-Finalize.rst", "API/core/KokkosConcepts.rst", "API/core/Macros.rst", "API/core/Numerics.rst", "API/core/ParallelDispatch.rst", "API/core/Profiling.rst", "API/core/STL-Compatibility.rst", "API/core/SpaceAccessibility.rst", "API/core/Spaces.rst", "API/core/Task-Parallelism.rst", "API/core/Traits.rst", "API/core/Utilities.rst", "API/core/View.rst", "API/core/atomics.rst", "API/core/atomics/atomic_compare_exchange.rst", "API/core/atomics/atomic_compare_exchange_strong.rst", "API/core/atomics/atomic_exchange.rst", "API/core/atomics/atomic_fetch_op.rst", "API/core/atomics/atomic_load.rst", "API/core/atomics/atomic_op.rst", "API/core/atomics/atomic_op_fetch.rst", "API/core/atomics/atomic_store.rst", "API/core/builtin_reducers.rst", "API/core/builtinreducers/BAnd.rst", "API/core/builtinreducers/BOr.rst", "API/core/builtinreducers/LAnd.rst", "API/core/builtinreducers/LOr.rst", "API/core/builtinreducers/Max.rst", "API/core/builtinreducers/MaxLoc.rst", "API/core/builtinreducers/Min.rst", "API/core/builtinreducers/MinLoc.rst", "API/core/builtinreducers/MinMax.rst", "API/core/builtinreducers/MinMaxLoc.rst", "API/core/builtinreducers/MinMaxLocScalar.rst", "API/core/builtinreducers/MinMaxScalar.rst", "API/core/builtinreducers/Prod.rst", "API/core/builtinreducers/ReducerConcept.rst", "API/core/builtinreducers/ReductionScalarTypes.rst", "API/core/builtinreducers/Sum.rst", "API/core/builtinreducers/ValLocScalar.rst", "API/core/c_style_memory_management.rst", "API/core/c_style_memory_management/free.rst", "API/core/c_style_memory_management/malloc.rst", "API/core/c_style_memory_management/realloc.rst", "API/core/execution_spaces.rst", "API/core/initialize_finalize/InitArguments.rst", "API/core/initialize_finalize/InitializationSettings.rst", "API/core/initialize_finalize/ScopeGuard.rst", "API/core/initialize_finalize/finalize.rst", "API/core/initialize_finalize/initialize.rst", "API/core/initialize_finalize/push_finalize_hook.rst", "API/core/macros-special/host_device_macros.rst", "API/core/memory_spaces.rst", "API/core/numerics/bit-manipulation.rst", "API/core/numerics/mathematical-constants.rst", "API/core/numerics/mathematical-functions.rst", "API/core/numerics/numeric-traits.rst", "API/core/parallel-dispatch/ParallelForTag.rst", "API/core/parallel-dispatch/ParallelReduceTag.rst", "API/core/parallel-dispatch/ParallelScanTag.rst", "API/core/parallel-dispatch/fence.rst", "API/core/parallel-dispatch/parallel_for.rst", "API/core/parallel-dispatch/parallel_reduce.rst", "API/core/parallel-dispatch/parallel_scan.rst", "API/core/policies/ExecutionPolicyConcept.rst", "API/core/policies/MDRangePolicy.rst", "API/core/policies/NestedPolicies.rst", "API/core/policies/RangePolicy.rst", "API/core/policies/TeamHandleConcept.rst", "API/core/policies/TeamPolicy.rst", "API/core/policies/TeamThreadMDRange.rst", "API/core/policies/TeamThreadRange.rst", "API/core/policies/TeamVectorMDRange.rst", "API/core/policies/TeamVectorRange.rst", "API/core/policies/ThreadVectorMDRange.rst", "API/core/policies/ThreadVectorRange.rst", "API/core/profiling/profiling_section.rst", "API/core/profiling/scoped_region.rst", "API/core/spaces/partition_space.rst", "API/core/stl-compat/pair.md", "API/core/utilities/abort.rst", "API/core/utilities/all.md", "API/core/utilities/assert.rst", "API/core/utilities/complex.rst", "API/core/utilities/device_id.rst", "API/core/utilities/experimental.md", "API/core/utilities/min_max_clamp.rst", "API/core/utilities/num_devices.rst", "API/core/utilities/num_threads.rst", "API/core/utilities/printf.rst", "API/core/utilities/swap.rst", "API/core/utilities/timer.rst", "API/core/view/Subview_type.rst", "API/core/view/create_mirror.rst", "API/core/view/deep_copy.rst", "API/core/view/layoutLeft.rst", "API/core/view/layoutRight.rst", "API/core/view/layoutStride.rst", "API/core/view/realloc.rst", "API/core/view/resize.rst", "API/core/view/subview.rst", "API/core/view/view.rst", "API/core/view/view_alloc.rst", "API/core/view/view_like.rst", "API/simd-index.rst", "API/simd/simd.md", "API/simd/simd_mask.md", "API/simd/where_expression.md", "ProgrammingGuide/Atomic-Operations.md", "ProgrammingGuide/Compatibility.md", "ProgrammingGuide/Compiling.md", "ProgrammingGuide/Custom-Reductions.rst", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers.md", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types.md", "ProgrammingGuide/Custom-Reductions-Custom-Reducers.md", "ProgrammingGuide/HierarchicalParallelism.md", "ProgrammingGuide/Initialization.rst", "ProgrammingGuide/Interoperability.md", "ProgrammingGuide/Introduction.md", "ProgrammingGuide/Kokkos-and-Virtual-Functions.md", "ProgrammingGuide/Machine-Model.rst", "ProgrammingGuide/ParallelDispatch.md", "ProgrammingGuide/ProgrammingModel.md", "ProgrammingGuide/SIMD.md", "ProgrammingGuide/Subviews.md", "ProgrammingGuide/View.rst", "building.md", "citation.rst", "contributing.rst", "deprecation_page.rst", "developer-guides/index.rst", "developer-guides/prs-and-reviews.rst", "faq.rst", "index.rst", "keywords.rst", "known-issues.rst", "license.rst", "mydefs.rst", "programmingguide.rst", "quick_start.rst", "requirements.rst", "templates/class_api.rst", "templates/index.rst", "testing-and-issue-tracking.rst", "testing-and-issue-tracking/Kokkos-Project-Planning.md", "testing-and-issue-tracking/Requirements-Issues-and-Feedback.md", "testing-and-issue-tracking/Testing-Process-Details.md", "testing-and-issue-tracking/Testing-Processes.md", "testing-and-issue-tracking/Testing-Workflow-Components.md", "usecases.rst", "usecases/Average-To-Nodes.md", "usecases/Kokkos-Fortran-Interoperability.md", "usecases/MDRangePolicy.md", "usecases/MPI-Halo-Exchange.md", "usecases/Moving_from_EnableUVM_to_SharedSpace.rst", "usecases/OverlappingHostAndDeviceWork.md", "usecases/SoA-and-AoSoA-with-Cabana.md", "usecases/TaggedOperators.md", "usecases/Tasking.md", "usecases/WindowsHeader.md", "videolectures.rst"], "titles": ["API: Algorithms", "Random-Number", "Sort", "Std Algorithms", "Iterators", "Minimum/maximum", "Modifying Sequence", "Non-modifying Sequence", "Numeric", "Partitioning", "Sorting", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_difference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">all_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">any_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">equal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_end</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_first_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if_not</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_partitioned</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted_until</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lexicographical_compare</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">max_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">min_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">minmax_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mismatch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">none_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_point</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_left</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_right</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">swap_ranges</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique_copy</span></code>", "API in Alphabetical Order", "API: Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Bitset</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DualView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynRankView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynamicView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">OffsetView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScatterView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">StaticCrsGraph</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnorderedMap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector</span></code> [DEPRECATED]", "API: Core", "Detection Idiom", "Execution Policies", "Initialize and Finalize", "Kokkos Concepts", "Macros", "Numerics", "Parallel Execution/Dispatch", "Profiling", "STL Compatibility Issues", "Space Accessibility", "Spaces", "Task-Parallelism", "Traits", "Utilities", "View and related", "Atomics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange_strong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_fetch_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_load</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]_fetch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_store</span></code>", "Built-in Reducers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Max</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Min</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLocScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Prod</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReducerConcept</span></code>", "Reduction Scalar Types", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ValLocScalar</span></code>", "C-style memory management", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_free</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_malloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_realloc</span></code>", "Execution Spaces", "InitArguments", "<code class=\"docutils literal notranslate\"><span class=\"pre\">InitializationSettings</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScopeGuard</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">finalize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">initialize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">push_finalize_hook</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Function</span> <span class=\"pre\">Annotation</span> <span class=\"pre\">Macros</span></code>", "Memory Spaces", "Bit manipulation", "Mathematical constants", "Common math functions", "Numeric traits", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelForTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelReduceTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelScanTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fence</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_for</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ExecutionPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MDRangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NestedPolicies</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">RangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamHandleConcept</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Profiling::ProfilingSection</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Profiling::ScopedRegion</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_space</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::pair</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::abort</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::ALL</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">KOKKOS_ASSERT</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::complex</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::device_id</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Experimental</span></code>", "Minimum/maximum operations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::num_devices</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::num_threads</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::printf</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::kokkos_swap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Timer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_mirror[_view]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deep_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutLeft</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutRight</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutStride</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">realloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">resize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">View</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">view_alloc</span></code>", "View-like Types", "API: SIMD", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::where_expression</span></code>", "10. Atomic Operations", "12 Backwards &amp; Future Compatibility", "4. Compiling", "9. Custom Reductions", "9.1 Built-In-Reducers", "9.2 Built-In Reducers with Custom Scalar Types", "9.3 Custom Reducers", "8. Hierarchical Parallelism", "5. Initialization", "13. Interoperability and Legacy Codes", "1. Introduction", "14. Kokkos and Virtual Functions", "2. Machine Model", "7. Parallel dispatch", "3: Programming Model", "15. SIMD Types", "11: Subviews", "6: View: Multidimensional array", "Build, Install and Use", "Citing Kokkos", "Contributing", "Deprecation for Kokkos-3.x", "Developer Guides", "PRs and Reviews", "FAQ", "Kokkos: The Programming Model", "CMake Keywords", "Known issues", "License", "&lt;no title&gt;", "Programming Guide", "Quick Start", "Requirements", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CoolerView</span></code>", "Documentation Templates", "Kokkos Planning and Testing", "Kokkos Project Planning", "Requirements, Issues and Feedback", "Attachments", "Kokkos Testing Processes and Change Process", "Kokkos Testing Workflow Components", "Use Cases and Examples", "ScatterView averaging elements to nodes", "Fortran Interop Use Case", "MDRangePolicy Use Case", "MPI Halo Exchange", "Moving code from requiring <code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos_ENABLE_CUDA_UVM</span></code> to using <code class=\"docutils literal notranslate\"><span class=\"pre\">SharedSpace</span></code>", "Overlapping Host and Device work", "Array of Structures and Structure of Arrays with Cabana", "Tagged Operators", "Kokkos Tasking Use Case", "Kokkos and <code class=\"docutils literal notranslate\"><span class=\"pre\">Windows.h</span></code>", "Video lectures and slides"], "terms": {"random": [0, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 75, 76, 132, 133, 135, 138, 187, 202, 208], "number": [0, 4, 18, 19, 20, 24, 31, 33, 63, 64, 72, 74, 76, 77, 81, 82, 87, 88, 89, 122, 128, 130, 132, 133, 135, 139, 140, 154, 164, 169, 170, 173, 174, 177, 187, 191, 192, 194, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 221, 232, 233, 238, 239, 242, 244], "gener": [0, 6, 33, 72, 83, 85, 87, 90, 95, 135, 137, 138, 191, 192, 194, 195, 198, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 222, 226, 230, 232, 234], "sort": [0, 3, 36, 37, 82, 88, 215, 221], "nest": [0, 77, 87, 93, 95, 137, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 181, 182, 195, 198, 206, 207, 208, 238, 243, 246], "polici": [0, 72, 83, 87, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 187, 196, 200, 202, 203, 207, 215, 221, 238, 241, 243], "team": [0, 72, 85, 87, 95, 143, 144, 145, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 198, 203, 206, 207, 214, 216, 230, 231, 233, 234, 244], "thread": [0, 1, 72, 74, 79, 81, 85, 87, 88, 93, 94, 95, 132, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 164, 170, 173, 174, 175, 194, 196, 197, 198, 202, 204, 207, 208, 211, 212, 219, 220, 234, 241, 244, 246], "level": [0, 87, 95, 152, 154, 155, 195, 196, 201, 204, 207, 211, 212, 213, 219, 221, 234], "std": [0, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 87, 88, 89, 92, 93, 95, 100, 101, 102, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 127, 130, 132, 133, 136, 141, 142, 146, 147, 148, 149, 151, 157, 159, 161, 162, 163, 164, 165, 169, 173, 175, 176, 178, 179, 180, 186, 187, 188, 191, 192, 193, 205, 209, 210, 211, 215, 221, 242], "header": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 89, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 196, 217, 220, 227, 233, 242, 245], "file": [1, 4, 11, 22, 23, 24, 30, 31, 34, 38, 42, 47, 48, 53, 54, 55, 56, 61, 62, 67, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 169, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 202, 217, 218, 220, 222, 225, 227, 233, 238, 245], "kokkos_cor": [1, 2, 76, 88, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 195, 200, 202, 205, 215, 221, 227, 240, 245], "hpp": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 88, 89, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 200, 202, 205, 209, 215, 221, 227, 237, 238, 240, 242, 245], "kokkos_random": [1, 2, 215], "templat": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 84, 85, 87, 89, 93, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 137, 138, 139, 142, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 169, 172, 175, 176, 178, 179, 180, 184, 185, 186, 187, 188, 189, 195, 196, 198, 199, 200, 201, 203, 207, 209, 211, 214, 221, 227, 237, 238, 240], "class": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 92, 93, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 132, 133, 135, 137, 138, 142, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 195, 197, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 221, 227, 228, 239, 242, 243], "struct": [1, 2, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 35, 36, 39, 40, 41, 42, 45, 46, 48, 51, 52, 56, 67, 69, 70, 71, 72, 81, 84, 95, 116, 119, 120, 122, 125, 130, 131, 133, 135, 138, 143, 144, 145, 147, 148, 153, 165, 178, 181, 182, 195, 198, 199, 200, 201, 203, 207, 211, 215, 221, 237, 242, 244], "gen_data_typ": 1, "kokkos_inline_funct": [1, 2, 4, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 35, 36, 39, 40, 41, 42, 45, 46, 51, 52, 56, 70, 71, 75, 77, 79, 81, 82, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 147, 148, 154, 169, 181, 182, 183, 199, 200, 201, 203, 207, 211, 239], "static": [1, 74, 75, 76, 77, 85, 87, 116, 137, 151, 155, 181, 182, 183, 187, 191, 192, 199, 201, 204, 205, 211, 212, 215, 221, 227, 246], "gen_func_typ": 1, "max": [1, 72, 74, 88, 103, 106, 108, 114, 117, 118, 119, 120, 122, 123, 125, 142, 148, 156, 158, 160, 172, 194, 198, 201, 207, 209, 215, 220, 245], "return": [1, 2, 27, 38, 42, 62, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 88, 95, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 132, 133, 134, 135, 138, 142, 147, 151, 153, 154, 155, 157, 159, 161, 163, 164, 165, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 186, 187, 188, 191, 192, 193, 194, 195, 199, 200, 201, 203, 205, 206, 209, 211, 215, 227, 236, 237, 238, 239, 240, 241, 244], "type_valu": 1, "draw": [1, 72], "gen": [1, 191, 192], "gen_return_valu": 1, "const": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 130, 132, 133, 135, 137, 138, 140, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 198, 199, 200, 201, 203, 205, 207, 209, 210, 215, 227, 237, 238, 239, 241, 243], "rang": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 95, 147, 148, 149, 152, 153, 156, 157, 158, 159, 160, 161, 172, 186, 201, 206, 207, 210, 211, 233, 234, 238], "start": [1, 24, 50, 51, 60, 66, 69, 71, 72, 74, 82, 95, 130, 133, 138, 139, 147, 148, 149, 151, 152, 153, 155, 162, 163, 177, 191, 195, 198, 201, 202, 203, 207, 211, 212, 219, 220, 230, 234, 237, 239, 241, 244], "end": [1, 2, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 78, 80, 82, 86, 133, 134, 135, 139, 148, 149, 151, 152, 153, 155, 157, 159, 161, 162, 163, 196, 202, 205, 211, 222, 237, 238, 244, 245], "function": [1, 2, 4, 30, 33, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 95, 101, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 127, 128, 129, 134, 135, 136, 139, 140, 142, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 161, 169, 172, 173, 175, 176, 177, 178, 179, 183, 195, 196, 199, 200, 201, 202, 203, 204, 208, 209, 210, 217, 220, 224, 230, 236, 237, 238, 239, 241, 243], "special": [1, 39, 40, 41, 72, 75, 76, 84, 87, 96, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 178, 179, 187, 188, 191, 192, 197, 199, 201, 207, 209, 210, 221, 222, 227, 237, 242], "all": [1, 2, 12, 13, 21, 30, 33, 35, 47, 49, 52, 53, 54, 55, 56, 66, 70, 72, 74, 76, 77, 78, 86, 87, 93, 95, 97, 122, 133, 134, 136, 137, 138, 139, 140, 146, 147, 150, 151, 154, 155, 178, 180, 183, 186, 187, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 217, 219, 220, 221, 222, 225, 226, 230, 232, 233, 234, 238, 240, 244], "list": [1, 2, 72, 82, 98, 141, 142, 151, 186, 188, 189, 194, 202, 204, 206, 211, 212, 222, 226, 230, 231, 232, 233, 234, 238, 239, 244], "here": [1, 39, 40, 41, 72, 84, 87, 130, 134, 135, 138, 150, 151, 152, 153, 155, 163, 194, 201, 202, 205, 206, 207, 209, 211, 214, 221, 225, 226, 233, 234, 239, 241], "ar": [1, 2, 4, 13, 14, 19, 21, 26, 27, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 53, 59, 60, 61, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 87, 88, 90, 95, 98, 100, 101, 108, 117, 118, 122, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 160, 170, 171, 172, 173, 174, 178, 179, 180, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 220, 221, 222, 225, 226, 228, 230, 231, 232, 233, 234, 236, 237, 239, 241, 243, 244, 245], "part": [1, 72, 83, 87, 98, 122, 130, 138, 154, 169, 171, 194, 195, 196, 203, 204, 208, 209, 211, 217, 221, 222, 230, 232, 234, 243], "kokko": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 92, 93, 94, 96, 97, 98, 101, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 160, 162, 163, 164, 168, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 204, 207, 208, 209, 210, 214, 216, 217, 218, 220, 221, 222, 224, 227, 231, 235, 236, 239, 240, 241, 242, 243, 246], "namespac": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 84, 87, 139, 140, 141, 142, 164, 167, 171, 172, 191, 192, 193, 195, 199, 200, 203, 210, 211, 221], "char": [1, 2, 76, 86, 87, 116, 122, 130, 133, 134, 135, 136, 137, 138, 147, 148, 149, 166, 168, 173, 175, 180, 183, 187, 191, 192, 193, 199, 200, 202, 205, 211, 227, 232, 242], "short": [1, 207], "127": 1, "0xff": 1, "256": [1, 209, 244], "32767": 1, "0xffff": 1, "65536": 1, "32768": 1, "int": [1, 2, 4, 21, 25, 28, 30, 35, 42, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 116, 122, 130, 131, 132, 133, 134, 135, 136, 137, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 168, 170, 173, 174, 175, 178, 180, 183, 186, 187, 191, 192, 193, 194, 198, 199, 200, 201, 202, 203, 205, 207, 209, 211, 215, 227, 236, 238, 239, 240, 241, 242, 243, 244], "max_rand": 1, "uint": 1, "max_urand": 1, "long": [1, 81, 87, 122, 137, 141, 196, 204, 206, 207, 211, 217, 230], "max_rand64": 1, "ulong": 1, "max_urand64": 1, "float": [1, 75, 82, 140, 141, 142, 165, 181, 182, 183, 191, 206, 207, 209, 239, 242], "1": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 105, 111, 116, 121, 122, 131, 132, 133, 135, 137, 139, 147, 148, 149, 152, 154, 155, 157, 159, 161, 163, 164, 165, 168, 169, 170, 173, 174, 176, 180, 183, 186, 187, 191, 192, 193, 197, 199, 200, 205, 209, 212, 220, 221, 222, 224, 225, 226, 227, 232, 234, 236, 237, 238, 239, 244, 246], "0f": [1, 165], "doubl": [1, 4, 23, 24, 39, 40, 41, 53, 56, 76, 77, 78, 79, 80, 86, 95, 116, 130, 133, 134, 135, 137, 141, 146, 148, 157, 159, 161, 167, 169, 177, 178, 186, 187, 191, 192, 193, 194, 198, 201, 203, 207, 209, 210, 211, 227, 236, 237, 238, 239, 240, 241], "0": [1, 2, 11, 18, 21, 24, 35, 56, 72, 74, 75, 76, 77, 78, 79, 80, 82, 87, 88, 95, 109, 110, 112, 116, 122, 124, 130, 132, 137, 138, 139, 140, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 168, 169, 173, 180, 181, 182, 183, 186, 187, 191, 192, 193, 194, 196, 198, 199, 200, 201, 203, 205, 207, 208, 209, 211, 212, 220, 221, 222, 226, 227, 232, 236, 237, 238, 239, 240, 241, 243, 244], "complex": [1, 72, 82, 87, 88, 97, 122, 196, 197, 198, 201, 205, 206, 209, 217, 219, 221, 226], "where": [1, 2, 4, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 40, 42, 45, 46, 51, 52, 55, 56, 67, 69, 70, 71, 76, 77, 81, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 138, 147, 148, 156, 160, 164, 168, 180, 187, 195, 196, 197, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 220, 222, 225, 226, 230, 234, 236, 237, 238, 241, 242, 243, 244], "maximum": [1, 3, 72, 77, 78, 82, 97, 103, 105, 106, 108, 113, 114, 117, 118, 119, 120, 130, 137, 155, 198, 201], "valu": [1, 2, 4, 11, 22, 23, 24, 27, 30, 34, 48, 55, 56, 62, 67, 69, 72, 75, 76, 77, 78, 79, 81, 82, 84, 87, 88, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 130, 132, 135, 137, 138, 139, 142, 147, 148, 149, 151, 153, 154, 155, 157, 159, 161, 165, 168, 172, 176, 179, 180, 186, 187, 188, 193, 194, 197, 198, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 220, 221, 239, 242], "xorshift": 1, "given": [1, 4, 12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 70, 71, 75, 78, 79, 81, 84, 85, 87, 93, 95, 103, 105, 106, 122, 129, 130, 139, 148, 149, 154, 155, 171, 172, 178, 180, 183, 196, 201, 202, 203, 207, 208, 209, 210, 211, 212, 233, 239, 243, 244], "follow": [1, 32, 33, 37, 39, 40, 41, 75, 76, 77, 78, 79, 81, 86, 87, 88, 90, 92, 93, 98, 122, 130, 138, 141, 154, 179, 180, 187, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 207, 209, 210, 211, 212, 215, 216, 220, 221, 222, 226, 228, 232, 234, 236], "enum": [1, 130, 138, 211], "0xffffffffu": 1, "0xffffffffffffffffull": 1, "static_cast": [1, 35, 137, 205], "2": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 82, 84, 88, 116, 122, 131, 135, 137, 149, 151, 154, 156, 158, 160, 164, 165, 166, 168, 175, 176, 180, 183, 184, 185, 186, 187, 191, 195, 197, 198, 200, 209, 220, 221, 222, 224, 226, 227, 232, 234, 244, 246], "int64_t": [1, 78, 149, 151, 153, 191, 192], "provid": [1, 36, 39, 40, 41, 72, 75, 76, 77, 78, 80, 84, 87, 89, 92, 93, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 130, 133, 137, 138, 139, 140, 141, 142, 147, 148, 149, 150, 151, 153, 154, 155, 162, 163, 164, 165, 172, 176, 179, 180, 181, 182, 183, 187, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 219, 220, 222, 230, 231, 232, 233, 234, 237, 238, 242, 244], "structur": [1, 4, 72, 76, 95, 98, 132, 187, 202, 206, 208, 210, 211, 235, 236, 238, 239, 243, 244, 246], "necessari": [1, 75, 76, 87, 92, 95, 147, 187, 196, 197, 201, 203, 205, 207, 211, 212, 225, 230, 234, 236, 239], "pseudorandom": 1, "These": [1, 2, 76, 87, 88, 137, 138, 153, 154, 187, 191, 193, 195, 198, 201, 204, 206, 208, 210, 211, 220, 226, 230, 232, 233, 234, 237], "base": [1, 36, 40, 76, 77, 81, 82, 84, 87, 95, 132, 151, 162, 163, 191, 192, 195, 196, 201, 202, 204, 205, 207, 209, 210, 211, 220, 222, 230, 231, 233, 234, 238, 239, 242, 243, 244, 246], "vigna": 1, "sebastiano": 1, "2014": [1, 206, 213], "an": [1, 2, 4, 11, 13, 14, 18, 20, 22, 24, 25, 28, 29, 33, 34, 43, 44, 58, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 83, 85, 87, 93, 95, 108, 116, 122, 124, 128, 130, 134, 135, 138, 139, 141, 146, 147, 148, 149, 151, 153, 154, 155, 158, 163, 164, 165, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 214, 217, 219, 221, 222, 230, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245], "experiment": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 87, 88, 97, 128, 129, 130, 138, 139, 140, 141, 142, 164, 190, 195, 201, 202, 209, 215, 220, 221, 226, 234, 236], "explor": [1, 87, 204, 217, 220, 230], "marsaglia": 1, "s": [1, 21, 75, 77, 79, 81, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 130, 132, 148, 154, 165, 167, 178, 180, 186, 187, 196, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 217, 222, 225, 227, 230, 234, 239, 241, 242, 243], "scrambl": 1, "see": [1, 75, 76, 86, 87, 88, 91, 92, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 138, 139, 142, 147, 148, 150, 153, 154, 155, 162, 163, 164, 170, 173, 174, 187, 196, 198, 200, 201, 205, 206, 207, 210, 211, 212, 214, 220, 221, 225, 226, 228, 234], "http": [1, 84, 141, 213, 219, 221, 222, 225, 232], "arxiv": 1, "org": [1, 84, 141, 196, 213, 222], "ab": [1, 141, 191], "1402": 1, "6246": 1, "The": [1, 2, 4, 11, 12, 13, 14, 16, 19, 20, 21, 22, 26, 27, 30, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 89, 90, 92, 95, 98, 101, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 132, 134, 135, 136, 138, 140, 141, 147, 148, 149, 150, 151, 153, 154, 155, 160, 162, 163, 164, 168, 169, 172, 175, 179, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 216, 217, 220, 221, 222, 225, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 242, 243, 244, 245], "themselv": [1, 95, 206, 207, 208, 230], "have": [1, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 57, 58, 59, 60, 63, 65, 69, 70, 71, 75, 78, 81, 82, 87, 88, 92, 95, 122, 130, 132, 133, 142, 146, 147, 149, 154, 156, 157, 158, 159, 179, 183, 184, 185, 187, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 220, 221, 222, 226, 230, 232, 233, 234, 236, 239, 242, 243, 244], "two": [1, 2, 11, 12, 21, 22, 26, 27, 34, 36, 39, 40, 41, 42, 46, 48, 65, 69, 75, 77, 78, 81, 87, 95, 122, 130, 132, 135, 138, 139, 153, 164, 180, 194, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 222, 227, 230, 231, 233, 234, 236, 237, 238, 239, 245], "compon": [1, 169, 183, 206, 225, 229, 233], "state": [1, 72, 75, 81, 87, 134, 201, 207, 209, 211, 220, 222], "pool": [1, 72, 201, 211, 221], "actual": [1, 77, 100, 130, 138, 150, 153, 154, 155, 187, 194, 201, 203, 205, 206, 207, 208, 211, 212, 220, 232, 233, 234], "A": [1, 2, 22, 34, 41, 48, 69, 72, 73, 75, 76, 77, 78, 79, 81, 88, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 133, 143, 144, 145, 146, 147, 148, 149, 152, 155, 156, 157, 158, 159, 160, 161, 167, 178, 179, 180, 181, 182, 183, 186, 187, 194, 196, 197, 198, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 220, 221, 222, 227, 230, 234, 237, 241, 243, 244], "manag": [1, 72, 73, 75, 76, 79, 81, 83, 86, 87, 98, 128, 129, 137, 162, 187, 196, 206, 212, 219, 220, 222, 231, 239, 246], "so": [1, 2, 82, 87, 92, 95, 130, 153, 187, 194, 195, 196, 201, 202, 203, 205, 206, 207, 209, 210, 211, 214, 226, 231, 232, 234, 237, 241], "each": [1, 2, 4, 11, 23, 30, 31, 32, 33, 62, 67, 68, 69, 72, 75, 76, 78, 82, 85, 87, 95, 141, 147, 148, 155, 156, 158, 160, 164, 165, 181, 182, 183, 187, 194, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 222, 228, 230, 232, 233, 234, 236, 238, 239, 242, 244], "activ": [1, 23, 24, 53, 56, 88, 196, 201, 207, 212, 217, 220, 234], "abl": [1, 76, 95, 130, 138, 187, 188, 194, 201, 204, 206, 209, 211, 215, 239], "grab": 1, "its": [1, 4, 72, 75, 76, 77, 81, 87, 95, 100, 101, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 132, 133, 139, 154, 164, 165, 168, 184, 187, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 222, 230, 231, 233, 234, 236, 243], "own": [1, 75, 164, 187, 194, 210, 211, 212, 222, 230, 232, 239], "thi": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 75, 76, 77, 79, 81, 82, 87, 88, 92, 95, 122, 130, 133, 134, 135, 137, 138, 141, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 169, 176, 179, 180, 181, 182, 183, 184, 185, 187, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 217, 219, 220, 221, 222, 225, 226, 228, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245], "allow": [1, 75, 76, 78, 79, 81, 82, 86, 87, 95, 130, 132, 135, 138, 148, 150, 154, 155, 156, 158, 160, 179, 181, 182, 183, 187, 188, 194, 195, 196, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 230, 233, 240, 241, 243], "which": [1, 2, 17, 20, 28, 29, 37, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 83, 84, 86, 87, 95, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 130, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 162, 164, 175, 176, 179, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 220, 222, 230, 231, 234, 237, 239, 240, 241, 242, 243], "independ": [1, 72, 138, 155, 179, 207, 211, 230, 234, 246], "between": [1, 11, 21, 37, 54, 65, 69, 72, 76, 81, 82, 93, 98, 154, 164, 172, 179, 180, 187, 195, 196, 201, 204, 205, 206, 209, 211, 221, 227, 230, 232, 238, 239, 240, 241], "note": [1, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 76, 77, 78, 82, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 137, 146, 147, 153, 154, 155, 164, 180, 187, 194, 196, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 220, 221, 230, 234, 237, 241, 244], "contrast": [1, 139, 152, 157, 159, 161, 168, 201, 211, 230], "curand": 1, "none": [1, 4, 23, 32, 53, 56, 57, 127, 143, 144, 145, 192, 196, 204, 205, 206, 234, 237], "collect": [1, 154, 201, 204, 207, 208, 210, 230, 234, 239, 242], "i": [1, 2, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 114, 116, 118, 119, 122, 125, 127, 128, 129, 130, 137, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 164, 168, 175, 179, 180, 183, 184, 185, 187, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 206, 208, 209, 210, 218, 222, 225, 226, 227, 230, 234, 238, 239, 241, 243], "e": [1, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 75, 76, 79, 85, 87, 88, 93, 122, 127, 128, 129, 130, 132, 134, 137, 138, 140, 142, 146, 148, 149, 150, 154, 155, 156, 157, 158, 159, 163, 179, 180, 184, 185, 187, 191, 192, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 217, 220, 225, 226, 227, 230, 232, 233, 234, 240], "can": [1, 2, 4, 11, 22, 25, 28, 30, 39, 40, 41, 42, 69, 72, 76, 77, 78, 81, 84, 85, 87, 88, 95, 122, 130, 131, 132, 135, 137, 138, 142, 147, 148, 151, 152, 153, 154, 155, 160, 161, 179, 183, 184, 185, 187, 188, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 217, 218, 219, 220, 221, 228, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 243], "call": [1, 2, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 33, 35, 36, 40, 42, 45, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 74, 75, 77, 79, 81, 85, 86, 87, 90, 95, 100, 102, 105, 122, 128, 129, 130, 132, 133, 134, 135, 136, 137, 141, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 168, 173, 175, 176, 177, 178, 179, 180, 184, 185, 187, 191, 192, 193, 194, 196, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 221, 234, 237, 239, 241], "insid": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 81, 85, 87, 95, 137, 146, 147, 148, 149, 152, 156, 157, 158, 159, 160, 161, 171, 195, 196, 201, 203, 205, 206, 207, 211, 243, 244, 245], "condit": [1, 13, 14, 20, 30, 53, 76, 168, 187, 194, 201, 203, 206, 207, 222, 233, 241], "devic": [1, 72, 74, 75, 76, 80, 81, 82, 88, 93, 130, 132, 137, 138, 140, 141, 165, 168, 170, 173, 174, 179, 180, 187, 196, 202, 203, 204, 207, 211, 212, 221, 225, 233, 234, 235, 239, 240], "public": [1, 75, 76, 77, 79, 81, 82, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 130, 137, 138, 148, 152, 154, 155, 157, 159, 161, 169, 171, 183, 193, 195, 200, 205, 207, 214, 227, 230, 239, 243], "typedef": [1, 75, 76, 77, 79, 81, 82, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 152, 154, 155, 157, 159, 161, 169, 177, 181, 182, 183, 195, 198, 199, 200, 201, 203, 207, 211, 237, 241], "device_typ": [1, 75, 76, 77, 81, 87, 130, 138, 179, 187, 211], "generator_typ": 1, "rannum_typ": 1, "seed": [1, 72], "void": [1, 2, 4, 23, 30, 32, 53, 56, 57, 74, 75, 77, 80, 81, 82, 84, 85, 87, 88, 95, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 136, 137, 138, 140, 141, 146, 147, 148, 149, 154, 162, 163, 164, 166, 168, 169, 175, 176, 177, 180, 184, 185, 187, 191, 193, 194, 195, 200, 201, 203, 205, 207, 209, 211, 215, 221, 227, 237, 239, 240, 241, 243, 244], "init": [1, 22, 34, 67, 72, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 148, 149, 200, 239], "num_stat": 1, "get_stat": 1, "free_stat": 1, "initi": [1, 2, 22, 34, 48, 67, 69, 72, 75, 76, 82, 83, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 131, 132, 133, 134, 136, 147, 148, 149, 165, 168, 169, 170, 173, 174, 175, 180, 183, 187, 188, 191, 192, 193, 196, 197, 199, 200, 201, 203, 205, 206, 207, 221, 224, 227, 230, 232, 234, 240, 241], "us": [1, 2, 4, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 93, 95, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 131, 132, 133, 134, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 170, 173, 174, 178, 179, 184, 185, 186, 187, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 213, 214, 215, 217, 219, 220, 221, 222, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 239, 241, 242, 243, 245], "establish": [1, 234, 238], "pool_siz": 1, "random_xorshift64": [1, 72], "serial": [1, 72, 85, 87, 88, 94, 196, 202, 204, 205, 207, 209, 211, 225, 226, 232, 234], "make": [1, 75, 76, 87, 95, 139, 149, 154, 172, 187, 194, 195, 196, 198, 201, 206, 207, 209, 212, 214, 217, 221, 222, 230, 232, 237, 239, 240, 243], "process": [1, 89, 138, 196, 202, 208, 209, 210, 212, 219, 229, 234], "platform": [1, 83, 191, 192, 219, 231, 233, 242], "determinist": [1, 48, 69, 208], "request": [1, 75, 77, 130, 143, 144, 145, 148, 154, 155, 201, 202, 206, 208, 214, 217, 220, 221, 230, 231, 232, 234], "lock": [1, 203, 206, 208, 209, 211], "guarante": [1, 75, 76, 79, 93, 95, 130, 138, 147, 148, 149, 171, 179, 187, 195, 196, 203, 206, 207, 208, 209, 240, 244], "ha": [1, 75, 76, 78, 79, 81, 87, 88, 95, 100, 101, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 135, 137, 138, 141, 147, 148, 149, 150, 163, 179, 187, 191, 192, 194, 196, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 217, 221, 222, 225, 230, 233, 234, 236, 237, 243, 244], "privat": [1, 79, 87, 154, 169, 195, 197, 200, 201, 207, 220, 230, 239], "get": [1, 75, 87, 95, 98, 134, 154, 155, 183, 194, 201, 202, 203, 205, 206, 209, 210, 212, 214, 230, 232, 242, 244], "cuda": [1, 72, 75, 85, 87, 88, 94, 137, 138, 151, 153, 155, 164, 180, 201, 202, 204, 205, 207, 208, 209, 211, 219, 220, 226, 232, 233, 234, 240, 241], "involv": [1, 87, 150, 233, 238], "atom": [1, 72, 76, 81, 83, 100, 101, 102, 103, 104, 105, 106, 107, 187, 201, 203, 206, 208, 220, 224, 244, 246], "non": [1, 3, 18, 24, 33, 36, 37, 48, 63, 64, 69, 72, 73, 75, 76, 77, 79, 80, 81, 82, 87, 95, 102, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 135, 137, 139, 155, 162, 163, 180, 187, 193, 194, 196, 201, 206, 207, 208, 209, 211, 215, 220, 222, 232, 241, 243], "upon": [1, 84, 87, 130, 146, 163, 195, 204, 217, 225, 230], "complet": [1, 77, 95, 130, 146, 196, 197, 201, 206, 211, 212, 230, 234, 241, 244], "unlock": 1, "updat": [1, 72, 75, 82, 103, 105, 106, 179, 194, 196, 201, 207, 211, 226, 230, 232, 234, 239, 241, 244], "statu": [1, 217], "onc": [1, 72, 95, 134, 135, 201, 202, 208, 211, 212, 220, 230, 239, 241], "again": [1, 87, 196, 203, 211, 212, 220, 234], "becom": [1, 59, 60, 79, 95, 138, 206, 225, 230, 234, 238], "avail": [1, 74, 77, 81, 82, 87, 88, 98, 130, 132, 137, 138, 139, 140, 141, 142, 151, 155, 168, 170, 172, 173, 174, 187, 191, 192, 193, 196, 201, 202, 204, 206, 207, 209, 211, 212, 220, 222, 230, 233, 234, 236, 238, 239], "within": [1, 2, 4, 79, 82, 93, 130, 135, 137, 147, 148, 149, 151, 154, 196, 201, 205, 206, 208, 211, 222, 237, 238, 239], "select": [1, 72, 74, 92, 132, 167, 186, 193, 202, 204, 206, 211, 226, 230, 233, 234, 244], "from": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 92, 93, 95, 98, 100, 101, 102, 104, 107, 119, 120, 122, 125, 130, 131, 132, 135, 137, 138, 139, 140, 141, 142, 147, 148, 149, 151, 153, 154, 155, 165, 168, 169, 172, 175, 176, 178, 179, 180, 183, 187, 188, 189, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 221, 222, 226, 230, 232, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244], "next": [1, 230, 232, 234, 241, 244], "step": [1, 4, 201, 203, 204, 209, 211, 230, 232, 233, 234, 239], "develop": [1, 88, 92, 147, 201, 204, 206, 208, 211, 214, 217, 219, 221, 226, 231, 232, 233, 234], "functor": [1, 2, 11, 12, 13, 14, 20, 21, 22, 26, 27, 30, 31, 32, 33, 34, 36, 37, 40, 42, 45, 48, 67, 69, 85, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 137, 143, 144, 145, 146, 147, 148, 149, 150, 153, 155, 191, 192, 201, 203, 205, 206, 211, 238, 239, 241, 243], "desir": [1, 13, 14, 20, 48, 67, 69, 77, 100, 101, 102, 107, 149, 164, 179, 196, 207, 211, 217, 225, 230, 232, 233, 234], "type": [1, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 35, 36, 40, 45, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 93, 95, 96, 98, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 130, 132, 138, 139, 141, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 169, 175, 178, 179, 180, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 219, 221, 222, 224, 225, 227, 232, 234, 237, 238, 239, 242], "devicetyp": [1, 130, 138], "respect": [1, 21, 26, 27, 76, 122, 141, 172, 179, 180, 184, 185, 187, 198, 201, 206, 211, 221, 222], "x": [1, 72, 140, 141, 183, 184, 185, 191, 193, 198, 203, 207, 209, 211, 219, 220, 225, 227, 237, 241], "idx": [1, 237], "just": [1, 2, 75, 87, 88, 95, 130, 138, 150, 176, 180, 183, 194, 202, 207, 209, 211, 212, 214, 217, 220, 232, 236, 239], "give": [1, 88, 95, 195, 202, 203, 207, 208, 209, 211, 217, 221, 222, 232], "argument": [1, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 35, 36, 40, 45, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 75, 76, 77, 79, 88, 93, 95, 98, 102, 104, 130, 131, 132, 133, 135, 141, 146, 148, 149, 152, 153, 154, 155, 157, 159, 161, 168, 178, 179, 180, 186, 187, 188, 191, 192, 193, 195, 200, 201, 207, 210, 211, 215, 217, 221, 238, 240], "state_argu": 1, "state_idx": 1, "equidistribut": 1, "uint32_t": [1, 81, 191, 192, 215], "urand": 1, "For": [1, 2, 37, 75, 76, 81, 95, 122, 130, 133, 138, 139, 142, 153, 156, 158, 160, 164, 180, 186, 187, 191, 193, 194, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 219, 221, 222, 228, 230, 234, 238, 239, 240], "32": [1, 2, 130, 201, 203, 211, 234], "bit": [1, 72, 74, 87, 89, 130, 187, 192, 205, 207, 209, 210, 211], "unsign": [1, 74, 75, 76, 77, 80, 103, 106, 130, 139, 187, 210, 211, 240], "integ": [1, 59, 60, 75, 76, 81, 85, 88, 95, 130, 139, 141, 153, 186, 187, 201, 207, 209, 211, 237], "three": [1, 75, 87, 88, 141, 146, 194, 195, 196, 201, 204, 206, 207, 209, 211, 212, 230, 233, 238], "option": [1, 72, 75, 76, 81, 85, 95, 122, 130, 132, 147, 148, 149, 151, 187, 195, 196, 198, 201, 202, 203, 204, 207, 211, 212, 230, 232, 233, 234, 238, 240, 242, 243], "shown": [1, 55, 87, 122, 179, 201, 206, 238], "first": [1, 4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 74, 75, 76, 79, 84, 87, 93, 95, 128, 130, 135, 154, 164, 165, 181, 186, 187, 191, 192, 193, 196, 198, 201, 203, 205, 206, 207, 211, 214, 215, 217, 230, 237, 238, 241], "default": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 84, 85, 88, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 131, 132, 137, 138, 143, 144, 145, 148, 149, 151, 153, 154, 155, 165, 169, 177, 180, 181, 182, 183, 184, 185, 187, 191, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204, 207, 212, 217, 220, 221, 225, 227, 230, 234, 238, 242], "over": [1, 34, 48, 67, 68, 72, 81, 85, 87, 95, 130, 151, 152, 154, 156, 157, 158, 159, 160, 161, 191, 192, 194, 198, 201, 207, 209, 210, 211, 212, 217, 233, 236, 238, 243], "possibl": [1, 11, 17, 22, 28, 29, 30, 35, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 76, 82, 87, 95, 133, 148, 155, 187, 195, 202, 203, 205, 207, 208, 209, 210, 211, 217, 221, 222, 225, 226, 230, 233, 239], "data": [1, 72, 74, 75, 76, 77, 79, 80, 81, 82, 95, 98, 130, 131, 132, 137, 146, 165, 169, 175, 179, 180, 194, 198, 201, 202, 204, 205, 206, 207, 208, 209, 210, 219, 220, 222, 227, 230, 236, 237, 238, 239, 241, 242, 243, 244, 246], "defin": [1, 21, 33, 42, 65, 72, 76, 78, 83, 87, 88, 93, 98, 100, 101, 102, 104, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 148, 149, 151, 153, 154, 157, 159, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 187, 188, 189, 191, 192, 196, 199, 200, 201, 203, 206, 207, 211, 215, 222, 233, 234, 236, 237, 242, 245], "abov": [1, 86, 130, 139, 141, 194, 196, 201, 204, 205, 207, 209, 210, 211, 222, 234, 238, 239, 244], "And": [1, 72, 108, 203, 213, 243], "also": [1, 11, 17, 25, 28, 29, 30, 35, 42, 46, 51, 52, 56, 70, 71, 75, 76, 77, 78, 81, 84, 87, 95, 122, 130, 137, 138, 142, 147, 148, 154, 155, 162, 163, 165, 170, 173, 174, 183, 187, 194, 195, 196, 197, 198, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 225, 226, 230, 231, 232, 233, 234, 238, 241, 243], "64": [1, 2, 130, 207, 209, 211], "latter": [1, 95, 148, 187, 201, 206, 211, 234], "cover": [1, 76, 187, 207, 232, 233], "user": [1, 36, 39, 40, 41, 75, 76, 77, 81, 87, 90, 95, 128, 130, 131, 134, 135, 137, 147, 148, 149, 151, 155, 162, 163, 187, 189, 196, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 220, 221, 225, 230, 233, 239, 240, 244, 245], "more": [1, 76, 77, 78, 87, 95, 122, 133, 138, 147, 150, 163, 187, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 220, 221, 222, 238, 243, 244], "other": [1, 46, 75, 76, 77, 78, 82, 87, 93, 95, 135, 138, 147, 148, 149, 154, 156, 157, 158, 159, 164, 168, 179, 180, 181, 182, 183, 194, 196, 201, 203, 205, 206, 207, 208, 209, 210, 212, 217, 219, 220, 222, 226, 227, 230, 232, 234, 237, 239, 240, 243], "scalar": [1, 75, 76, 77, 78, 82, 98, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 148, 169, 180, 187, 191, 192, 194, 197, 198, 200, 201, 203, 207, 221], "uint64_t": [1, 191, 192], "int32_t": [1, 191, 192, 193], "normal": [1, 72, 194, 196, 207, 211, 222, 234], "distribut": [1, 72, 204, 210, 213, 220, 222, 234, 239], "view": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 93, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 133, 134, 135, 148, 149, 154, 167, 178, 179, 181, 182, 183, 184, 185, 186, 188, 194, 196, 198, 200, 201, 202, 204, 206, 207, 209, 215, 220, 221, 224, 227, 234, 236, 237, 238, 239, 240, 241, 246], "fill": [1, 6, 21, 24, 25, 28, 30, 35, 39, 40, 42, 191, 192, 198, 201, 203, 207, 211], "includ": [1, 2, 22, 34, 67, 68, 76, 77, 87, 88, 95, 100, 101, 102, 104, 107, 116, 122, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 146, 147, 148, 149, 163, 166, 168, 172, 173, 175, 176, 179, 180, 183, 184, 185, 187, 188, 189, 191, 192, 193, 195, 196, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 219, 221, 222, 227, 230, 232, 233, 234, 237, 240, 242, 245], "main": [1, 2, 76, 86, 88, 98, 116, 122, 131, 132, 133, 134, 135, 136, 137, 147, 148, 149, 168, 171, 173, 175, 180, 183, 187, 191, 192, 193, 196, 199, 200, 202, 205, 209, 211, 212, 227, 230, 237, 240, 241], "argc": [1, 2, 76, 86, 116, 122, 132, 133, 134, 135, 136, 137, 147, 148, 149, 168, 173, 175, 180, 183, 187, 191, 192, 193, 199, 200, 202, 205, 227], "argv": [1, 2, 76, 86, 116, 122, 132, 133, 134, 135, 136, 137, 147, 148, 149, 168, 173, 175, 180, 183, 187, 191, 192, 193, 199, 200, 202, 205, 227], "scopeguard": [1, 72, 135, 137, 215], "guard": [1, 133], "random_xorshift64_pool": [1, 2, 72], "random_pool": 1, "12345": 1, "total": [1, 77, 87, 155, 187, 194, 199, 200, 201, 202, 238], "1000000": [1, 180], "count": [1, 7, 33, 62, 74, 76, 77, 87, 95, 137, 139, 147, 148, 149, 152, 157, 159, 161, 187, 194, 201, 207, 210, 243], "parallel_reduc": [1, 72, 79, 87, 90, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 137, 144, 146, 150, 152, 155, 156, 157, 158, 159, 160, 161, 198, 199, 200, 201, 207, 208, 215, 238, 239, 240], "approximate_pi": 1, "kokkos_lambda": [1, 2, 76, 77, 79, 81, 116, 122, 130, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 168, 175, 187, 194, 198, 199, 200, 201, 203, 205, 207, 211, 227, 236, 237, 238, 239, 241, 243], "local_count": 1, "acquir": [1, 76, 87, 136, 187, 202, 203, 208, 211], "engin": [1, 196, 206, 208, 211, 213, 222], "auto": [1, 2, 4, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 78, 79, 81, 82, 95, 100, 102, 104, 132, 133, 137, 140, 142, 147, 148, 152, 155, 156, 157, 158, 159, 160, 161, 164, 167, 179, 180, 186, 187, 193, 198, 201, 205, 209, 210, 221, 236, 237, 238, 244], "drand": 1, "y": [1, 191, 203, 209, 211, 225, 237, 241], "do": [1, 2, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 75, 83, 87, 95, 130, 133, 134, 137, 138, 146, 150, 173, 187, 194, 195, 196, 198, 201, 202, 206, 207, 208, 209, 210, 212, 214, 217, 218, 221, 222, 230, 232, 237, 239, 240, 241, 243], "forget": 1, "releas": [1, 86, 87, 88, 134, 136, 175, 195, 196, 201, 204, 205, 206, 225, 226, 231, 232, 234], "printf": [1, 95, 97, 116, 122, 137, 147, 148, 149, 183, 191, 192, 198, 199, 200, 205], "pi": [1, 89, 140, 221], "f": [1, 87, 95, 137, 141, 154, 155, 165, 215, 232, 237, 238, 244], "n": [1, 2, 18, 24, 31, 63, 64, 74, 75, 77, 81, 82, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 130, 136, 137, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 173, 175, 176, 180, 183, 184, 185, 187, 191, 198, 199, 200, 201, 203, 205, 207, 209, 210, 211, 219, 240, 241, 243], "4": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 81, 82, 88, 95, 101, 130, 131, 138, 139, 140, 141, 142, 152, 155, 156, 157, 158, 159, 160, 161, 163, 166, 168, 170, 172, 173, 174, 175, 176, 183, 186, 187, 195, 199, 200, 209, 210, 213, 220, 221, 222, 224, 227, 230, 232, 234, 238, 240, 244, 246], "dstviewtyp": 2, "srcviewtyp": 2, "copy_functor": 2, "permuteviewtyp": 2, "copy_permute_functor": 2, "binsort": [2, 215], "valuesviewtyp": 2, "values_range_begin": 2, "values_range_end": 2, "keyviewtyp": 2, "binop1d": 2, "binop3d": 2, "viewtyp": [2, 75, 130, 178, 179, 186, 187, 211], "size_t": [2, 59, 60, 75, 76, 77, 78, 79, 82, 87, 128, 129, 137, 176, 181, 182, 183, 184, 185, 187, 191, 192, 193, 201, 205, 207, 209, 210, 211, 237], "begin": [2, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 78, 80, 82, 87, 128, 129, 151, 152, 153, 155, 157, 159, 161, 211, 230, 234, 237, 238, 245], "parallel": [2, 12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 77, 81, 83, 85, 87, 92, 93, 122, 130, 132, 137, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 194, 196, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 217, 219, 224, 236, 239, 241, 243, 244, 246], "teampolici": [2, 12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 70, 71, 72, 76, 85, 87, 95, 130, 143, 144, 145, 147, 148, 149, 152, 154, 156, 157, 158, 159, 160, 161, 187, 198, 201, 203, 207], "kernel": [2, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 79, 82, 85, 88, 95, 147, 153, 154, 155, 164, 175, 180, 187, 194, 196, 203, 205, 206, 207, 208, 211, 212, 219, 220, 221, 234, 240, 244, 246], "perform": [2, 4, 48, 67, 69, 76, 77, 79, 85, 88, 90, 95, 102, 109, 110, 111, 112, 121, 122, 124, 137, 148, 149, 154, 155, 175, 187, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 211, 213, 220, 222, 227, 230, 231, 233, 237, 238, 242, 246], "teamthreadrang": [2, 72, 85, 87, 147, 148, 160, 161, 198, 201, 203], "threadvectorrang": [2, 72, 85, 87, 147, 148, 149, 201], "kokkos_nestedsort": 2, "teammemb": [2, 95, 155, 201], "sort_team": 2, "t": [2, 19, 23, 24, 25, 35, 53, 54, 55, 56, 72, 75, 84, 87, 95, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 130, 137, 142, 146, 148, 149, 154, 155, 164, 169, 176, 179, 184, 185, 187, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 207, 208, 209, 210, 212, 215, 217, 220, 221, 222, 226, 230, 232, 244], "compar": [2, 12, 21, 26, 27, 36, 38, 39, 40, 41, 42, 61, 62, 76, 77, 88, 100, 101, 102, 132, 187, 209, 211, 221, 226, 232, 234], "comp": [2, 36, 37, 38, 39, 40, 41], "valueviewtyp": 2, "sort_by_key_team": 2, "keyview": 2, "valueview": 2, "sort_thread": 2, "sort_by_key_thread": 2, "intern": [2, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 81, 82, 86, 87, 88, 132, 133, 151, 155, 196, 201, 202, 203, 230, 238], "entir": [2, 75, 87, 137, 152, 183, 205, 207, 208, 210, 212, 230, 233, 234, 243], "thei": [2, 75, 78, 87, 88, 95, 130, 133, 134, 137, 138, 140, 147, 150, 153, 164, 180, 194, 195, 201, 202, 205, 207, 208, 209, 211, 217, 220, 226, 230, 231, 232, 233, 234, 236, 239, 243, 245], "mai": [2, 4, 75, 76, 77, 78, 79, 82, 87, 88, 95, 129, 130, 133, 134, 135, 137, 147, 148, 149, 155, 164, 166, 172, 173, 175, 179, 187, 191, 192, 194, 195, 196, 197, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 220, 221, 222, 226, 228, 230, 232, 234, 238, 239, 241, 242, 243, 244], "top": [2, 95, 195, 196, 201, 222, 228, 234], "lambda": [2, 88, 95, 137, 146, 147, 148, 201, 203, 205, 220, 221, 237, 238, 243], "vector": [2, 72, 73, 85, 88, 147, 148, 149, 152, 155, 158, 159, 160, 161, 164, 191, 192, 193, 198, 207, 208, 211, 215, 220, 237, 242], "lane": [2, 72, 85, 152, 158, 159, 160, 161, 191, 201, 208, 209], "either": [2, 36, 39, 40, 41, 75, 76, 80, 81, 85, 95, 114, 116, 118, 132, 133, 147, 148, 154, 180, 184, 185, 187, 193, 195, 196, 199, 200, 201, 202, 207, 211, 212, 217, 222, 232, 234, 244, 245], "loop": [2, 85, 88, 95, 152, 153, 194, 203, 205, 206, 209, 211, 220, 236, 238, 241, 243, 246], "sort_by_kei": 2, "while": [2, 46, 72, 76, 87, 95, 138, 152, 179, 185, 187, 194, 195, 196, 197, 201, 203, 204, 205, 206, 209, 210, 211, 212, 222, 234], "simultan": [2, 194], "appli": [2, 11, 30, 31, 39, 40, 41, 66, 69, 87, 95, 148, 154, 194, 196, 199, 200, 205, 207, 222, 231], "same": [2, 17, 18, 24, 26, 27, 31, 34, 37, 39, 41, 47, 51, 52, 55, 56, 64, 67, 68, 75, 76, 77, 78, 81, 82, 84, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 129, 130, 133, 135, 137, 141, 147, 148, 149, 154, 155, 156, 157, 158, 159, 164, 176, 179, 180, 187, 194, 196, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 220, 232, 233, 234, 238, 239, 240, 242, 244], "permut": 2, "element": [2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 82, 122, 135, 148, 149, 164, 165, 167, 172, 180, 181, 182, 183, 185, 187, 201, 203, 208, 211, 235, 238, 239, 242], "It": [2, 71, 75, 76, 77, 78, 87, 129, 130, 131, 132, 133, 137, 148, 149, 152, 173, 176, 187, 188, 191, 192, 194, 195, 196, 201, 203, 205, 206, 207, 209, 210, 211, 219, 220, 221, 222, 230, 234, 242, 243], "equival": [2, 39, 40, 41, 70, 71, 78, 93, 130, 137, 154, 186, 187, 201, 207, 209, 210, 211, 237, 242], "kei": [2, 81, 179, 209, 239], "tupl": [2, 151, 221, 242], "accord": [2, 35, 87, 103, 105, 106, 147, 148, 149, 225], "commonli": [2, 206], "entri": [2, 75, 77, 80, 95, 199, 200, 203, 207, 210, 230, 236], "row": [2, 80, 198, 203, 210, 211], "cr": [2, 72, 80], "compress": [2, 80, 211, 239], "spars": [2, 211, 219, 233, 246], "matrix": [2, 198, 210, 211], "requir": [2, 75, 76, 77, 81, 88, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 138, 139, 152, 156, 157, 158, 159, 160, 161, 179, 187, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 215, 217, 219, 220, 221, 222, 225, 229, 232, 234, 235, 238, 241, 242, 244], "extent": [2, 21, 75, 76, 77, 78, 80, 130, 156, 158, 160, 180, 181, 182, 183, 184, 185, 186, 187, 194, 207, 211, 227, 230, 236, 237, 243], "version": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 76, 84, 92, 130, 131, 132, 133, 135, 140, 141, 166, 168, 172, 179, 187, 195, 196, 205, 207, 209, 212, 220, 221, 222, 227, 230, 232, 233, 234], "take": [2, 76, 77, 78, 85, 87, 93, 95, 103, 105, 106, 130, 135, 138, 140, 148, 150, 155, 181, 182, 183, 194, 195, 200, 201, 202, 206, 207, 208, 209, 211, 215, 217, 221, 227, 232, 234, 236, 238, 241, 246], "object": [2, 11, 22, 30, 33, 75, 76, 79, 81, 86, 87, 88, 100, 101, 102, 104, 107, 108, 132, 133, 134, 135, 136, 138, 139, 152, 154, 162, 163, 183, 187, 193, 196, 200, 202, 203, 205, 207, 209, 211, 215, 222, 243], "order": [2, 16, 36, 37, 41, 44, 49, 52, 57, 58, 74, 76, 85, 86, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 136, 147, 148, 149, 151, 152, 157, 159, 161, 183, 187, 194, 195, 199, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 217, 219, 221, 230, 233, 234, 236, 239, 240, 241, 243], "oper": [2, 4, 11, 12, 13, 14, 17, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 51, 52, 53, 54, 56, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 85, 95, 97, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 130, 133, 138, 141, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 165, 169, 180, 181, 182, 183, 187, 189, 193, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 211, 221, 224, 227, 234, 235, 239, 244, 246], "should": [2, 4, 12, 21, 26, 27, 30, 55, 59, 60, 74, 75, 87, 93, 95, 119, 120, 122, 125, 130, 134, 135, 138, 147, 149, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 206, 210, 211, 212, 215, 217, 220, 221, 225, 226, 230, 232, 234, 239], "member": [2, 75, 77, 79, 81, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 131, 132, 137, 142, 147, 148, 149, 154, 156, 157, 158, 159, 169, 181, 182, 183, 188, 193, 195, 198, 200, 201, 205, 207, 211, 218, 228, 230, 233, 234, 243, 244], "accept": [2, 30, 31, 69, 85, 87, 165, 191, 192, 201, 202, 204, 211, 222, 232, 234, 238], "b": [2, 11, 12, 21, 22, 26, 27, 34, 36, 39, 40, 41, 42, 48, 69, 76, 78, 146, 147, 156, 157, 158, 159, 160, 161, 169, 176, 179, 187, 191, 192, 193, 201, 203, 207, 209, 211, 222, 225, 227, 244], "bool": [2, 12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 36, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 70, 71, 74, 75, 76, 77, 79, 81, 82, 84, 87, 93, 101, 130, 131, 132, 138, 149, 161, 168, 181, 182, 183, 187, 192, 193, 200, 207, 209, 215, 227, 239], "true": [2, 12, 13, 14, 17, 20, 21, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 62, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 93, 95, 101, 130, 131, 132, 133, 135, 138, 156, 157, 158, 159, 160, 161, 164, 176, 180, 181, 182, 186, 187, 192, 193, 194, 196, 200, 202, 203, 209, 211, 221, 227], "onli": [2, 4, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 93, 95, 130, 133, 137, 138, 146, 147, 148, 149, 154, 165, 170, 173, 179, 180, 187, 188, 191, 193, 194, 196, 197, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 217, 220, 222, 226, 227, 230, 232, 233, 234, 236, 239, 240], "goe": [2, 211, 230], "befor": [2, 35, 69, 74, 75, 76, 86, 100, 102, 133, 134, 135, 136, 154, 173, 180, 187, 201, 203, 204, 206, 207, 210, 211, 220, 230, 233, 239, 241, 244], "ascend": 2, "descend": [2, 36, 37], "intcompar": 2, "kokkos_funct": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 140, 141, 142, 147, 153, 166, 168, 175, 176, 205, 207, 209, 211, 215, 221, 243], "constexpr": [2, 4, 35, 48, 67, 69, 74, 75, 76, 77, 79, 81, 82, 84, 88, 116, 138, 139, 140, 142, 165, 167, 176, 181, 182, 183, 187, 191, 192, 209, 220], "preced": [2, 234], "larger": [2, 74, 76, 77, 155, 172, 183, 187, 194, 211, 214, 217], "final": [2, 72, 76, 79, 83, 87, 116, 122, 131, 132, 133, 135, 136, 147, 148, 149, 161, 168, 173, 175, 180, 183, 185, 187, 191, 192, 193, 197, 199, 200, 201, 204, 205, 207, 211, 215, 227, 236, 239, 240], "barrier": [2, 154, 208, 241], "access": [2, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 87, 89, 94, 119, 120, 125, 129, 130, 132, 137, 138, 154, 179, 180, 188, 194, 198, 201, 203, 205, 206, 207, 208, 210, 212, 213, 221, 232, 234, 236, 238, 240, 241, 242, 243, 246], "immedi": [2, 147, 196, 204, 211, 212, 241], "after": [2, 11, 15, 17, 18, 22, 24, 34, 47, 49, 50, 51, 52, 54, 55, 60, 66, 67, 68, 70, 71, 75, 77, 86, 87, 95, 132, 134, 135, 154, 173, 180, 184, 185, 193, 194, 196, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 221, 230, 231, 232, 233, 234, 240, 241, 244], "both": [2, 72, 75, 76, 79, 82, 87, 95, 108, 117, 118, 138, 164, 165, 179, 180, 187, 194, 195, 198, 201, 202, 203, 204, 206, 207, 209, 211, 219, 230, 231, 232, 233, 234, 238, 239], "global": [2, 83, 87, 152, 154, 157, 159, 161, 201, 211, 241], "scratch": [2, 76, 130, 154, 155, 187, 206, 208, 246], "memori": [2, 72, 73, 75, 76, 77, 79, 81, 82, 83, 88, 93, 94, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 146, 154, 155, 179, 181, 182, 183, 184, 185, 187, 188, 196, 198, 200, 204, 205, 209, 210, 212, 213, 219, 220, 221, 234, 239, 240, 241, 242, 244, 246], "space": [2, 4, 11, 22, 23, 24, 30, 38, 42, 47, 48, 53, 54, 55, 56, 67, 69, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 90, 96, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 129, 137, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 159, 161, 164, 179, 180, 184, 185, 187, 188, 198, 200, 201, 202, 203, 205, 212, 217, 219, 232, 234, 238, 239, 241, 242, 243, 244, 246], "biton": 2, "algorithm": [2, 37, 81, 87, 88, 90, 137, 172, 194, 196, 201, 202, 204, 206, 207, 208, 211, 217, 219, 221, 234, 236, 241, 242], "stabl": [2, 230], "mean": [2, 22, 34, 67, 68, 76, 81, 93, 95, 130, 133, 138, 146, 147, 150, 187, 189, 196, 201, 203, 206, 207, 208, 209, 210, 211, 212, 214, 220, 222, 239, 245], "repeat": [2, 149, 201, 232, 241, 244], "input": [2, 22, 34, 67, 68, 76, 77, 79, 95, 148, 149, 196, 198, 202, 203, 207, 211, 234, 238, 239], "correspond": [2, 76, 79, 87, 88, 118, 122, 135, 138, 165, 181, 182, 183, 186, 187, 201, 207, 208, 211, 217, 231, 232, 243], "might": [2, 88, 130, 149, 171, 193, 194, 201, 203, 204, 205, 206, 207, 210, 211, 220, 238, 245], "ani": [2, 27, 39, 40, 41, 75, 81, 83, 84, 85, 87, 88, 93, 95, 98, 128, 129, 130, 132, 133, 135, 137, 138, 141, 147, 164, 171, 180, 187, 192, 195, 196, 197, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 222, 230, 232, 233, 234, 240], "execspac": [2, 79, 130, 153, 164, 180, 211], "defaultexecutionspac": [2, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56, 76, 81, 85, 94, 127, 128, 129, 150, 151, 153, 164, 170, 187, 201, 202, 239], "teampol": 2, "teammem": 2, "typenam": [2, 4, 19, 20, 48, 63, 64, 74, 75, 77, 79, 81, 84, 87, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 154, 156, 158, 160, 175, 179, 180, 184, 185, 187, 203, 211, 237, 242], "member_typ": [2, 72, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 198, 201, 203], "10": [2, 12, 21, 24, 26, 27, 34, 36, 37, 39, 40, 41, 48, 66, 69, 70, 71, 77, 78, 82, 86, 116, 133, 134, 135, 149, 151, 180, 187, 196, 201, 205, 207, 211, 213, 224, 226, 232, 234], "rand_pool": 2, "13718": 2, "fill_random": [2, 72], "100": [2, 75, 88, 122, 149, 201, 203, 207, 208, 211, 240], "parallel_for": [2, 72, 76, 77, 79, 81, 87, 90, 95, 130, 137, 143, 146, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 168, 175, 187, 194, 201, 203, 205, 206, 207, 208, 211, 227, 236, 237, 238, 239, 240, 241, 243], "whole": [2, 154, 194, 196, 198, 210, 222, 243], "a_row_i": 2, "subview": [2, 72, 75, 76, 78, 79, 98, 167, 180, 183, 185, 187, 224, 238, 246], "league_rank": [2, 147, 148, 152, 154, 156, 157, 158, 159, 160, 161, 198, 201], "ahost": 2, "create_mirror_view_and_copi": [2, 179], "hostspac": [2, 72, 75, 87, 94, 179, 180, 183, 187, 200, 203, 211, 237], "cout": [2, 88, 130, 136], "j": [2, 80, 116, 152, 158, 161, 164, 201, 203, 206, 207, 211, 213, 238, 241, 243], "vectorlen": 2, "vector_length_max": [2, 155], "now": [2, 87, 130, 138, 150, 164, 180, 187, 193, 195, 201, 203, 205, 206, 209, 211, 215, 236], "column": [2, 80, 203, 207, 210, 211, 234], "a_col_i": 2, "deep_copi": [2, 72, 74, 75, 76, 81, 93, 98, 116, 130, 138, 146, 179, 187, 194, 203, 211, 241], "na": [2, 226, 234], "9": [2, 12, 21, 26, 27, 34, 36, 37, 39, 40, 41, 48, 66, 69, 70, 71, 78, 88, 196, 210, 220, 221, 222, 224, 226, 232, 234], "38": 2, "68": 2, "74": [2, 213], "76": 2, "83": [2, 221], "89": 2, "91": 2, "95": 2, "19": [2, 196, 226], "41": 2, "55": 2, "65": 2, "78": 2, "92": 2, "99": [2, 88, 201], "13": [2, 4, 21, 23, 24, 39, 40, 53, 56, 148, 211, 224, 232], "16": [2, 21, 77, 196, 203, 226, 234], "17": [2, 21, 84, 88, 133, 142, 148, 187, 196, 221, 226, 232, 233], "40": [2, 78], "44": [2, 232], "54": 2, "96": [2, 203], "18": [2, 21, 196, 212, 213, 226, 230, 232], "77": 2, "80": [2, 183], "82": 2, "94": 2, "14": [2, 21, 23, 88, 142, 196, 224, 226, 234], "34": [2, 53, 56, 154], "35": 2, "45": 2, "46": 2, "47": 2, "52": 2, "58": 2, "6": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 76, 77, 88, 140, 142, 149, 156, 158, 160, 180, 187, 205, 207, 220, 222, 224, 226, 230, 232, 246], "25": 2, "37": 2, "51": 2, "81": 2, "3": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 82, 87, 88, 116, 131, 132, 133, 135, 137, 140, 141, 142, 149, 154, 156, 158, 160, 172, 173, 176, 178, 180, 183, 184, 185, 186, 187, 195, 197, 198, 199, 212, 213, 214, 219, 220, 221, 222, 224, 227, 230, 232, 234, 238, 242, 246], "5": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 76, 77, 88, 95, 101, 116, 130, 138, 142, 151, 153, 154, 156, 158, 160, 167, 169, 178, 180, 183, 186, 187, 198, 201, 210, 213, 220, 221, 222, 224, 225, 226, 227, 232, 244, 246], "20": [2, 78, 88, 89, 130, 138, 139, 140, 150, 183, 187, 196, 212, 218, 221, 226, 234], "33": [2, 213], "39": 2, "60": [2, 211], "97": 2, "7": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 72, 76, 77, 88, 131, 132, 133, 135, 141, 172, 187, 196, 198, 206, 210, 212, 220, 221, 222, 224, 225, 226, 227, 230, 232, 234, 246], "8": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 88, 132, 135, 153, 155, 156, 158, 160, 181, 182, 183, 187, 194, 196, 202, 206, 207, 208, 211, 220, 221, 222, 224, 226, 232, 234, 242, 246], "15": [2, 4, 21, 25, 28, 30, 35, 42, 154, 178, 186, 207, 224], "31": [2, 78], "42": [2, 130, 150, 239], "86": 2, "29": [2, 196, 226], "56": 2, "63": 2, "90": [2, 210, 230, 237], "iter": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 78, 82, 85, 87, 147, 148, 149, 151, 153, 155, 187, 201, 205, 206, 207, 208, 209, 211, 215, 227, 236, 238, 241], "minimum": [3, 72, 77, 88, 97, 103, 105, 106, 108, 115, 116, 117, 118, 119, 120, 148, 149, 196, 197, 198, 226, 230], "modifi": [3, 4, 11, 12, 13, 14, 17, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 35, 36, 40, 45, 46, 48, 49, 51, 52, 55, 56, 59, 63, 67, 69, 70, 71, 75, 100, 101, 102, 122, 148, 149, 191, 192, 194, 195, 201, 203, 220, 222, 232, 242], "sequenc": [3, 26, 61, 74, 89, 201, 206, 208], "numer": [3, 83, 140, 141, 196, 204, 206, 212, 234, 238, 243], "partit": [3, 35, 47, 215], "kokkos_stdalgorithm": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 215], "datatyp": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 75, 76, 77, 79, 122, 187, 191, 227, 237, 242], "properti": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 76, 147, 148, 149, 155, 179, 184, 185, 187, 206, 207, 210, 211, 221], "qualifi": [4, 87, 205, 215, 217, 226], "past": [4, 16, 74, 82, 86, 87], "reason": [4, 95, 131, 155, 205, 207, 208, 209, 211, 212, 217, 222, 230, 240, 243], "taken": [4, 195, 198, 232], "becaus": [4, 141, 164, 176, 203, 205, 206, 207, 209, 211, 212, 220, 230, 241], "we": [4, 39, 40, 41, 76, 84, 87, 95, 133, 141, 153, 180, 187, 193, 195, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 226, 232, 236, 237, 239, 240], "chang": [4, 72, 75, 81, 133, 154, 171, 187, 195, 204, 205, 207, 209, 210, 211, 212, 217, 220, 222, 227, 229, 230, 231, 232, 234, 240], "itself": [4, 76, 77, 95, 130, 138, 150, 183, 187, 194, 196, 198, 204, 206, 210, 211, 212, 232, 243, 244], "without": [4, 72, 77, 86, 87, 95, 132, 146, 148, 171, 180, 184, 185, 195, 196, 197, 205, 209, 210, 211, 212, 215, 217, 220, 221, 222, 226, 238, 240, 241, 244], "dereferenc": [4, 11, 22, 30, 31, 86, 243], "must": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 75, 76, 77, 78, 81, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 128, 129, 132, 134, 135, 137, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 163, 179, 184, 185, 186, 187, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 210, 211, 212, 220, 222, 230, 231, 232, 233, 234, 238, 239, 241, 244], "done": [4, 37, 54, 69, 87, 95, 138, 196, 201, 202, 209, 211, 212, 217, 230, 232, 239], "execut": [4, 11, 22, 23, 24, 30, 38, 42, 47, 48, 53, 54, 55, 56, 67, 69, 72, 75, 76, 79, 82, 83, 86, 87, 93, 94, 95, 103, 105, 106, 122, 127, 128, 129, 132, 134, 135, 136, 137, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 169, 170, 173, 174, 179, 180, 185, 187, 188, 193, 194, 202, 203, 204, 205, 209, 212, 217, 219, 220, 222, 225, 230, 233, 234, 238, 243, 244, 246], "rank": [4, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 77, 78, 82, 85, 87, 116, 132, 147, 148, 151, 154, 156, 158, 160, 178, 180, 183, 184, 185, 186, 187, 201, 202, 211, 212, 215, 227, 237, 238, 239], "layoutleft": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 78, 82, 98, 180, 184, 185, 187, 203, 211, 227, 238], "layoutright": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 98, 180, 184, 185, 187, 203, 207, 210, 211, 238], "layoutstrid": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 76, 98, 187, 210, 211, 237], "ke": [4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56], "view_typ": [4, 21, 25, 28, 30, 35, 42, 75, 178], "proper": [4, 86, 196, 203, 212], "content": [4, 72, 75, 104, 132, 148, 149, 165, 184, 185, 203, 205, 207, 211, 222, 239, 241, 244], "itc": 4, "read": [4, 11, 21, 22, 67, 68, 104, 130, 194, 203, 206, 207, 210, 211, 240], "iteratortyp": [4, 12, 13, 14, 19, 20, 21, 23, 24, 26, 27, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 53, 56, 59, 62, 63, 64, 69, 70], "difference_typ": [4, 19, 20, 63, 64, 84], "last": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 75, 76, 82, 135, 177, 182, 187, 201, 202, 203, 206, 210, 211, 217, 230, 234], "need": [4, 28, 29, 30, 76, 77, 84, 87, 95, 129, 130, 133, 137, 139, 141, 148, 149, 164, 179, 180, 187, 195, 196, 197, 201, 202, 203, 204, 207, 209, 210, 212, 217, 220, 225, 230, 231, 232, 234, 239, 241, 242], "go": [4, 86, 147, 148, 149, 151, 153, 154, 155, 195, 196, 201, 206, 210, 211, 217, 230, 232], "calcul": [4, 143, 144, 145, 155, 183, 201, 203, 211, 237, 243], "neg": [4, 18, 24, 33, 63, 64, 135, 193, 194, 209], "it1": [4, 25, 28], "it2": [4, 25, 28], "stepsa": 4, "equal": [4, 7, 12, 19, 25, 26, 27, 33, 38, 43, 44, 49, 50, 53, 54, 58, 61, 62, 65, 71, 76, 88, 93, 100, 101, 102, 132, 151, 164, 186, 187, 191, 192, 202], "stepsb": 4, "swap": [4, 59, 65, 176, 201, 211], "point": [4, 25, 28, 29, 75, 76, 77, 79, 82, 87, 95, 100, 102, 104, 130, 135, 138, 141, 152, 168, 179, 187, 195, 196, 205, 206, 209, 210, 211, 220, 230, 234, 238, 239, 240], "current": [4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 74, 76, 77, 81, 87, 88, 95, 100, 101, 104, 107, 130, 138, 141, 164, 169, 187, 191, 192, 196, 201, 207, 208, 209, 210, 211, 212, 219, 220, 230, 233, 234, 239], "api": [4, 55, 81, 88, 134, 135, 154, 171, 202, 214, 217, 219, 228, 238, 244], "doe": [4, 47, 75, 77, 81, 87, 92, 95, 127, 132, 137, 146, 148, 149, 168, 176, 179, 187, 195, 196, 202, 203, 206, 210, 211, 212, 217, 221, 222, 226, 227, 230, 233, 234], "fenc": [4, 72, 87, 90, 130, 138, 147, 148, 154, 164, 185, 187, 205, 206, 211, 212, 217, 241], "min_el": [5, 39, 41, 172], "max_el": [5, 172], "minmax_el": [5, 172], "copi": [6, 11, 16, 17, 18, 23, 24, 46, 50, 51, 54, 55, 58, 60, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 93, 95, 98, 133, 137, 138, 147, 154, 155, 164, 169, 179, 181, 182, 183, 185, 187, 197, 199, 200, 203, 205, 206, 207, 212, 221, 222, 227, 232, 234, 239, 241, 243], "copy_if": 6, "copy_n": 6, "copy_backward": 6, "move": [6, 44, 49, 52, 76, 77, 81, 133, 138, 154, 155, 181, 182, 183, 187, 195, 217, 227, 235], "move_backward": 6, "fill_n": 6, "transform": [6, 67, 68, 69, 208, 222], "generate_n": 6, "remov": [6, 52, 88, 131, 135, 140, 141, 142, 171, 195, 202, 215, 220, 230, 232], "remove_if": 6, "remove_copi": [6, 51], "remove_copy_if": 6, "replac": [6, 35, 46, 51, 52, 54, 55, 56, 70, 71, 89, 100, 101, 102, 104, 107, 131, 132, 142, 196, 202, 203, 205, 207, 215, 220, 245], "replace_if": [6, 55], "replace_copi": [6, 55], "replace_copy_if": 6, "swap_rang": 6, "revers": [6, 16, 44, 58, 74, 136, 139], "reverse_copi": 6, "rotat": [6, 60, 139], "rotate_copi": 6, "shift_left": [6, 64], "shift_right": 6, "uniqu": [6, 76, 77, 130, 146, 187, 196, 202, 206, 212, 246], "unique_copi": 6, "adjacent_find": 7, "count_if": 7, "all_of": [7, 192, 209], "any_of": [7, 192, 209], "none_of": [7, 192, 209], "find": [7, 37, 39, 40, 41, 74, 81, 82, 87, 139, 194, 196, 197, 198, 205, 207, 212, 218, 219, 220, 230], "find_if": 7, "find_if_not": 7, "find_end": 7, "find_first_of": 7, "for_each": [7, 31], "for_each_n": [7, 62], "lexicographical_compar": 7, "mismatch": [7, 61, 211], "search": [7, 12, 13, 14, 19, 20, 25, 26, 27, 28, 29, 35, 36, 45, 53, 62, 70, 74, 81, 132, 202, 217, 244], "search_n": 7, "adjacent_differ": 8, "reduc": [8, 69, 72, 82, 83, 87, 95, 96, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 130, 148, 149, 154, 197, 201, 204, 206, 208, 210, 211], "exclusive_scan": [8, 34, 67], "inclusive_scan": 8, "transform_reduc": 8, "transform_exclusive_scan": [8, 68], "transform_inclusive_scan": 8, "is_partit": [9, 47], "partition_point": 9, "partition_copi": 9, "is_sort": [10, 37, 82], "is_sorted_until": 10, "executionspac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 93, 130, 138, 153, 164, 180, 201, 203, 211, 240], "inputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 46, 54, 55, 67, 68], "outputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 54, 55, 67, 68], "exespac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "first_from": [11, 15, 16, 17, 18, 22, 34, 50, 51, 54, 55, 60, 66, 67, 68, 71], "last_from": [11, 15, 16, 17, 22, 34, 50, 51, 54, 55, 60, 66, 67, 68, 71], "first_dest": [11, 22, 34, 67, 68], "binaryop": [11, 22, 48], "bin_op": [11, 22, 34, 68], "string": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 87, 88, 128, 130, 132, 133, 135, 146, 147, 148, 149, 162, 163, 166, 187, 188, 196, 202, 211, 215, 245], "label": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 87, 128, 130, 138, 146, 147, 148, 149, 162, 163, 179, 183, 184, 185, 187, 188, 211, 215, 232, 234], "datatype1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "datatype2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "view_from": [11, 15, 16, 17, 18, 22, 34, 46, 50, 51, 54, 55, 60, 67, 68], "view_dest": [11, 22, 34, 50, 51, 60, 67, 68], "written": [11, 22, 34, 67, 68, 101, 130, 138, 201, 203, 206, 222, 231, 243], "second": [11, 36, 37, 38, 40, 42, 72, 74, 93, 95, 135, 146, 164, 165, 177, 186, 191, 192, 193, 194, 198, 201, 203, 205, 206, 207, 211], "comput": [11, 22, 34, 37, 59, 67, 68, 139, 148, 196, 198, 199, 200, 201, 204, 207, 208, 209, 211, 212, 213, 220, 222, 230, 233, 237, 238, 243], "differ": [11, 73, 75, 76, 80, 81, 82, 87, 88, 95, 98, 137, 151, 153, 179, 180, 195, 196, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 222, 230, 232, 234, 239, 241], "adjac": 11, "pair": [11, 12, 21, 22, 26, 27, 36, 40, 41, 42, 46, 66, 69, 72, 74, 81, 92, 172, 178, 186, 198, 210, 215, 234], "write": [11, 22, 34, 58, 66, 67, 68, 84, 95, 102, 107, 130, 138, 196, 197, 201, 204, 206, 207, 209, 210, 211, 219, 222, 230, 234], "them": [11, 58, 87, 130, 194, 195, 196, 201, 203, 205, 207, 208, 209, 211, 230, 239], "binari": [11, 12, 21, 22, 26, 27, 34, 36, 37, 40, 48, 61, 62, 66, 69, 70, 71, 72, 108, 122, 195, 198, 207, 211, 220], "instanc": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 75, 76, 87, 93, 95, 130, 133, 137, 138, 146, 153, 155, 164, 180, 184, 185, 187, 188, 193, 195, 198, 205, 207, 210, 211, 217, 220, 221, 243], "name": [11, 15, 16, 18, 22, 23, 24, 32, 34, 47, 48, 53, 54, 66, 67, 68, 69, 72, 76, 77, 79, 87, 93, 95, 130, 132, 133, 137, 138, 147, 148, 149, 150, 154, 187, 194, 195, 196, 199, 201, 202, 205, 206, 215, 217, 219, 220, 222, 234, 236, 237, 240, 245], "implement": [11, 15, 16, 18, 22, 23, 24, 32, 34, 47, 48, 53, 54, 66, 67, 68, 69, 73, 76, 82, 85, 89, 92, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 133, 139, 141, 142, 148, 152, 157, 159, 161, 162, 163, 165, 167, 179, 186, 187, 188, 191, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 219, 220, 221, 230, 231, 234, 237, 241, 244], "debug": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 88, 128, 147, 148, 149, 187, 195, 196, 201, 211, 217, 219, 233, 234, 240], "purpos": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 85, 87, 95, 137, 187, 204, 206, 208, 210, 211, 214, 219, 222, 230], "adjacent_difference_iterator_api_default": 11, "adjacent_difference_view_api_default": 11, "_from": [11, 22, 71], "repres": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 74, 76, 85, 95, 130, 135, 138, 139, 150, 151, 169, 186, 187, 188, 206, 209, 210, 211, 222, 227], "valid": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 75, 76, 77, 79, 81, 83, 84, 93, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 129, 130, 132, 133, 147, 148, 149, 151, 152, 153, 155, 186, 187, 188, 196, 201, 203, 205, 206, 207, 208, 211], "check": [11, 16, 21, 22, 23, 25, 30, 32, 36, 40, 48, 53, 54, 69, 70, 71, 81, 84, 88, 130, 132, 137, 138, 139, 153, 168, 198, 202, 203, 211, 212, 217, 220, 230, 233, 234, 238], "mode": [11, 16, 22, 23, 30, 32, 40, 48, 53, 54, 69, 195, 203, 208, 209, 226, 232], "pass": [11, 12, 13, 14, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 35, 36, 39, 40, 41, 45, 46, 48, 51, 52, 55, 56, 61, 62, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 95, 130, 131, 132, 133, 135, 137, 140, 153, 186, 196, 202, 203, 204, 207, 210, 211, 212, 226, 232, 233, 234, 238, 239], "callabl": [11, 22, 48, 67, 69, 136, 168, 187, 191, 192, 195, 205], "value_typ": [11, 12, 13, 14, 17, 20, 22, 28, 29, 30, 32, 33, 35, 36, 40, 45, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 76, 82, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 148, 149, 169, 180, 187, 191, 192, 198, 200, 207, 227, 239, 241], "conform": [11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 33, 35, 36, 40, 45, 46, 48, 51, 52, 56, 67, 69, 70, 71], "return_typ": [11, 22, 32, 33, 69, 244], "assign": [11, 22, 23, 24, 32, 33, 49, 52, 72, 74, 77, 78, 82, 84, 85, 87, 93, 119, 120, 122, 130, 132, 133, 138, 147, 148, 154, 155, 169, 181, 182, 183, 191, 192, 194, 202, 203, 208, 210, 211, 230, 231, 239], "consecut": [12, 70, 71, 139, 155, 211, 239], "binarypredicatetyp": [12, 21, 26, 27, 42, 61, 62], "pred": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 38, 42, 45, 46, 47, 51, 52, 55, 56, 61, 62, 70, 71], "new": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 74, 75, 79, 81, 87, 88, 89, 95, 105, 129, 130, 132, 133, 138, 142, 150, 164, 179, 183, 184, 185, 186, 187, 189, 194, 195, 198, 201, 203, 204, 205, 206, 207, 211, 212, 217, 218, 221, 225, 227, 228, 230, 231, 232, 233, 240, 244], "teamhandletyp": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71], "teamhandl": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 152, 156, 157, 158, 159, 160, 161], "11": [12, 21, 26, 27, 34, 36, 37, 39, 40, 41, 48, 66, 69, 70, 71, 78, 195, 196, 207, 220, 224, 226, 232, 234], "12": [12, 21, 26, 27, 34, 36, 37, 39, 40, 41, 48, 66, 69, 70, 71, 72, 180, 196, 212, 213, 224, 226, 230, 239], "region": [12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 70, 71, 77, 85, 146, 147, 148, 149, 162, 163, 201, 202, 203, 205, 206, 211], "when": [12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 70, 71, 74, 78, 81, 82, 86, 87, 88, 92, 95, 130, 135, 136, 137, 138, 148, 152, 155, 162, 163, 179, 181, 182, 183, 187, 193, 194, 195, 196, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 217, 218, 220, 221, 226, 227, 230, 234, 237, 238, 240, 241, 244, 245], "forward": [12, 13, 14, 19, 20, 21, 25, 26, 27, 28, 29, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 70, 71, 74, 133, 195, 203, 208, 221, 232, 239], "adjacent_find_iterator_api_default": 12, "adjacent_find_view_api_default": 12, "g": [12, 13, 14, 19, 20, 21, 23, 25, 26, 27, 28, 29, 32, 33, 35, 36, 40, 45, 46, 49, 50, 53, 57, 58, 59, 60, 63, 70, 71, 75, 76, 79, 85, 87, 88, 93, 128, 129, 132, 134, 138, 142, 146, 150, 155, 163, 179, 184, 185, 187, 191, 192, 195, 196, 201, 202, 205, 206, 207, 208, 211, 212, 217, 220, 225, 227, 232, 233, 234, 240], "c": [12, 13, 14, 19, 20, 21, 25, 26, 27, 28, 29, 34, 35, 36, 40, 45, 46, 48, 49, 50, 57, 58, 59, 60, 63, 69, 70, 71, 72, 75, 76, 77, 83, 84, 87, 89, 92, 98, 122, 130, 133, 135, 137, 138, 139, 140, 141, 142, 147, 150, 156, 158, 160, 168, 182, 187, 188, 191, 192, 193, 196, 197, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 217, 218, 220, 222, 227, 233, 237, 238, 241, 244], "associ": [12, 13, 14, 15, 16, 17, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 40, 43, 44, 45, 46, 48, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 76, 95, 108, 122, 130, 134, 138, 150, 154, 164, 186, 187, 198, 201, 205, 206, 207, 211, 220, 222, 239, 241, 243], "consid": [12, 21, 26, 27, 87, 189, 194, 195, 201, 205, 209, 210, 211, 217, 230, 231, 243], "convert": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 36, 40, 45, 46, 51, 52, 55, 56, 70, 71, 84, 93, 95, 130, 132, 135, 153, 165, 168, 187, 191, 192, 203, 209, 237, 238], "everi": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 30, 35, 36, 40, 45, 46, 51, 52, 55, 56, 70, 71, 76, 81, 95, 154, 156, 157, 158, 159, 180, 186, 187, 194, 195, 196, 198, 201, 205, 209, 210, 211, 212, 218, 222, 230, 231, 234, 240, 244], "If": [12, 18, 21, 24, 26, 35, 63, 64, 74, 75, 76, 78, 84, 87, 88, 101, 127, 128, 129, 133, 136, 137, 138, 147, 148, 149, 155, 168, 179, 180, 185, 186, 187, 194, 195, 196, 197, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 217, 218, 220, 221, 222, 225, 230, 231, 232, 238, 239, 241, 242, 243], "found": [12, 14, 25, 28, 29, 37, 74, 78, 81, 84, 100, 101, 103, 106, 122, 155, 194, 195, 196, 205, 206, 208, 209, 230, 234], "satisfi": [13, 14, 20, 28, 35, 45, 46, 47, 82, 148, 179, 221, 231], "target": [13, 14, 19, 25, 26, 27, 43, 44, 45, 49, 50, 58, 72, 75, 88, 95, 130, 147, 187, 196, 203, 204, 206, 208, 219, 220, 225, 234], "unari": [13, 14, 17, 20, 28, 29, 35, 45, 46, 51, 52, 55, 56, 66, 67, 69, 70, 71, 95, 141], "predic": [13, 14, 17, 20, 21, 27, 28, 29, 35, 42, 45, 46, 51, 52, 55, 56, 61, 62, 70, 71, 95], "inputiter": [13, 14, 25, 28, 29, 30, 31, 35, 43, 50, 51, 57, 58, 60, 66, 71], "all_of_iterator_api_default": 13, "all_of_view_api_default": 13, "v": [13, 14, 17, 20, 30, 35, 45, 46, 51, 52, 55, 56, 67, 69, 70, 71, 77, 78, 80, 82, 137, 158, 165, 169, 184, 185, 186, 187, 203, 215, 222, 227, 241], "custompred": [13, 14, 20, 45], "your": [13, 14, 20, 36, 40, 75, 130, 195, 196, 197, 202, 207, 209, 211, 212, 214, 218, 220, 222, 225, 239], "empti": [13, 14, 26, 35, 39, 40, 41, 45, 75, 82, 215, 244], "fals": [13, 14, 21, 29, 35, 42, 45, 74, 77, 81, 101, 130, 132, 133, 134, 138, 149, 168, 179, 183, 187, 202, 209, 211, 221], "otherwis": [13, 18, 21, 24, 35, 45, 63, 64, 74, 75, 76, 77, 78, 81, 83, 84, 88, 93, 95, 101, 129, 130, 132, 155, 179, 187, 195, 202, 203, 207, 211, 212, 222, 232], "least": [14, 78, 81, 87, 88, 138, 139, 203, 205, 209, 217, 220, 222, 233], "one": [14, 39, 40, 41, 42, 75, 76, 78, 87, 95, 132, 135, 137, 138, 139, 141, 146, 154, 156, 157, 158, 159, 164, 166, 172, 173, 179, 181, 182, 184, 185, 186, 187, 191, 192, 194, 195, 196, 197, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 220, 222, 227, 230, 232, 234, 236, 237, 239, 243, 244], "any_of_iterator_api_default": 14, "any_of_view_api_default": 14, "sourc": [15, 16, 17, 18, 43, 44, 46, 50, 54, 58, 60, 65, 66, 71, 75, 76, 154, 168, 178, 187, 196, 206, 209, 212, 214, 222, 225, 228, 232, 234, 245], "destin": [15, 16, 17, 18, 46, 50, 54, 66, 71, 76, 79, 187, 203, 239], "first_to": [15, 17, 18, 50, 51, 54, 55, 60, 66, 71], "view_to": [15, 16, 17, 18, 54, 55], "copy_iterator_api_default": 15, "copy_view_api_default": 15, "anoth": [16, 17, 18, 42, 54, 55, 78, 87, 95, 139, 154, 156, 157, 158, 159, 179, 186, 194, 201, 202, 203, 208, 209, 210, 211, 234, 239, 243], "last_to": 16, "rel": [16, 49, 52, 164, 196, 208], "preserv": [16, 49, 52, 78, 87, 184, 185], "copy_backward_iterator_api_default": 16, "copy_backward_view_api_default": 16, "unarypredicatetyp": [17, 55, 56], "copy_if_iterator_api_default": 17, "copy_if_view_api_default": 17, "sizetyp": [18, 24, 31, 62], "copy_n_if_iterator_api_default": 18, "copy_n_if_view_api_default": 18, "count_iterator_api_default": 19, "count_view_api_default": 19, "prediat": 20, "count_if_iterator_api_default": 20, "count_if_view_api_default": 20, "iteratortype1": [21, 26, 27, 38, 42, 44, 61, 65, 69], "iteratortype2": [21, 26, 27, 38, 42, 44, 61, 65, 69], "first1": [21, 38, 42, 65, 69], "last1": [21, 38, 42, 65, 69], "first2": [21, 38, 42, 65, 69], "last2": [21, 38, 42], "view1": [21, 38, 42], "view2": [21, 38, 42], "binarypred": [21, 42, 70, 71], "applic": [21, 76, 77, 187, 195, 196, 197, 202, 203, 204, 206, 207, 208, 210, 211, 212, 218, 219, 220, 222, 230, 234, 237, 241, 243, 244, 246], "equal_iterator_api_default": 21, "equal_view_api_default": 21, "valuetype1": [21, 26, 27, 39, 40, 41, 42], "valuetype2": [21, 26, 27, 39, 40, 41, 42], "valuetyp": [21, 22, 26, 27, 28, 30, 34, 35, 48, 49, 50, 56, 62, 67, 68, 69, 81, 199, 200], "isequalfunctor": [21, 26, 27, 42], "corner": [21, 88, 217, 228], "case": [21, 37, 39, 40, 41, 75, 76, 87, 92, 95, 148, 149, 150, 179, 180, 187, 196, 201, 202, 203, 206, 207, 209, 210, 211, 212, 215, 217, 219, 220, 230, 236, 239, 241, 242, 243], "length": [21, 148, 151, 152, 155, 156, 157, 158, 159, 160, 161, 184, 185, 187, 198, 203, 211, 242], "somehow": [21, 25, 28, 30, 35, 39, 40, 42], "creat": [21, 28, 30, 42, 72, 75, 78, 79, 81, 83, 87, 95, 98, 133, 137, 162, 163, 164, 179, 180, 183, 186, 187, 188, 193, 194, 195, 196, 198, 203, 205, 206, 217, 220, 230, 231, 232, 234, 239, 243], "p": [21, 28, 30, 42, 77, 165, 184, 185, 196, 204, 211, 212, 215, 234, 238], "isequ": 21, "To": [21, 84, 95, 128, 129, 138, 147, 179, 180, 196, 197, 201, 202, 204, 205, 207, 210, 211, 212, 214, 220, 230, 231, 234, 237], "run": [21, 74, 88, 95, 135, 138, 147, 194, 195, 196, 198, 201, 203, 205, 206, 207, 208, 211, 212, 217, 220, 230, 232, 234, 240, 241], "explicitli": [21, 23, 24, 28, 30, 42, 53, 56, 76, 130, 137, 165, 187, 196, 198, 201, 202, 203, 205, 209, 210, 220, 222, 233, 234], "host": [21, 25, 72, 73, 74, 75, 76, 77, 80, 81, 82, 88, 130, 132, 137, 138, 141, 168, 170, 173, 179, 180, 187, 196, 201, 202, 203, 207, 208, 211, 212, 225, 230, 234, 235, 239, 240, 244], "assum": [21, 23, 24, 25, 28, 30, 42, 47, 53, 56, 75, 81, 87, 88, 95, 122, 132, 148, 149, 201, 203, 206, 207, 210, 211, 222, 236, 239], "defaulthostexecutionspac": [21, 94, 174, 202, 203], "overload": [22, 23, 24, 31, 34, 48, 53, 54, 55, 56, 61, 62, 69, 89, 90, 135, 141, 147, 148, 176, 195, 209, 210, 211, 215, 217, 243], "set": [22, 23, 24, 31, 34, 48, 53, 56, 61, 62, 69, 72, 74, 75, 76, 77, 81, 82, 83, 87, 89, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 132, 135, 141, 151, 153, 154, 155, 165, 169, 170, 173, 174, 177, 181, 182, 183, 187, 189, 191, 192, 193, 194, 195, 196, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 218, 220, 221, 225, 226, 230, 232, 233, 234, 237, 241, 244], "init_valu": [22, 34, 67, 68, 201], "binaryoptyp": [22, 34, 67, 68], "exclus": [22, 67, 149, 154, 168, 207, 210, 220, 222, 239], "prefix": [22, 34, 67, 68, 90, 201, 202, 207, 208, 220], "sum": [22, 34, 67, 68, 72, 80, 81, 90, 108, 122, 148, 157, 159, 161, 197, 198, 199, 200, 201, 207], "result": [22, 30, 31, 34, 48, 63, 64, 66, 67, 68, 69, 74, 78, 79, 88, 95, 101, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 137, 139, 148, 149, 155, 164, 178, 187, 197, 198, 199, 200, 201, 203, 205, 206, 208, 210, 211, 222, 234, 237, 238, 244, 245], "scan": [22, 34, 67, 68, 72, 74, 149, 154, 155, 201, 206, 208, 211, 239], "combin": [22, 34, 81, 87, 103, 105, 106, 122, 138, 148, 149, 187, 198, 201, 204, 208, 211, 222, 226, 232, 244], "th": [22, 34, 67, 68, 74, 186], "exclusive_scan_iterator_api_default": 22, "exclusive_scan_view_api_default": 22, "fill_iterator_api_default": 23, "fill_view_api_default": 23, "directli": [23, 24, 39, 40, 41, 84, 95, 130, 138, 195, 196, 201, 202, 203, 208, 209, 211, 217, 233], "22": [23, 226, 234], "openmp": [23, 24, 25, 28, 30, 42, 53, 56, 72, 85, 87, 88, 94, 153, 155, 180, 196, 202, 204, 207, 208, 211, 212, 215, 219, 220, 226, 232, 233, 234, 241], "fill_n_iterator_api_default": 24, "fill_n_view_api_default": 24, "someth": [24, 53, 56, 78, 87, 146, 150, 191, 192, 194, 196, 205, 206, 230, 243], "newvalu": [24, 53, 56], "find_iterator_api_default": 25, "find_view_api_default": 25, "cbegin": [25, 35, 58, 151], "cend": [25, 35, 58, 151], "enabl": [25, 28, 30, 42, 86, 88, 137, 138, 152, 157, 159, 161, 170, 173, 196, 201, 202, 207, 208, 211, 213, 220, 225, 230, 234, 240, 242, 244], "you": [25, 26, 27, 28, 30, 42, 75, 95, 130, 133, 137, 138, 141, 142, 150, 179, 183, 194, 195, 196, 197, 198, 201, 202, 203, 205, 206, 207, 209, 210, 212, 213, 215, 218, 220, 221, 222, 225, 228, 232, 243], "occurr": [26, 61], "s_first": [26, 27, 61], "s_last": [26, 27, 61], "s_view": [26, 27, 61], "via": [26, 27, 37, 49, 52, 69, 79, 85, 86, 95, 119, 120, 125, 128, 136, 138, 147, 148, 149, 152, 153, 155, 157, 159, 161, 187, 194, 196, 199, 201, 202, 203, 207, 211, 212, 230, 231, 232, 233, 237, 239, 244], "find_end_iterator_api_default": 26, "find_end_view_api_default": 26, "want": [26, 27, 75, 84, 137, 194, 202, 205, 206, 207, 209, 217, 220, 239], "s_": [26, 27], "find_first_of_iterator_api_default": 27, "find_first_of_view_api_default": 27, "custom": [28, 29, 39, 40, 41, 76, 87, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 148, 187, 201, 207, 211, 224, 230, 231, 238, 246], "predicatetyp": [28, 29, 30, 35, 46, 47], "find_if_iterator_api_default": 28, "find_if_view_api_default": 28, "operand": [28, 29, 30, 35, 48], "evalu": [28, 29, 42, 76, 130, 168, 187, 203, 207, 217, 230, 234, 238], "equalsvalu": 28, "m_valu": [28, 30], "equalsvalfunctor": 28, "find_if_not_iterator_api_default": 29, "find_if_not_view_api_default": 29, "unaryfunctortyp": [30, 31], "func": [30, 31, 136, 141], "for_each_iterator_api_default": 30, "for_each_view_api_default": 30, "signatur": [30, 147, 148, 149, 207, 238], "noth": [30, 87, 107, 127, 130, 138, 150, 168, 206, 207, 211, 222], "incrementvalsfunctor": 30, "increment": [30, 37, 194, 203, 206, 211], "for_each_n_iterator_api_default": 31, "for_each_n_view_api_default": 31, "generatortyp": 32, "generate_iterator_api_default": 32, "generate_view_api_default": 32, "form": [32, 33, 95, 130, 132, 134, 148, 149, 193, 204, 206, 208, 211, 222, 241, 244], "being": [32, 33, 81, 87, 89, 95, 122, 142, 143, 144, 145, 155, 166, 186, 194, 201, 206, 209, 211, 220, 230, 245], "size": [33, 49, 52, 72, 74, 75, 76, 77, 81, 82, 87, 90, 128, 129, 138, 143, 144, 145, 151, 153, 155, 181, 182, 183, 187, 191, 192, 201, 203, 207, 208, 209, 211, 238, 239, 242, 244], "ex": [33, 43, 44, 57, 65, 87, 93, 130, 202], "generate_n_iterator_api_default": 33, "generate_n_view_api_default": 33, "inclus": [34, 68, 149, 207, 210, 217, 222, 230, 233], "op": [34, 72, 79, 81, 84, 99, 122, 180, 194, 211], "first_last": [34, 67, 68], "inclusive_scan_iterator_api_default": 34, "inclusive_scan_view_api_default": 34, "appear": [35, 49, 52, 87, 139, 187, 194, 211, 222, 239], "don": [35, 72, 75, 87, 179, 187, 194, 195, 207, 217, 220, 226, 232], "is_partitioned_iterator_api_default": 35, "is_partitioned_view_api_default": 35, "isneg": 35, "zero": [35, 72, 76, 77, 78, 80, 95, 132, 138, 154, 187, 201, 210, 211, 212], "re": [35, 39, 40, 41, 87, 95, 130, 138, 150, 169, 196, 205, 207, 211, 244], "comparison": [36, 37, 39, 40, 41, 54, 72, 101, 141, 194, 197], "comparatortyp": [36, 37, 38, 39, 40, 41], "is_sorted_iterator_api_default": 36, "is_sorted_view_api_default": 36, "less": [36, 38, 39, 40, 41, 63, 64, 87, 139, 151, 164, 197, 209, 211, 226, 230, 238, 239], "than": [36, 38, 39, 40, 41, 63, 64, 74, 76, 77, 78, 87, 95, 130, 132, 137, 138, 139, 151, 153, 155, 186, 187, 194, 196, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 213, 217, 226, 230, 238, 243], "logic": [36, 39, 40, 41, 49, 52, 70, 72, 76, 108, 110, 111, 112, 187, 194, 196, 198, 201, 206, 208, 209, 211, 244], "largest": [37, 39, 41, 79, 82, 139, 172, 208], "is_sorted_until_iterator_api_default": 37, "is_sorted_until_view_api_default": 37, "is_same_v": [37, 87], "decltyp": [37, 63, 64, 84, 142, 178, 179, 180, 186, 191, 193, 210, 221], "lexicograph": 38, "lexicographical_compare_iterator_api_default": 38, "lexicographical_compare_view_api_default": 38, "similar": [38, 61, 62, 72, 76, 78, 82, 87, 95, 187, 195, 205, 206, 209, 217, 221, 234, 239], "max_element_iterator_api_default": 39, "max_element_view_api_default": 39, "sever": [39, 40, 41, 87, 89, 196, 206, 207, 219, 221, 231, 233, 234, 240], "customlessthancompar": [39, 40, 41], "put": [39, 40, 41, 195, 203, 207, 208, 230, 245], "smallest": [40, 41, 139, 172], "min_element_iterator_api_default": 40, "min_element_view_api_default": 40, "examin": [40, 47, 234], "minmax_element_iterator_api_default": 41, "minmax_element_view_api_default": 41, "itpair": 41, "mismatch_iterator_api_default": 42, "mismatch_view_api_default": 42, "exampl": [42, 75, 86, 88, 94, 95, 141, 150, 194, 196, 197, 198, 201, 203, 204, 205, 208, 210, 211, 212, 219, 220, 221, 222, 225, 234, 237, 238, 239, 240], "cpp": [42, 132, 137, 196, 215], "mismatchfunctor": 42, "mismatch_index": 42, "d_first": [43, 58], "outputiter": [43, 50, 51, 58, 60, 66, 71], "dest": [43, 44, 58, 60, 65, 66, 71, 79, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 180, 200], "move_iterator_api_default": 43, "move_view_api_default": 43, "distanc": [43, 44, 58, 65], "d_last": 44, "move_backward_iterator_api_default": 44, "move_backward_view_api_default": 44, "none_of_iterator_api_default": 45, "none_of_view_api_default": 45, "to_first_tru": 46, "view_tru": 46, "to_first_fals": 46, "view_fals": 46, "outputiteratortruetyp": 46, "outputiteratorfalsetyp": 46, "from_first": 46, "from_last": 46, "datatype3": [46, 66], "properties3": [46, 66], "view_dest_tru": 46, "view_dest_fals": 46, "partition_copy_iterator_api_default": 46, "partition_copy_view_api_default": 46, "NOT": [46, 137, 154, 156, 158, 160, 164, 207, 222, 232], "contain": [46, 49, 52, 74, 75, 81, 95, 132, 135, 147, 148, 149, 151, 154, 171, 179, 181, 182, 183, 184, 185, 187, 188, 195, 196, 198, 201, 202, 203, 205, 206, 209, 217, 219, 220, 222, 230, 234, 239, 243, 245], "locat": [47, 75, 76, 79, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 128, 129, 138, 187, 196, 201, 206, 208, 211, 212, 220, 234, 237, 242], "alreadi": [47, 76, 78, 81, 85, 87, 179, 180, 187, 195, 204, 207, 232, 236], "partition_point_iterator_api_default": 47, "partition_point_view_api_default": 47, "init_reduction_valu": [48, 69], "joiner": [48, 69], "reduct": [48, 69, 72, 79, 87, 90, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 148, 149, 154, 155, 198, 199, 200, 201, 206, 208, 215, 224, 241, 246], "account": [48, 68, 155, 218, 230], "join": [48, 69, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 148, 149, 197, 198, 200, 201, 206, 215, 218, 225, 230, 234, 239], "dure": [48, 86, 122, 153, 155, 186, 194, 201, 202, 203, 208, 211, 212, 230, 231, 233, 234, 236, 239, 243], "reduce_iterator_api_default": 48, "reduce_view_api_default": 48, "joinfunctor": [48, 69], "behavior": [48, 69, 75, 81, 95, 128, 129, 130, 132, 133, 149, 175, 187, 195, 205, 208, 209, 211, 212, 221], "commut": [48, 69, 122], "shift": [49, 52, 63, 64, 103, 106], "remain": [49, 52, 87, 129, 206, 222, 230], "physic": [49, 52, 74, 155, 201, 208, 211], "unchang": [49, 52, 81], "remove_iterator_api_default": 49, "remove_view_api_default": 49, "omit": [50, 51, 75, 76, 127, 128, 129, 187], "those": [50, 51, 74, 75, 78, 93, 95, 100, 101, 148, 165, 187, 195, 196, 201, 203, 205, 210, 211, 222, 232, 236, 239], "remove_copy_iterator_api_default": 50, "remove_copy_view_api_default": 50, "unarypred": [51, 52], "remove_copy_if_iterator_api_default": 51, "remove_copy_if_view_api_default": 51, "remove_if_iterator_api_default": 52, "remove_if_view_api_default": 52, "old_valu": [53, 54, 103, 106], "new_valu": [53, 54, 55, 56], "replace_iterator_api_default": 53, "replace_view_api_default": 53, "self": [53, 54, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 138, 217, 220], "explanatori": [53, 54, 166], "oldvalu": [53, 56], "mylabel": [53, 56], "replace_copy_iterator_api_default": 54, "replace_copy_view_api_default": 54, "replace_copy_if_iterator_api_default": 55, "replace_copy_if_view_api_default": 55, "replace_if_iterator_api_default": 56, "replace_if_view_api_default": 56, "ispositivefunctor": 56, "val": [56, 82, 102, 104, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 198, 200, 211], "reverse_iterator_api_default": 57, "reverse_view_api_default": 57, "reverse_copy_iterator_api_default": 58, "reverse_copy_view_api_default": 58, "wai": [59, 60, 75, 81, 83, 84, 87, 95, 189, 194, 195, 196, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 220, 222, 238, 239, 242, 243], "n_first": [59, 60], "n_locat": [59, 60], "rotate_iterator_api_default": 59, "rotate_view_api_default": 59, "identifi": [59, 60, 146, 154, 196, 201, 205, 212, 221, 222, 234, 236], "about": [59, 60, 85, 87, 88, 93, 130, 138, 141, 150, 164, 187, 195, 205, 206, 207, 208, 209, 211, 212, 215, 216, 230, 242], "rotate_copy_iterator_api_default": 60, "rotate_copy_view_api_default": 60, "search_iterator_api_default": 61, "search_view_api_default": 61, "search_n_iterator_api_default": 62, "search_n_view_api_default": 62, "posit": [63, 64, 74, 155, 186, 210, 244], "toward": [63, 64, 204, 206], "shift_left_iterator_api_default": 63, "shift_left_view_api_default": 63, "shift_right_iterator_api_default": 64, "shift_right_view_api_default": 64, "swap_ranges_iterator_api_default": 65, "swap_ranges_view_api_default": 65, "store": [66, 72, 75, 76, 77, 80, 81, 95, 100, 101, 102, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 133, 148, 187, 194, 197, 198, 201, 206, 207, 208, 209, 211, 236, 238, 239, 242], "first_from1": 66, "last_from1": 66, "first_from2": 66, "last_from2": 66, "source1": 66, "source2": 66, "unaryoper": 66, "unary_op": [66, 67, 68], "inputiterator1": 66, "inputiterator2": 66, "binaryoper": 66, "binary_op": [66, 67, 68], "transform_iterator_api_default": 66, "transform_view_api_default": 66, "unaryoptyp": [67, 68], "except": [67, 68, 70, 81, 128, 130, 134, 135, 136, 138, 165, 195, 207, 211, 212, 220, 222, 230, 234], "transform_exclusive_scan_iterator_api_default": 67, "transform_exclusive_scan_view_api_default": 67, "unaryop": 67, "transform_inclusive_scan_iterator_api_default": 68, "transform_inclusive_scan_view_api_default": 68, "first_view": 69, "second_view": 69, "binaryjoinertyp": 69, "binarytransform": 69, "binary_transform": 69, "unarytransform": 69, "unary_transform": 69, "product": [69, 76, 77, 88, 151, 187, 198, 201, 205, 210, 211, 220, 222, 233, 238], "along": [69, 87, 210, 222, 237], "transform_reduce_iterator_api_default": 69, "transform_reduce_view_api_default": 69, "value_type_a": 69, "value_type_b": 69, "value_type_": 69, "elimin": [70, 76, 77, 187], "group": [70, 201, 206, 208, 230, 234], "unique_iterator_api_default": 70, "unique_view_api_default": 70, "unique_copy_iterator_api_default": 71, "unique_copy_view_api_default": 71, "librari": [72, 84, 87, 89, 92, 132, 139, 141, 142, 165, 168, 172, 194, 195, 196, 202, 204, 206, 211, 212, 221, 230, 234, 239, 242, 243, 245, 246], "categori": [72, 189, 194, 196, 204, 206, 230, 233, 234], "descript": [72, 73, 83, 85, 88, 90, 98, 108, 122, 123, 130, 132, 194, 196, 202, 220, 232, 234], "rand": 72, "plu": [72, 123, 125, 128, 194, 201, 207, 238], "random_xorshift1024_pool": 72, "1024": [72, 77, 154, 199, 200, 201], "random_xorshift1024": 72, "sampl": [72, 199, 200], "fit": [72, 95, 201, 208, 222], "bitset": [72, 73, 81], "concurr": [72, 73, 81, 87, 130, 147, 148, 149, 164, 174, 196, 198, 206, 207, 208, 244], "dualview": [72, 73, 82, 87, 88, 189, 246], "mirror": [72, 73, 75, 78, 179, 211, 217], "dynamicview": [72, 73, 189], "dynam": [72, 76, 77, 85, 88, 95, 132, 153, 155, 184, 185, 187, 206, 211, 212, 244], "dynrankview": [72, 73, 180, 189], "determin": [72, 73, 76, 88, 151, 155, 158, 173, 186, 187, 191, 192, 196, 201, 202, 206, 207, 208, 211, 212, 220, 222, 230, 231, 233, 238, 239, 244], "runtim": [72, 73, 76, 78, 79, 85, 130, 132, 137, 155, 173, 187, 198, 201, 202, 203, 205, 208, 211, 217, 220, 230, 243], "errorreport": 72, "support": [72, 75, 78, 82, 84, 87, 88, 95, 130, 132, 133, 137, 138, 140, 141, 191, 192, 195, 196, 197, 201, 202, 203, 205, 207, 209, 211, 212, 220, 221, 222, 233, 234, 239, 241, 246], "error": [72, 137, 141, 166, 187, 203, 206, 210, 211, 212, 221, 226, 232, 234, 243], "record": [72, 87, 230], "code": [72, 77, 87, 88, 90, 95, 130, 137, 138, 140, 154, 162, 163, 168, 180, 187, 194, 195, 196, 197, 199, 201, 205, 206, 207, 208, 210, 211, 212, 217, 219, 220, 221, 222, 224, 226, 230, 231, 233, 234, 235, 238, 239, 243, 244, 245], "offsetview": [72, 73, 87, 189, 215], "indic": [72, 76, 78, 79, 80, 81, 87, 108, 118, 119, 123, 130, 143, 144, 145, 187, 194, 198, 201, 208, 210, 211, 222, 238, 244], "scatterview": [72, 73, 189, 235, 246], "transpart": 72, "replic": [72, 194, 203, 234], "strategi": [72, 87, 95, 132, 194, 202, 205], "scatter": [72, 79, 194], "staticcrsgraph": [72, 73, 211], "resiz": [72, 75, 77, 79, 82, 98, 184, 203], "graph": [72, 80, 83, 95, 246], "semant": [72, 76, 78, 82, 95, 187, 195, 201, 203, 207, 211, 217, 219, 239], "unorderedmap": [72, 73, 211], "map": [72, 73, 76, 80, 81, 187, 201, 202, 203, 208, 211, 236, 238, 239], "optim": [72, 88, 153, 194, 196, 201, 203, 204, 205, 206, 208, 211, 212, 220, 239, 242], "insert": [72, 208, 211], "deprec": [72, 73, 77, 87, 88, 95, 101, 131, 132, 135, 219, 220, 227, 230, 240, 244], "interfac": [72, 82, 87, 94, 95, 152, 157, 159, 161, 189, 195, 201, 203, 204, 206, 210, 211, 220, 222, 237, 243], "abort": [72, 97, 133, 168], "util": [72, 83, 130, 165, 196, 201, 206, 234, 237, 242], "caus": [72, 137, 141, 166, 168, 187, 195, 203, 206, 211, 221, 222], "abnorm": [72, 166, 168], "program": [72, 82, 93, 95, 98, 134, 135, 138, 150, 166, 168, 202, 203, 204, 205, 209, 210, 211, 213, 220, 234, 236, 239, 244, 245], "termin": [72, 133, 134, 135, 136, 166, 168, 221, 222], "dimens": [72, 73, 75, 76, 77, 78, 79, 87, 151, 167, 181, 182, 183, 184, 185, 186, 188, 201, 203, 237, 238], "atomic_exchang": [72, 99, 100, 104, 107, 194], "exchang": [72, 100, 101, 102, 194, 235], "old": [72, 75, 79, 81, 88, 100, 102, 133, 185, 194, 207, 211, 217], "atomic_compare_exchang": [72, 99, 101, 102, 194], "match": [72, 75, 76, 78, 82, 98, 147, 148, 149, 151, 165, 179, 181, 182, 187, 194, 196, 201, 211, 217, 227], "atomic_compare_exchange_strong": [72, 99, 194], "atomic_load": [72, 99, 102, 107, 194], "load": [72, 76, 87, 95, 102, 132, 187, 194, 201, 202, 207, 208, 209, 225, 232, 234], "atomic_": [72, 99, 194], "anyth": [72, 95, 171, 194, 195], "atomic_fetch_": [72, 99, 194], "variou": [72, 75, 83, 194, 196, 233, 234], "_fetch": [72, 99, 194], "atomic_stor": [72, 99, 102, 104, 194], "band": [72, 108, 122, 198, 201], "bor": [72, 108, 122, 198, 201], "Or": [72, 108, 244], "stl": [72, 83], "compat": [72, 73, 76, 77, 78, 82, 83, 88, 93, 130, 135, 138, 148, 149, 165, 180, 187, 191, 193, 196, 202, 203, 205, 211, 221, 224, 237], "work": [72, 73, 75, 76, 79, 81, 82, 83, 85, 87, 92, 122, 130, 133, 141, 146, 147, 148, 149, 155, 165, 180, 187, 192, 194, 195, 196, 198, 201, 202, 203, 206, 207, 208, 209, 210, 211, 216, 217, 221, 222, 226, 230, 232, 234, 235, 238, 239, 240, 243], "create_mirror": [72, 81, 98, 211], "relat": [72, 83, 172, 196, 201, 212, 230, 239], "create_mirror_view": [72, 179, 180, 203, 211, 215, 241], "cudaspac": [72, 87, 88, 94, 187, 203, 211, 215, 221, 241], "primari": [72, 84, 95, 195, 196, 202, 226, 230, 232, 233, 234], "cudauvmspac": [72, 87, 88, 94, 203, 211, 212, 215], "unifi": [72, 87, 138, 205, 220], "page": [72, 95, 122, 130, 138, 150, 196, 211, 213, 214, 216, 220, 221, 228], "migrat": [72, 138, 221, 240], "alloc": [72, 74, 75, 76, 77, 81, 82, 87, 93, 95, 98, 126, 127, 128, 129, 130, 138, 155, 164, 179, 181, 182, 183, 185, 187, 188, 194, 196, 201, 204, 205, 206, 208, 209, 211, 212, 217, 221, 239, 240, 241, 242], "cudahostpinnedspac": [72, 94, 187, 211], "memrori": 72, "pin": [72, 138, 196], "gpu": [72, 76, 88, 92, 132, 138, 179, 187, 196, 201, 202, 203, 204, 206, 208, 209, 211, 212, 215, 221, 225, 230, 234, 239, 240, 242], "executionpolici": [72, 96, 147, 148, 149], "concept": [72, 83, 95, 96, 108, 122, 130, 138, 148, 150, 154, 181, 182, 183, 195, 197, 200, 201, 204, 206, 208, 213, 246], "hpx": [72, 85, 87, 88, 94, 202, 215, 219, 220], "system": [72, 87, 95, 130, 138, 173, 195, 201, 202, 206, 208, 211, 212, 213, 222, 225, 230, 233, 234, 243], "mechan": [72, 87, 137, 150, 162, 201, 203, 204, 208, 211, 221, 222], "initargu": [72, 132, 133, 135, 215], "programmat": [72, 131, 132, 135], "how": [72, 76, 85, 122, 130, 138, 150, 151, 187, 194, 195, 196, 197, 201, 202, 203, 204, 206, 207, 208, 209, 212, 216, 218, 227, 239], "initializationset": [72, 131, 133, 135, 170, 173, 174, 202, 215], "is_array_layout": [72, 87, 215], "trait": [72, 75, 76, 77, 83, 84, 89, 93, 130, 140, 141, 178, 187, 201, 221, 227, 242], "detect": [72, 83, 96, 142, 181, 182, 183, 212, 217], "model": [72, 93, 95, 96, 156, 157, 158, 159, 160, 161, 181, 182, 183, 196, 203, 204, 207, 209, 211, 213, 220, 224, 239], "layout": [72, 75, 76, 77, 78, 79, 96, 98, 179, 181, 182, 183, 184, 185, 203, 204, 206, 210], "is_execution_polici": [72, 215], "is_execution_spac": [72, 87, 130, 215], "is_memory_spac": [72, 87, 138, 215], "memoryspac": [72, 76, 93, 96, 127, 128, 129, 130, 138, 187, 211, 242], "is_memory_trait": [72, 215], "memorytrait": [72, 75, 76, 87, 96, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 187, 194, 201, 211, 242], "is_reduc": [72, 215], "is_spac": [72, 130, 215], "fortran": [72, 76, 98, 181, 187, 196, 210, 211, 226, 235, 246], "arbitrari": [72, 76, 85, 98, 183, 187, 197, 200, 201, 208, 210, 211], "stride": [72, 75, 76, 77, 79, 98, 183, 203, 210, 237], "kokkos_fre": [72, 126, 128, 129, 203, 205, 240], "delloc": 72, "previous": [72, 100, 102, 104, 107, 126, 127, 129, 138, 187, 196, 197, 208, 245], "kokkos_malloc": [72, 126, 127, 129, 203, 205, 240], "kokkos_realloc": [72, 126, 127, 128, 203], "expand": [72, 95, 126, 207], "block": [72, 95, 126, 128, 146, 164, 196, 201, 203, 204, 210, 230, 241], "land": [72, 108, 109, 110, 112, 122, 198, 201, 234], "built": [72, 76, 83, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 187, 196, 197, 200, 201, 202, 211, 220, 234], "lor": [72, 108, 122, 198, 201], "maxloc": [72, 108, 119, 122, 125, 198, 201], "index": [72, 74, 76, 77, 78, 81, 82, 108, 114, 116, 117, 118, 119, 123, 125, 130, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 181, 182, 186, 187, 193, 194, 198, 201, 203, 205, 207, 210], "u": [72, 165, 191, 193, 196, 222, 227], "mdrangepolici": [72, 76, 85, 87, 116, 147, 148, 187, 215, 227, 235, 246], "multidimension": [72, 76, 83, 85, 98, 151, 181, 182, 183, 187, 198, 201, 203, 210, 224, 238], "min": [72, 103, 106, 108, 114, 116, 117, 118, 119, 120, 122, 123, 125, 142, 148, 172, 194, 198, 201, 215, 245], "minloc": [72, 108, 119, 122, 198, 201], "minmax": [72, 108, 120, 122, 172, 197, 198, 201, 215], "minmaxloc": [72, 108, 119, 122, 198, 201], "openmptarget": [72, 87, 88, 94, 196, 202], "targetoffload": 72, "analogu": 72, "bulk": [72, 208], "item": [72, 85, 130, 149, 155, 201, 206, 221, 230, 239, 243], "parallelfortag": [72, 90, 155], "tag": [72, 76, 85, 87, 143, 144, 145, 148, 155, 181, 182, 183, 187, 200, 201, 209, 230, 232, 235, 239], "team_siz": [72, 154, 155, 201], "contribut": [72, 79, 148, 149, 194, 198, 201, 219, 222, 231, 236, 241], "parallelreducetag": [72, 90, 155], "parallel_scan": [72, 90, 137, 145, 146, 161, 201, 207, 208, 239, 240], "simpl": [72, 122, 130, 177, 194, 198, 201, 203, 206, 207, 208, 209, 210, 211, 212, 237, 238, 239, 243], "pre": [72, 88, 149, 164, 191, 192, 196, 220, 230, 236], "postfix": [72, 208], "depend": [72, 85, 88, 95, 137, 138, 155, 156, 160, 168, 194, 195, 196, 197, 201, 205, 206, 207, 208, 209, 212, 238, 240, 241], "parallelscantag": [72, 90], "partition_spac": [72, 94], "split": [72, 85, 137, 152, 156, 157, 158, 159, 160, 161, 164, 201, 207, 244], "exist": [72, 75, 81, 84, 87, 88, 146, 148, 154, 164, 180, 184, 185, 195, 196, 206, 208, 209, 210, 211, 216, 217, 230, 231, 234, 239], "multipl": [72, 87, 88, 95, 108, 148, 149, 194, 196, 201, 203, 206, 207, 209, 211, 212, 217, 219, 220, 230, 233, 234, 239, 243], "perteam": [72, 154, 155, 156, 157, 158, 159, 161, 198, 201], "singl": [72, 95, 148, 152, 153, 156, 157, 158, 159, 161, 191, 192, 198, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 217, 238], "construct": [72, 74, 75, 76, 77, 79, 81, 82, 86, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 132, 135, 137, 138, 162, 177, 181, 182, 183, 184, 185, 187, 193, 197, 201, 203, 205, 206, 207, 209, 210], "per": [72, 95, 151, 155, 198, 201, 203, 207, 208, 210, 211, 220, 236, 239, 242], "perthread": [72, 155, 161, 201], "prod": [72, 108, 122, 198, 201], "rangepolici": [72, 85, 87, 130, 147, 148, 149, 150, 164, 201, 203, 207, 211, 241, 243], "1d": [72, 76, 147, 148, 149, 153, 155, 187, 203, 211, 237], "realloc": [72, 75, 79, 98, 129, 185, 211], "maintain": [72, 87, 195, 217, 218, 233], "reducerconcept": [72, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 200], "cpu": [72, 88, 130, 138, 179, 194, 196, 201, 202, 208, 209, 215, 221, 226, 232, 234], "aggreg": [72, 86, 201, 220], "spaceaccess": [72, 93, 130, 138, 179, 180, 211, 215], "facil": [72, 89, 98, 139, 142, 179, 189, 220, 230, 233], "queri": [72, 75, 132, 154, 155, 202, 211, 215], "rule": [72, 77, 195], "multi": [72, 76, 147, 148, 187, 198, 204, 212], "dimension": [72, 76, 147, 148, 187, 210, 211], "arrai": [72, 75, 76, 77, 78, 79, 80, 81, 82, 95, 98, 133, 135, 148, 151, 176, 181, 182, 183, 187, 194, 198, 199, 200, 201, 203, 210, 215, 224, 234, 235, 236, 239], "crate": [72, 234], "slice": [72, 98, 178, 242, 246], "teamthreadmdrang": [72, 85], "teamvectormdrang": [72, 85, 160], "teamvectorrang": [72, 85, 160, 161], "threadvectormdrang": [72, 85], "timer": [72, 97, 146], "basic": [72, 76, 87, 141, 150, 187, 196, 203, 204, 212, 213, 240], "like": [72, 75, 76, 87, 88, 95, 98, 130, 138, 147, 150, 180, 187, 194, 195, 196, 200, 202, 204, 205, 206, 207, 209, 210, 211, 212, 217, 221, 230, 236, 243], "act": [72, 87, 204, 210, 222], "comment": [73, 196, 217, 233], "offset": [73, 78, 201, 208, 211], "unord": [73, 81], "kokkos_bitset": 74, "safe": [74, 153, 203, 206, 207, 208, 211], "fix": [74, 81, 86, 195, 203, 211, 217, 221, 230, 231, 232, 242], "time": [74, 75, 76, 85, 87, 88, 93, 95, 130, 137, 149, 155, 177, 187, 191, 192, 194, 195, 196, 201, 206, 207, 208, 209, 210, 211, 212, 217, 220, 230, 231, 232, 234, 238, 240, 243], "paramet": [74, 75, 76, 77, 81, 85, 95, 98, 100, 101, 102, 103, 104, 107, 122, 127, 128, 129, 130, 132, 133, 138, 150, 154, 156, 158, 160, 164, 188, 196, 198, 202, 207, 209, 211, 212, 215, 221, 226, 227, 234, 238, 241, 243], "constant": [74, 78, 83, 89, 130, 139, 141, 142, 167, 187, 191, 192, 207], "bit_scan_revers": 74, "1u": [74, 210], "mask": [74, 192, 193, 202, 209], "direct": [74, 141, 179, 201, 202, 209, 210, 211, 217, 221, 222, 234], "move_hint_backward": 74, "2u": 74, "hint": [74, 76, 85, 95, 137, 153, 164, 187], "bit_scan_forward_move_hint_forward": 74, "0u": 74, "scan_direct": 74, "find_any_set_near": 74, "find_any_reset_near": 74, "increas": [74, 76, 81, 87, 187, 195, 203, 211, 220], "wa": [74, 75, 81, 88, 95, 100, 101, 129, 131, 132, 133, 137, 155, 162, 175, 179, 187, 191, 192, 196, 198, 201, 202, 203, 211, 212, 221, 222, 230, 232, 238, 240], "bit_scan_reverse_move_hint_forward": 74, "decreas": 74, "bit_scan_forward_move_hint_backward": 74, "bit_scan_reverse_move_hint_backward": 74, "constructor": [74, 75, 76, 77, 78, 79, 81, 82, 85, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 133, 135, 137, 147, 148, 149, 154, 155, 156, 158, 160, 169, 179, 181, 182, 183, 184, 185, 199, 200, 201, 207, 210, 211, 215, 221, 227], "arg_siz": 74, "reset": [74, 75, 79, 177, 196], "clear": [74, 81, 82, 87, 195], "test": [74, 88, 100, 101, 130, 141, 146, 196, 203, 207, 211, 212, 219, 220, 226, 230, 231, 232], "max_hint": 74, "happen": [74, 76, 77, 95, 100, 101, 187, 194, 201, 203, 205, 211, 230, 232, 234], "occur": [74, 92, 180, 202, 206, 212, 230, 237, 238, 240], "smaller": [74, 76, 77, 172, 186, 187, 203, 234], "find_any_unset_near": 74, "is_alloc": [74, 75, 76, 77, 79, 81, 82, 187], "rh": [74, 76, 77, 119, 120, 125, 130, 187, 191, 192, 199, 200, 227, 241], "dstdevic": 74, "srcdevic": 74, "dst": [74, 81, 87, 148, 207], "src": [74, 75, 79, 81, 87, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 138, 148, 169, 179, 180, 196, 199, 200, 207, 238], "kokkos_dualview": [75, 215], "refer": [75, 76, 77, 79, 82, 87, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 132, 137, 140, 141, 142, 155, 180, 186, 187, 191, 192, 193, 195, 196, 198, 200, 201, 202, 203, 204, 206, 207, 210, 212, 219, 221, 234, 243], "capabl": [75, 83, 138, 196, 201, 202, 203, 208, 209, 220, 227, 231], "well": [75, 76, 87, 93, 95, 122, 137, 146, 151, 153, 154, 163, 168, 187, 195, 196, 198, 201, 203, 204, 206, 207, 208, 210, 211, 230, 232, 233, 234, 239], "flag": [75, 88, 130, 135, 187, 196, 202, 207, 212, 218, 220, 226, 232, 234], "respons": [75, 202, 203, 206, 209, 222, 231, 233], "manual": [75, 196, 211, 212, 232, 238], "sync": 75, "method": [75, 76, 77, 78, 79, 81, 82, 87, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 196, 200, 205, 206, 207, 209, 211, 215, 238], "synchron": [75, 82, 138, 152, 164, 180, 201, 206, 208, 241], "conveni": [75, 79, 84, 130, 162, 203, 207, 210, 220], "capac": [75, 81, 201, 206], "appropri": [75, 80, 95, 122, 196, 201, 206, 207, 208, 210, 211, 212, 217, 222, 230, 231, 234], "underli": [75, 76, 77, 78, 82, 95, 162, 164, 187, 194, 203, 204, 206, 208, 211, 242], "four": [75, 211, 220, 230, 232], "separ": [75, 87, 179, 194, 196, 202, 207, 211, 217, 222, 230, 232, 242, 243], "intend": [75, 84, 87, 89, 165, 196, 201, 205, 211, 220, 225], "pleas": [75, 130, 138, 141, 142, 150, 195, 196, 205, 211, 213, 214, 225, 234], "document": [75, 87, 92, 130, 138, 147, 148, 150, 191, 192, 195, 196, 205, 217, 222, 230, 231, 238, 239], "suffic": 75, "most": [75, 76, 87, 95, 130, 135, 138, 139, 141, 150, 179, 183, 187, 196, 197, 198, 201, 203, 205, 206, 207, 208, 211, 212, 213, 226, 232, 234, 236, 238, 241], "m": [75, 87, 152, 153, 157, 159, 161, 187, 193, 198, 203, 210, 234, 241], "d_view": [75, 180], "execution_spac": [75, 76, 81, 87, 93, 130, 138, 153, 154, 155, 164, 180, 187, 201, 203, 207, 211, 239], "host_mirror_spac": [75, 76, 187, 215], "h_view": [75, 180], "arg1typ": [75, 82], "arg2typ": 75, "arg3typ": 75, "viewtrait": [75, 77], "data_typ": [75, 76, 77, 187, 227], "t_dev": 75, "hostmirror": [75, 76, 77, 81, 179, 187, 203, 241], "t_host": 75, "const_data_typ": [75, 76, 77, 187], "t_dev_const": 75, "t_host_const": 75, "array_layout": [75, 76, 87, 130, 180, 181, 182, 183, 184, 185, 187, 211, 227], "randomaccess": [75, 76, 187, 211], "t_dev_const_randomread": 75, "t_host_const_randomread": 75, "memoryunmanag": [75, 200, 237], "t_dev_um": 75, "unmanag": [75, 76, 79, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 183, 187, 188, 201, 203, 237, 246], "t_host_um": 75, "t_dev_const_um": 75, "t_host_const_um": 75, "t_dev_const_randomread_um": 75, "t_host_const_randomread_um": 75, "t_modified_flag": 75, "modified_flag": 75, "modified_host": 75, "modified_devic": 75, "unmodifi": 75, "n0": [75, 76, 79, 151, 156, 158, 160, 167, 178, 181, 182, 183, 184, 185, 186, 187, 210, 211, 227], "kokkos_impl_ctor_default_arg": [75, 184, 185], "n1": [75, 76, 79, 151, 156, 158, 160, 164, 167, 178, 181, 182, 183, 184, 185, 186, 187, 210, 211, 227], "n2": [75, 76, 79, 151, 156, 158, 160, 164, 178, 181, 182, 183, 184, 185, 186, 187, 211], "n3": [75, 76, 79, 156, 158, 160, 164, 181, 182, 183, 184, 185, 187, 211], "n4": [75, 76, 79, 181, 182, 183, 184, 185, 187], "n5": [75, 76, 79, 181, 182, 183, 184, 185, 187], "n6": [75, 76, 79, 181, 182, 183, 184, 185, 187], "n7": [75, 76, 79, 181, 182, 183, 184, 185, 187], "benefit": [75, 226], "nonzero": 75, "alloc_prop": [75, 79, 179, 184, 185, 187, 188], "arg_prop": [75, 79, 179, 184, 185], "view_alloc": [75, 76, 79, 98, 179, 184, 185, 187, 211], "avoid": [75, 128, 129, 130, 137, 195, 201, 205, 210, 211, 212, 217, 220, 221, 230, 232], "specifi": [75, 76, 77, 79, 81, 82, 85, 87, 88, 93, 122, 127, 128, 130, 131, 147, 148, 151, 154, 155, 175, 178, 179, 186, 187, 196, 200, 201, 202, 203, 205, 208, 212, 220, 221, 225, 233, 234, 242], "ss": 75, "ls": [75, 154, 244], "ds": 75, "ms": [75, 130, 138], "shallow": [75, 203, 207, 211], "sd": 75, "s1": [75, 130, 138, 183], "s2": [75, 130, 138, 183], "s3": [75, 183], "arg0": 75, "arg": [75, 76, 77, 84, 133, 137, 151, 153, 155, 164, 175, 178, 186, 187, 188, 202], "d_view_": 75, "h_view_": 75, "caller": 75, "sure": [75, 149, 196, 201, 207, 211, 212, 221], "ensur": [75, 86, 134, 135, 175, 195, 196, 202, 206, 209, 211, 217, 218, 220, 230], "mark": [75, 137, 205, 207, 211, 217, 222, 230], "impl": [75, 87, 152, 155, 195, 215, 220], "if_c": 75, "is_sam": [75, 84, 93, 179, 180, 203, 210, 211], "memory_spac": [75, 76, 81, 87, 93, 127, 128, 129, 130, 138, 179, 180, 187, 188, 203, 211, 227, 240], "get_device_sid": 75, "specif": [75, 85, 87, 92, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 130, 137, 138, 146, 154, 155, 164, 180, 191, 192, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 222, 230, 233, 234, 236], "afraid": [75, 217], "express": [75, 83, 87, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 139, 168, 193, 196, 208, 209, 210, 212, 217, 222, 240], "That": [75, 76, 87, 88, 146, 187, 201, 202, 203, 207, 210, 211, 212], "tell": [75, 95, 201, 205, 206, 207, 210, 212, 242], "what": [75, 88, 122, 130, 132, 138, 189, 191, 192, 195, 203, 206, 207, 209, 217, 227, 232, 239, 243], "els": [75, 88, 95, 101, 148, 149, 168, 211, 214, 217, 239, 244], "suppos": [75, 84, 209, 210, 239], "dual_view_typ": 75, "dv": 75, "my": [75, 87, 211], "dual": [75, 82, 220], "cudaview": 75, "host_device_typ": 75, "hostview": [75, 180], "enable_if": 75, "non_const_data_typ": [75, 76, 77, 187], "need_sync": 75, "been": [75, 87, 88, 92, 196, 201, 202, 203, 204, 206, 209, 210, 211, 217, 222, 234, 236, 243, 244], "In": [75, 76, 86, 87, 88, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 133, 137, 139, 148, 150, 152, 157, 159, 161, 168, 180, 187, 189, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 220, 222, 225, 230, 233, 234, 236, 237, 238, 239, 241, 243], "discard": [75, 79], "modif": [75, 204, 222, 241], "doesn": [75, 146, 148, 149, 179, 196, 201, 207, 212, 217, 221], "know": [75, 195, 196, 197, 203, 205, 210, 212, 218], "whether": [75, 76, 77, 82, 87, 88, 100, 130, 132, 138, 150, 155, 187, 188, 198, 205, 206, 207, 210, 211, 220, 222, 227, 230, 231, 233, 239, 244], "inlin": [75, 77, 81, 84, 137, 155, 201, 203, 207, 215], "clear_sync_st": 75, "With": [75, 76, 79, 86, 87, 187, 196, 201, 206, 220, 221, 240], "referenc": [75, 76, 77, 79, 100, 102, 104, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 186, 187, 203, 211, 230], "address": [75, 76, 79, 100, 101, 102, 103, 104, 105, 106, 107, 140, 187, 191, 193, 195, 196, 201, 204, 206, 208, 217, 221, 230, 234], "null": [75, 76, 77, 79, 82, 127, 129, 133, 135, 187], "pointer": [75, 76, 77, 79, 81, 82, 95, 127, 128, 129, 130, 133, 135, 154, 179, 183, 184, 185, 187, 188, 194, 203, 205, 207, 209, 215, 221, 239, 243], "span": [75, 76, 77, 82, 187], "span_is_contigu": [75, 76, 77, 180, 187], "contigu": [75, 76, 77, 85, 180, 181, 182, 187, 191, 210, 211, 239, 242], "ityp": [75, 76, 77, 157, 159, 161, 186, 187], "stride_": 75, "is_integr": [75, 157, 159, 161, 186], "r": [75, 180, 186, 187, 209, 213, 222, 227, 238, 241], "extent_int": [75, 76, 77, 187], "integr": [75, 76, 77, 88, 139, 142, 186, 187, 230, 232, 234], "kokkos_dynrankview": [76, 215], "potenti": [76, 77, 81, 88, 95, 138, 147, 148, 152, 154, 180, 187, 194, 200, 201, 204, 206, 207, 212, 220, 243], "compil": [76, 85, 87, 88, 93, 130, 137, 139, 141, 180, 187, 191, 192, 194, 195, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 220, 221, 222, 224, 225, 230, 233, 238, 239, 242, 243, 245], "Its": [76, 187, 203], "shared_ptr": [76, 187], "upper": [76, 151, 202, 211], "bound": [76, 77, 81, 85, 88, 201, 203, 211, 220, 234, 237], "layouttyp": [76, 77, 187], "fundament": [76, 84, 85, 95, 130, 138, 150, 187, 191, 192, 193, 204, 206, 208, 230, 239], "mandatori": [76, 133, 203], "scalartyp": [76, 187, 199, 200], "storag": [76, 80, 108, 127, 128, 129, 155, 183, 187, 206, 208, 209, 242], "come": [76, 87, 187, 194, 196, 204, 205, 207, 208, 210, 211, 212, 230, 238, 240, 243], "some": [76, 95, 128, 130, 137, 139, 140, 146, 154, 155, 156, 157, 158, 159, 164, 176, 183, 187, 196, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 221, 227, 230, 234, 236, 238, 239, 241, 243], "ones": [76, 131, 187, 195, 201, 206, 217, 243], "right": [76, 139, 151, 187, 202, 206, 207, 209, 210, 211, 217, 222, 228, 238], "left": [76, 95, 139, 151, 187, 202, 210, 211, 217, 227, 238], "laid": [76, 187, 203], "out": [76, 86, 134, 181, 182, 183, 187, 195, 196, 203, 205, 207, 209, 211, 222, 232, 238], "control": [76, 127, 128, 129, 135, 154, 162, 163, 187, 196, 201, 206, 207, 208, 209, 211, 212, 220, 221, 222, 234, 242], "finer": 76, "grain": [76, 211], "manner": [76, 92, 187], "trigger": [76, 138, 187], "textur": [76, 187, 211], "fetch": [76, 187, 211, 234], "restrict": [76, 77, 152, 184, 185, 186, 187, 203, 206, 207, 208, 211, 212, 220, 222, 234], "There": [76, 81, 87, 95, 130, 135, 138, 150, 164, 187, 189, 194, 195, 196, 203, 208, 209, 212, 230, 232, 238, 239, 241], "alias": [76, 81, 154, 187, 195, 202, 211], "scope": [76, 86, 134, 135, 162, 163, 187, 195, 205, 207, 208, 211, 221, 243], "enforc": [76, 137, 187, 201, 209, 212], "variabl": [76, 77, 79, 84, 103, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 147, 148, 154, 181, 182, 195, 196, 197, 198, 201, 207, 212, 217, 220, 221, 225, 227, 234, 241], "rank_dynam": [76, 187], "reference_type_is_lvalue_refer": [76, 77, 187], "lvalu": [76, 77, 187, 211], "scalar_array_typ": [76, 187], "properli": [76, 92, 162, 163, 187, 217, 221, 234], "specialis": [76, 187, 211], "sacado": [76, 187], "fad": [76, 187], "const_scalar_array_typ": [76, 187], "non_const_scalar_array_typ": [76, 187], "strip": [76, 187], "const_value_typ": [76, 187], "non_const_value_typ": [76, 148, 180, 187], "certain": [76, 87, 88, 130, 138, 150, 180, 187, 194, 196, 203, 205, 208, 212, 222], "compound": [76, 187], "memory_trait": [76, 187], "non_const_typ": [76, 77, 187], "const_typ": [76, 77, 187], "handl": [76, 77, 81, 95, 147, 148, 149, 152, 154, 157, 159, 161, 187, 201, 203, 205, 207, 209, 211, 217, 239], "reference_typ": [76, 77, 187], "pointer_typ": [76, 77, 187], "size_typ": [76, 81, 82, 85, 87, 130, 187, 207, 211, 239], "partial": [76, 87, 148, 149, 187, 194, 207], "No": [76, 77, 171, 187], "made": [76, 77, 87, 187, 203, 206, 212, 222, 230], "nullptr": [76, 133], "dt": [76, 79, 81, 187], "prop": [76, 187], "rt": [76, 77, 79], "rp": [76, 77, 79], "inttyp": [76, 77, 187], "is_regular": [76, 187], "standard": [76, 77, 81, 83, 87, 89, 92, 139, 141, 142, 168, 172, 187, 195, 196, 204, 205, 207, 209, 214, 220, 230, 233], "profil": [76, 77, 128, 146, 147, 148, 149, 187, 219, 246], "allocproperti": 76, "ptr": [76, 87, 100, 101, 102, 104, 107, 127, 129, 138, 183, 187, 211], "wrap": [76, 187, 188, 196, 203, 211], "required_allocation_s": [76, 187], "nr": [76, 187], "wrapper": [76, 155, 162, 163, 187, 196, 212, 221], "TO": [76, 222], "BE": [76, 222], "scratchspac": [76, 187, 201], "sizeof": [76, 137, 164, 178, 186, 187, 201, 203, 205, 211, 240], "typic": [76, 138, 187, 194, 196, 201, 202, 203, 205, 207, 211, 220, 225, 234, 236, 239], "team_handl": [76, 152, 154, 157, 159, 161, 187], "i0": [76, 77, 147, 148, 156, 158, 160, 186, 187, 227], "i1": [76, 156, 158, 160, 186, 187, 227], "i2": [76, 156, 158, 160, 186, 187], "i3": [76, 156, 158, 160, 187], "i4": [76, 187], "i5": [76, 187], "i6": [76, 187], "beyond": [76, 87, 154, 187, 196, 206, 212, 238], "kokkos_debug": [76, 187, 196], "dim": [76, 77, 79, 187, 237], "architectur": [76, 77, 83, 187, 191, 192, 194, 196, 201, 204, 206, 208, 211, 212, 219, 225, 234, 238, 241, 242], "effici": [76, 77, 81, 187, 204, 210, 211], "cast": [76, 77, 187, 205, 211], "stride_0": [76, 77, 187], "stride_1": [76, 77, 187], "stride_2": [76, 77, 187], "stride_3": [76, 77, 187], "stride_4": [76, 77, 187], "stride_5": [76, 77, 187], "stride_6": [76, 77, 187], "stride_7": [76, 77, 187], "lowest": [76, 128, 142, 187], "highest": [76, 130, 187, 202, 204, 230], "due": [76, 137, 187, 203, 204, 205, 209, 211, 221], "pad": [76, 179, 187, 188, 206, 208, 209, 211], "belong": [76, 187], "n8": [76, 187], "byte": [76, 128, 129, 138, 139, 155, 187, 211], "use_count": [76, 77, 187], "aim": [76, 187, 211, 230], "legal": [76, 78, 152, 154, 156, 157, 158, 159, 168, 187, 201, 207, 208, 211, 222], "intercept": [76, 187], "illeg": [76, 187, 201, 211, 221], "dsttype": [76, 187], "srctype": [76, 187], "dst_view": [76, 187], "src_view": [76, 187], "scrtype": 76, "met": [76, 187, 231, 233], "is_const": [76, 187], "memoryspaceaccess": [76, 87, 187], "furthermor": [76, 187, 194, 201, 203, 207, 208, 211, 226, 230, 231, 240], "neither": [76, 147, 148, 149, 187, 209], "nor": [76, 147, 148, 149, 187, 209, 220], "k": [76, 87, 95, 116, 130, 152, 153, 158, 161, 180, 187, 201, 210, 211], "hold": [76, 81, 162, 187, 205, 211, 221, 222, 243], "cstdio": [76, 147, 148, 149, 180, 187, 191, 192, 193, 227], "atoi": [76, 122, 147, 148, 149, 180, 187, 227], "inita": [76, 187, 227], "initb": [76, 187, 227], "const_a": [76, 187, 227], "const_b": [76, 187, 227], "setc": [76, 187, 227], "kokkos_dynamicview": 77, "parent": [77, 137, 210, 244], "array_typ": [77, 199, 200], "arg_label": 77, "min_chunk_s": 77, "max_ext": 77, "chunk": [77, 87, 138, 153, 155, 201, 207, 240], "rais": [77, 204, 215, 220], "nearest": [77, 141], "power": [77, 139, 141, 203, 204, 222, 232, 234], "resize_seri": 77, "reserv": [77, 82, 202, 207, 211], "amount": [77, 87, 130, 194, 201, 207, 208, 217], "suffici": [77, 195, 207, 211, 236], "chunk_siz": [77, 87, 153, 155], "outsid": [77, 95, 196, 201, 203, 206, 211, 217, 232, 245], "allocation_ext": 77, "noexcept": [77, 154, 170, 173, 174, 176, 227], "multipli": [77, 103, 106, 121, 169, 201], "alwai": [77, 87, 95, 100, 179, 191, 192, 201, 209, 211, 220, 240], "until": [77, 86, 87, 88, 95, 133, 135, 154, 187, 194, 209, 220, 230, 240, 241, 244], "greater": [77, 132, 139, 151, 153, 172, 211], "initializedata": 77, "kokkos_offsetview": [78, 215], "min0": 78, "max0": 78, "min1": 78, "max1": 78, "min2": 78, "max2": 78, "somelabel": 78, "sinc": [78, 82, 87, 88, 95, 101, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 163, 166, 168, 170, 172, 173, 174, 175, 176, 177, 180, 187, 194, 195, 196, 201, 203, 204, 205, 207, 209, 210, 211, 220, 227, 240, 243, 244], "ov": 78, "initializer_list": [78, 151], "instead": [78, 81, 101, 130, 131, 132, 137, 138, 141, 166, 187, 201, 202, 207, 209, 211, 221, 227], "obtain": [78, 100, 102, 104, 107, 201, 203, 211, 234, 239], "begin0": 78, "end0": 78, "exactli": [78, 87, 138, 209, 211], "drop": [78, 133, 196, 203], "slicem": 78, "offsettoslic": 78, "30": 78, "offsetsubview": 78, "make_pair": [78, 165, 210], "21": [78, 196, 221, 226], "assert_eq": 78, "deep": [78, 93, 138, 180, 203, 220, 241], "sens": [78, 150, 205, 206, 209, 211, 217], "similarli": [78, 95, 205, 217], "kokkos_scatterview": [79, 215], "original_view_typ": 79, "original_value_typ": 79, "original_reference_typ": 79, "data_type_info": 79, "duplicateddatatyp": 79, "newli": [79, 128, 129, 164, 217], "internal_data_typ": 79, "internal_view_typ": 79, "internal_view": 79, "variad": 79, "pack": [79, 239], "exec_spac": [79, 180, 188], "scatteraccess": 79, "accumul": [79, 206, 207, 244], "contribute_into": 79, "reset_except": 79, "tbd": 79, "free": [79, 81, 83, 137, 138, 141, 149, 202, 205, 206, 211, 213, 222, 227, 241], "dt1": 79, "vp": 79, "dt2": 79, "ly": 79, "es": 79, "ct": 79, "dp": 79, "foo": [79, 137, 147, 148, 164, 187, 205, 207, 211, 227], "bar": [79, 137, 205, 227], "input_i": 79, "result_i": 79, "kokkos_staticcrsgraph": [80, 215], "simplifi": [80, 199], "manipul": [80, 89, 128, 129, 141, 187], "staticcrsgraphtyp": 80, "row_map": 80, "kokkos_unorderedmap": [81, 215], "design": [81, 82, 87, 95, 196, 203, 204, 206, 209, 217, 219, 222, 230, 233, 234, 239, 241, 243, 244], "ten": [81, 201], "thousand": [81, 239], "consequ": [81, 201, 207, 209], "significantli": [81, 194], "unordered_map": 81, "fail": [81, 128, 180, 205, 209, 211, 221, 232, 234, 243, 245], "exceed": 81, "rehash": 81, "would": [81, 84, 87, 95, 146, 164, 176, 180, 194, 196, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 217, 221, 230, 236, 238, 243], "cach": [81, 138, 155, 194, 196, 201, 203, 206, 208, 211], "friendli": [81, 83, 84, 142, 211, 242], "pod": [81, 148, 149, 201], "plain": [81, 137, 191, 192, 211], "trivial": [81, 95, 163, 205, 211, 221], "copyabl": [81, 162, 163, 221], "capacity_hint": 81, "enough": [81, 87, 230, 232, 238], "requested_capac": 81, "lower": [81, 201], "o": [81, 196, 206], "unorderedmapinsertresult": 81, "invalid_index": 81, "valid_at": 81, "Is": [81, 217], "key_at": 81, "value_at": 81, "hashmap": 81, "create_copy_view": 81, "skei": 81, "svalu": 81, "sdevic": 81, "hasher": 81, "equalto": 81, "allocate_view": 81, "deep_copy_view": 81, "dkei": 81, "ddevic": 81, "st": [81, 244], "success": [81, 128, 129, 234], "successfulli": [81, 231], "present": [81, 87, 132, 193, 195, 202, 206, 230, 234], "did": [81, 198, 217], "valuetypeview": 81, "valuesidxtyp": 81, "lookup": [81, 205], "duplic": [81, 87, 209, 217], "togeth": [81, 87, 207, 208, 217, 239], "report": [81, 130, 221, 230, 233, 234], "impli": [81, 146, 153, 164, 211, 222], "exhaust": 81, "restart": 81, "map_op_typ": 81, "value_view_typ": 81, "noop_typ": 81, "OR": [81, 110, 112, 222], "atomic_add_typ": 81, "atomic_add": [81, 105, 194], "pattern": [81, 85, 87, 93, 122, 130, 150, 152, 153, 194, 201, 211, 213, 238, 246], "umap": 81, "kokkos_vector": [82, 215], "overcom": [82, 95], "issu": [82, 83, 133, 140, 141, 154, 180, 187, 196, 201, 203, 206, 207, 209, 211, 214, 217, 219, 220, 222, 226, 229, 232, 233, 234], "reli": [82, 187, 206, 209, 230], "heavili": [82, 196, 212], "grant": [82, 222], "mani": [82, 87, 88, 95, 130, 195, 196, 204, 205, 206, 207, 208, 209, 211, 212, 217, 220, 234, 242, 243], "limit": [82, 87, 95, 137, 142, 151, 155, 193, 195, 196, 201, 204, 205, 206, 209, 211, 218, 221, 222, 226, 232, 233, 244], "below": [82, 87, 92, 95, 122, 132, 133, 139, 141, 142, 147, 148, 179, 187, 196, 199, 211, 212, 217, 220, 222, 225, 230, 234, 240], "synopsi": [82, 141], "push_back": 82, "const_point": 82, "const_refer": 82, "const_iter": 82, "accessor": [82, 187], "pop_back": 82, "max_siz": 82, "front": [82, 201], "back": [82, 88, 95, 194, 196, 201, 206, 208, 241], "lower_bound": 82, "theend": 82, "comp_val": 82, "device_to_host": 82, "host_to_devic": 82, "on_host": 82, "perspect": [82, 87, 189, 206], "on_devic": 82, "set_overalloc": 82, "extra": [82, 87, 88, 95, 128, 130, 209, 211, 220], "buffer": [82, 138, 201, 239], "dispatch": [83, 85, 95, 137, 146, 147, 148, 149, 150, 155, 160, 161, 164, 201, 203, 206, 220, 224, 238, 243, 246], "task": [83, 85, 194, 206, 208, 230, 235, 246], "common": [83, 86, 87, 89, 130, 138, 140, 142, 150, 155, 179, 180, 185, 196, 197, 198, 201, 203, 207, 208, 209, 212, 222, 239], "mathemat": [83, 89, 141, 142, 209, 234], "style": [83, 135, 162, 196, 212, 217, 227, 233], "port": [83, 205, 208, 211], "hardwar": [83, 138, 164, 194, 196, 201, 202, 204, 206, 207, 208, 220, 221, 230, 233, 234], "idiom": [83, 95], "recogn": [83, 84, 135, 189, 201, 202, 203, 209, 212], "sfina": [83, 84, 142], "macro": [83, 92, 147, 168, 196, 203, 205, 207, 211, 234, 245], "etc": [83, 137, 138, 154, 195, 196, 211, 217, 225], "kokkos_detectionidiom": [84, 215], "extens": [84, 137, 171, 196, 213, 219, 230, 233, 234], "iso": [84, 87, 191, 192, 193, 209, 211, 217], "iec": 84, "ts": [84, 154, 244], "19568": 84, "2017": [84, 232], "draft": [84, 87, 217, 230], "cplusplu": 84, "github": [84, 196, 205, 214, 219, 225, 230, 231, 232, 233], "io": 84, "v2": [84, 93, 222, 234], "html": [84, 141, 164], "meta": [84, 196], "origin": [84, 102, 103, 105, 106, 129, 164, 194, 209, 210, 211, 213, 222, 232, 234, 243], "propos": [84, 191, 192, 193, 209, 217, 219, 230, 233], "www": [84, 213, 222], "open": [84, 141, 151, 153, 155, 203, 214, 219, 231, 234], "jtc1": 84, "sc22": 84, "wg21": 84, "doc": [84, 141], "paper": [84, 213], "2015": 84, "n4436": 84, "pdf": 84, "void_t": 84, "detector": 84, "exposit": 84, "metafunct": 84, "leverag": [84, 196, 212, 230], "archetyp": [84, 87], "alwaysvoid": 84, "value_t": 84, "false_typ": [84, 142], "true_typ": [84, 142, 221], "simplif": [84, 87], "detected_t": 84, "nonesuch": 84, "delet": [84, 133, 162, 183, 205, 211, 230], "is_detect": 84, "alia": [84, 130, 138, 178, 191, 192, 193, 210, 211, 240], "detected_or_t": 84, "is_detected_exact": 84, "expect": [84, 95, 100, 101, 122, 192, 195, 201, 203, 204, 207, 209, 210, 212, 230, 231], "is_detected_convert": 84, "is_convert": 84, "later": [84, 130, 187, 195, 198, 207, 209, 211, 221], "is_detected_v": 84, "is_detected_exact_v": 84, "is_detected_convertible_v": 84, "helper": [84, 88], "copy_assign_t": 84, "declval": [84, 210], "Then": [84, 196, 210, 211, 212], "easili": [84, 211, 244], "is_copy_assign": 84, "is_canonical_copy_assign": 84, "mytyp": 84, "ptrdiff_t": [84, 138, 186, 211], "diff_t": 84, "declar": [84, 141, 148, 195, 202, 205, 207, 211, 221], "our": [84, 205, 206, 208, 234, 237], "our_difference_typ": 84, "executionpolicyconcept": 85, "abstract": [85, 87, 95, 122, 130, 138, 150, 191, 192, 201, 204, 208, 209, 219], "place": [85, 87, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 129, 130, 138, 149, 150, 201, 202, 203, 207, 208, 209, 217, 222, 232, 234, 239], "nestedpolici": 85, "summari": [85, 232, 234], "setter": 85, "hip": [85, 87, 88, 94, 137, 138, 164, 180, 196, 202, 205, 207, 219, 220, 233, 234], "sycl": [85, 87, 88, 94, 137, 138, 141, 153, 164, 196, 202, 205, 219, 220, 226], "schedul": [85, 87, 153, 155, 201, 244], "through": [85, 95, 147, 148, 149, 154, 194, 196, 198, 201, 202, 204, 205, 206, 207, 209, 210, 211, 213, 214, 217, 222, 230, 234, 236, 239], "steal": 85, "queue": [85, 164, 230, 244], "machin": [85, 196, 204, 208, 209, 212, 224, 225, 232, 234], "backend": [85, 86, 87, 132, 136, 137, 138, 141, 151, 153, 156, 158, 160, 164, 170, 173, 175, 195, 196, 202, 203, 205, 207, 212, 217, 219, 225, 226, 232, 233, 240, 241], "indextyp": [85, 87, 152, 153, 155, 201], "travers": 85, "executionspaceconcept": [85, 94, 146, 179], "affect": [85, 88, 175, 196, 211, 226], "launchbound": [85, 87], "maxthread": 85, "minblock": 85, "launch": [85, 93, 95, 146, 154, 155, 201, 211, 217, 221, 234, 241, 243, 244], "worktag": [85, 148, 149, 200, 215], "someclass": 85, "detail": [86, 87, 91, 92, 93, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 130, 133, 138, 142, 147, 167, 186, 195, 196, 197, 200, 204, 207, 211, 212, 217, 220, 221, 225, 230, 231, 234], "shutdown": 86, "resourc": [86, 134, 136, 138, 153, 164, 201, 202, 205, 206, 207, 208, 219, 233, 241, 244], "destruct": [86, 87, 162, 163, 205, 211], "thu": [86, 148, 152, 154, 187, 193, 196, 201, 202, 203, 205, 208, 211, 221, 230, 232, 240, 241, 244, 245], "context": [86, 87, 95, 134, 135, 156, 157, 158, 159, 160, 161, 187, 205, 221, 237, 238, 241], "automat": [86, 122, 132, 138, 196, 202, 203, 207, 209, 211, 220, 225, 233, 238, 240], "aid": 86, "mistak": 86, "live": [86, 211, 230], "my_view": [86, 133, 134, 135, 181, 182], "destructor": [86, 133, 134, 135, 154, 205, 211, 227], "switch": [86, 194, 203, 232], "subsequ": [86, 95, 135, 155, 222, 239], "driven": [87, 230], "essenti": [87, 209, 234], "incept": 87, "recent": [87, 232], "readili": 87, "fact": [87, 221, 243], "hasn": 87, "realli": [87, 133, 196, 212, 217], "even": [87, 95, 129, 130, 134, 137, 138, 148, 195, 196, 200, 203, 206, 208, 210, 211, 217, 222, 236, 239, 243, 245], "agre": [87, 222, 231], "merg": [87, 217, 230, 232, 233, 234], "languag": [87, 88, 92, 130, 138, 150, 195, 204, 206, 207, 209, 210, 211, 212, 213, 237], "featur": [87, 88, 130, 138, 150, 171, 195, 196, 201, 202, 203, 207, 209, 211, 212, 214, 217, 220, 230, 231, 232, 234], "formal": [87, 93, 130, 138, 150, 189, 206], "rapid": [87, 220], "expans": 87, "demand": [87, 240], "lack": [87, 207, 208], "harden": 87, "acut": 87, "ever": [87, 130, 138, 149, 150, 201, 211], "project": [87, 88, 195, 196, 206, 212, 214, 225, 229, 231, 233, 234], "horizon": 87, "resili": [87, 219], "few": [87, 95, 130, 173, 196, 201, 211, 234], "best": [87, 191, 192, 195, 202, 211, 217, 221, 241, 244], "core": [87, 88, 194, 196, 201, 202, 204, 206, 208, 214, 217, 219, 225, 230, 233, 234, 242], "addition": [87, 93, 130, 179, 187, 198, 211], "promot": [87, 130, 138, 140, 230, 234], "plan": [87, 95, 219], "good": [87, 95, 130, 194, 195, 201, 205, 207, 208, 211, 214, 222, 242, 243], "holist": 87, "interact": [87, 165, 196, 231, 240, 243], "addit": [87, 95, 130, 141, 180, 197, 202, 204, 205, 206, 207, 209, 211, 222, 225, 230, 238, 243], "experi": [87, 204, 208, 211, 234], "garner": 87, "year": [87, 195, 213, 230, 231, 232], "particip": [87, 176, 210, 230, 233], "executor": 87, "effort": [87, 195, 196, 211, 219, 230, 234], "2011": [87, 206, 207], "sutton": 87, "stroustrup": 87, "guid": [87, 137, 150, 204, 207, 219, 225], "particular": [87, 119, 120, 125, 163, 194, 196, 201, 202, 203, 207, 208, 211, 212, 217, 221, 222, 225, 226, 233, 234, 239, 243], "constraint": [87, 187, 201], "axiom": 87, "philosophi": 87, "focus": [87, 217], "balanc": [87, 95], "flexibl": [87, 130, 203], "eas": 87, "learn": [87, 130, 207], "far": [87, 95, 206, 211, 243], "though": [87, 138, 196, 245], "pure": [87, 203, 204, 205], "veri": [87, 95, 196, 206, 207, 209, 212, 239], "slightli": [87, 203, 217], "thing": [87, 130, 189, 195, 196, 203, 205, 206, 208, 209, 211, 217], "By": [87, 196, 201, 206, 207, 208, 209, 211], "minim": [87, 195, 198, 202, 207, 230], "cognit": 87, "perhap": 87, "import": [87, 196, 201, 203, 206, 207, 210, 211, 222, 230, 234, 238, 241], "subsumpt": 87, "hierarchi": [87, 130, 201, 208, 219], "branch": [87, 154, 156, 157, 158, 159, 201, 208, 214, 226, 230, 232, 233, 234], "width": [87, 209, 232], "roughli": [87, 201, 231], "speak": [87, 95, 205], "high": [87, 95, 155, 195, 201, 204, 208, 209, 211, 212, 213, 230], "major": [87, 88, 195, 203, 209, 211, 217, 219, 230, 233, 234], "visibl": [87, 130, 138], "minor": [87, 88, 195, 230], "memorylayout": 87, "taskschedul": [87, 95], "treat": [87, 138, 206, 207, 234], "kokkos_concept": 87, "enumer": [87, 195], "iterationpattern": 87, "question": [87, 204, 217, 222, 230, 231], "friend": [87, 95, 130], "rather": [87, 95, 130, 138, 202, 212], "alik": 87, "extern": [87, 95, 196, 211, 214, 233, 246], "off": [87, 202, 206, 211, 220, 221, 244], "look": [87, 130, 202, 205, 207, 209, 210, 211], "regular": [87, 95, 211, 230], "is_integral_v": 87, "scratch_memory_spac": [87, 130, 154, 201], "str": [87, 130, 202], "ostream": [87, 130], "ostr": [87, 130], "print_configur": [87, 130, 132], "ve": [87, 205, 225], "extrapol": 87, "progress": [87, 206, 208, 230, 231, 232], "eventu": [87, 195], "further": [87, 148, 196, 201, 205, 209, 211, 230, 234, 239, 244], "cannot": [87, 130, 131, 135, 139, 146, 176, 188, 202, 205, 209, 222, 230, 244], "constrain": [87, 208], "known": [87, 140, 141, 206, 210, 217, 219, 220, 226, 232, 239], "decid": [87, 206, 207, 233, 234], "argu": 87, "around": [87, 183, 196, 203, 205, 211, 226, 236, 239, 241, 245], "wherebi": 87, "meet": [87, 93, 130, 152, 154, 179, 186, 217, 222, 230, 231, 233], "definit": [87, 122, 168, 189, 206, 207, 222, 238, 239, 243, 245], "practic": [87, 95, 130, 138, 141, 150, 164, 187, 204, 209, 211, 241, 243], "converg": [87, 204], "relev": [87, 103, 105, 106, 219, 230, 239], "site": [87, 234], "artifact": 87, "assess": [87, 231], "intent": [87, 195, 211, 217, 237], "expol": 87, "resulttyp": 87, "executionspaceof": 87, "executionpolicyof": 87, "impos": [87, 211], "kokkos_parallel": 87, "technic": [87, 211, 212, 221], "correct": [87, 90, 95, 133, 179, 196, 201, 205, 207, 210, 211, 217, 231, 234], "rvalu": 87, "wouldn": [87, 198], "breviti": 87, "parallelfor": 87, "parallelscan": 87, "parallelscanwithtot": 87, "red": 87, "executionspaceofreduct": 87, "kokkos_parallel_reduc": 87, "parallelreduc": 87, "closur": [87, 154, 201, 207], "implexecutionspaceof": 87, "exclud": [87, 195, 207, 222], "uniquetoken": 87, "add": [87, 122, 124, 147, 189, 194, 195, 196, 199, 201, 203, 206, 209, 211, 212, 217, 218, 222, 230, 236, 243, 244], "uniquetokenexecutionspac": 87, "uniquetokenscop": 87, "itok": 87, "gtok": 87, "copyconstruct": 87, "defaultconstruct": 87, "concret": [87, 206], "teampolicyintern": [87, 215], "nice": [87, 209, 217], "could": [87, 155, 195, 198, 205, 206, 208, 210, 211, 230], "refactor": 87, "openmptargetspac": 87, "mem": [87, 191, 193], "dealloc": [87, 126, 127, 128, 129, 138, 187, 203, 210, 211, 217, 242], "implmemoryspac": 87, "sharedallocationrecord": 87, "get_label": 87, "allocate_track": 87, "reallocate_track": 87, "deallocate_track": 87, "print_record": 87, "get_record": 87, "mem1": 87, "mem2": 87, "implrelatablememoryspac": 87, "deepcopi": [87, 93], "verifyexecutioncanaccessmemoryspac": 87, "verifi": [87, 225, 230, 234], "exec": [87, 153, 221], "think": [87, 95, 133, 205, 211, 236], "achiev": [87, 138, 201, 203, 211, 234, 238], "signific": [87, 139, 211, 241, 243], "dispar": 87, "teamthreadrangeboundariesstruct": [87, 152], "teamvectorrangeboundariesstruct": 87, "basicexecutionpolici": 87, "index_typ": [87, 150, 153, 155, 187], "cours": 87, "execution_polici": [87, 153, 177], "weren": 87, "mayb": 87, "chunkedexecutionpolici": 87, "set_chunk_s": [87, 153, 155], "complic": [87, 205, 207, 211], "pretti": [87, 95, 130], "straightforward": [87, 179, 238, 239], "iteratetil": 87, "seem": [87, 212], "kokkos_openmp_parallel": 87, "were": [87, 88, 130, 140, 141, 142, 193, 205, 206, 234], "conceptu": [87, 242], "surfac": 87, "area": [87, 129], "Of": [87, 206, 220], "d": [87, 156, 160, 175, 183, 186, 195, 199, 200, 201, 205, 206, 207, 209, 210, 211, 222, 238], "still": [87, 88, 164, 194, 195, 198, 201, 205, 209, 211, 241], "shortcut": [87, 130, 150], "probabl": [87, 95, 201, 207, 209, 220], "teach": [87, 207], "advanc": [87, 130, 207, 234, 246], "ax": [87, 241], "me": 87, "why": [87, 202, 217, 221, 241], "mind": [87, 205, 211], "axi": 87, "extend": [87, 204], "up": [87, 95, 134, 137, 139, 181, 182, 183, 187, 195, 196, 201, 202, 207, 208, 211, 220, 221, 225, 234, 244], "overhead": [87, 95, 146, 207, 209, 211, 238], "describ": [87, 95, 122, 130, 138, 150, 151, 152, 153, 155, 191, 193, 197, 204, 205, 206, 208, 209, 213, 214, 220, 222, 227, 234, 241, 242, 244], "isn": [87, 95, 130, 205, 211, 221], "concern": [87, 204, 206, 239, 243], "simplest": [87, 201, 202, 239], "But": [87, 197, 201, 211, 243], "todo": 87, "annot": [88, 205, 222], "kokkos_vers": 88, "40201": 88, "kokkos_version_major": 88, "kokkos_version_minor": 88, "kokkos_version_patch": 88, "10000": [88, 207, 211], "patch": [88, 230], "denot": [88, 142, 155, 187], "40199": 88, "post": [88, 149, 230, 243], "iostream": [88, 136, 173], "static_assert": [88, 130, 180, 210, 221, 240], "30700": 88, "endif": [88, 168, 196, 203], "meant": 88, "kokkos_version_less": 88, "kokkos_version_less_equ": 88, "kokkos_version_great": 88, "kokkos_version_greater_equ": 88, "kokkos_version_equ": 88, "kokkos_version_": 88, "against": [88, 195, 196, 201, 212, 214, 222, 232, 233, 245], "saniti": 88, "illustr": [88, 196, 201, 211, 212, 237], "do_work": [88, 163], "rad": 88, "fall": [88, 194, 201, 204, 211, 233, 244], "bore": 88, "stuff": [88, 146, 173, 209], "kokkos_enable_debug": [88, 168, 220], "kokkos_enable_debug_bounds_check": [88, 220], "kokkos_enable_debug_dualview_modify_check": [88, 220], "kokkos_enable_deprecated_code_3": [88, 220], "kokkos_enable_deprecation_warn": [88, 220], "warn": [88, 132, 187, 195, 202, 211, 212, 215, 220, 226, 230, 232], "kokkos_enable_tun": [88, 220], "bind": [88, 202, 219, 220, 222, 237], "tune": [88, 196, 202, 212, 220, 238, 246], "2422": 88, "kokkos_enable_complex_align": 88, "align": [88, 128, 188, 191, 193, 209, 211, 233, 242], "kokkos_enable_aggressive_vector": [88, 220], "assumpt": [88, 202], "ignor": [88, 95, 201, 209], "aggress": [88, 211, 220], "ifdef": [88, 203], "kokkos_enable_seri": [88, 196, 220], "kokkos_enable_openmp": [88, 196, 220], "kokkos_enable_openmptarget": [88, 220], "kokkos_enable_thread": [88, 196, 220], "kokkos_enable_cuda": [88, 196, 220], "kokkos_enable_hip": [88, 196, 220], "kokkos_enable_hpx": [88, 220], "kokkos_enable_sycl": [88, 196, 220], "kokkos_enable_cuda_constexpr": [88, 220], "kokkos_enable_cuda_lambda": [88, 220], "kokkos_enable_cuda_ldg_intrinsinc": 88, "ldg": 88, "intrins": [88, 122, 139, 191, 192, 197, 203, 209, 211, 237], "kokkos_enable_cuda_relocatable_device_cod": [88, 220], "relocat": [88, 137, 212, 220, 233], "kokkos_enable_cuda_uvm": [88, 220, 235], "kokkos_enable_hip_multiple_kernel_instanti": [88, 220], "instanti": [88, 195, 205, 206, 208, 209, 211, 220, 221], "improv": [88, 195, 204, 207, 208, 220, 222, 226, 231, 238], "kokkos_enable_hip_relocatable_device_cod": [88, 220], "latest": [88, 92, 195, 226], "path": [88, 132, 195, 196, 202, 220, 225, 230, 234, 239], "expos": [88, 130, 200, 201, 208, 217, 238], "kokkos_enable_cxx14": 88, "kokkos_enable_cxx17": 88, "kokkos_enable_cxx20": 88, "inform": [88, 122, 168, 195, 197, 202, 205, 206, 208, 211, 212, 216, 222, 230, 231, 234, 236, 239, 242], "kokkos_enable_hwloc": [88, 196, 220], "libhwloc": [88, 196], "numa": 88, "kokkos_enable_libdl": [88, 220], "link": [88, 92, 187, 196, 212, 217, 219, 222, 234, 238], "linker": [88, 196, 212], "libdl": [88, 196, 220], "kokkos_enable_libquadmath": 88, "gcc": [88, 196, 212, 221, 226, 232, 233], "quad": 88, "precis": [88, 196, 205, 237, 239, 243], "math": [88, 89, 209, 219, 246], "kokkos_enable_onedpl": [88, 220], "onedpl": [88, 220, 221], "tpl": [88, 196, 212, 221], "kokkos_arch_armv80": [88, 220], "armv8": [88, 196, 220], "kokkos_arch_armv8_thunderx": [88, 220], "cavium": [88, 234], "thunderx": [88, 196, 234], "kokkos_arch_armv81": [88, 220], "kokkos_arch_armv8_thunderx2": [88, 220], "thunderx2": 88, "kokkos_arch_amd_avx2": 88, "avx2": [88, 191], "zen": [88, 220], "kokkos_arch_amd_gfx906": [88, 220], "amd": [88, 230, 233], "mi50": [88, 220], "mi60": [88, 220], "kokkos_arch_amd_gfx908": [88, 220], "mi100": [88, 220], "kokkos_arch_amd_gfx90a": [88, 220], "mi200": [88, 220], "seri": [88, 204, 220, 234], "kokkos_arch_amd_gfx940": [88, 220], "mi300a": [88, 220], "kokkos_arch_amd_gfx942": [88, 220], "mi300x": [88, 220], "kokkos_arch_amd_gfx942_apu": [88, 220], "kokkos_arch_amd_gfx1030": [88, 220], "v620": [88, 220], "w6800": [88, 220], "kokkos_arch_amd_gfx1100": [88, 220], "7900xt": [88, 220], "kokkos_arch_amd_gfx1103": [88, 220], "phoenix": [88, 220], "apu": [88, 220], "kokkos_arch_amd_gpu": 88, "gfx90a": [88, 220], "mi250x": 88, "acceler": [88, 206, 207, 220, 234, 241, 243], "kokkos_arch_avx": 88, "avx": 88, "kokkos_arch_avx2": 88, "kokkos_arch_avx512xeon": 88, "skylak": 88, "avx512": [88, 191], "kokkos_arch_knc": [88, 220], "intel": [88, 196, 201, 209, 225, 226, 230, 232, 233, 234], "knight": [88, 234], "xeon": [88, 196, 234], "phi": [88, 140, 196], "kokkos_arch_avx512m": 88, "mic": 88, "kokkos_arch_power8": [88, 220], "ibm": [88, 196, 226, 232], "power8": [88, 196, 220, 232], "kokkos_arch_power9": [88, 220], "power9": [88, 220], "kokkos_arch_intel_gen": [88, 220], "kokkos_arch_intel_dg1": [88, 220], "iri": [88, 220], "xemax": 88, "kokkos_arch_intel_gen9": [88, 220], "gen9": [88, 220], "kokkos_arch_intel_gen11": [88, 220], "gen11": [88, 220], "kokkos_arch_intel_gen12lp": [88, 220], "gen12lp": [88, 220], "kokkos_arch_intel_xehp": [88, 220], "xe": [88, 220], "hp": [88, 220], "kokkos_arch_intel_pvc": [88, 220], "pont": [88, 220], "vecchio": [88, 220], "kokkos_arch_intel_gpu": 88, "kokkos_arch_kepl": 88, "nvidia": [88, 196, 201, 208, 209, 221, 230, 233, 234, 239], "kepler": [88, 196, 220], "kokkos_arch_kepler30": [88, 220], "cc": [88, 196, 237], "kokkos_arch_kepler32": [88, 220], "kokkos_arch_kepler35": [88, 220], "kokkos_arch_kepler37": [88, 220], "kokkos_arch_maxwel": 88, "maxwel": [88, 196, 220], "kokkos_arch_maxwell50": [88, 220], "kokkos_arch_maxwell52": [88, 220], "kokkos_arch_maxwell53": [88, 220], "kokkos_arch_navi": 88, "navi": 88, "kokkos_arch_navi1030": 88, "gfx1030": [88, 220], "kokkos_arch_pasc": 88, "pascal": [88, 220], "kokkos_arch_pascal60": [88, 220], "kokkos_arch_pascal61": [88, 220], "kokkos_arch_volta": 88, "volta": [88, 220], "kokkos_arch_volta70": [88, 220], "kokkos_arch_volta72": [88, 220], "kokkos_arch_turing75": [88, 220], "ture": [88, 220], "kokkos_arch_amper": 88, "amper": [88, 220], "kokkos_arch_ampere80": [88, 220], "kokkos_arch_ampere86": [88, 220], "kokkos_arch_ada89": [88, 220], "ada": [88, 220], "kokkos_arch_hopp": 88, "hopper": [88, 220], "kokkos_arch_hopper90": [88, 220], "kokkos_arch_amd_zen": 88, "kokkos_arch_amd_zen2": 88, "zen2": [88, 220], "kokkos_arch_amd_zen3": 88, "zen3": [88, 220], "kokkos_arch_vega": 88, "vega": 88, "kokkos_arch_vega900": [88, 220], "mi25": [88, 220], "gfx900": [88, 220], "kokkos_arch_vega906": [88, 220], "gfx906": [88, 220], "kokkos_arch_vega908": [88, 220], "gfx908": [88, 220], "kokkos_arch_vega90a": [88, 220], "kokkos_mathematicalconst": [89, 140, 215], "backport": [89, 230], "sqrt2": [89, 140], "kokkos_mathematicalfunct": [89, 141, 215], "consist": [89, 141, 175, 196, 201, 206, 208, 209, 217, 222, 233, 239], "portabl": [89, 130, 140, 194, 203, 204, 206, 207, 209, 213, 221, 230, 237, 238, 240, 242, 246], "fab": [89, 141], "sqrt": [89, 141, 191, 193, 209, 221], "sin": [89, 140, 141, 191], "kokkos_numerictrait": [89, 142, 215], "ad": [89, 103, 105, 106, 142, 175, 193, 195, 196, 201, 202, 205, 209, 212, 217, 221, 230, 244], "23": [89, 142, 187, 213, 218, 219, 233], "numeric_limit": [89, 142], "kokkos_bitmanipul": [89, 139], "individu": [89, 95, 141, 142, 203, 212, 222, 234, 243], "compos": [90, 239], "team_size_max": [90, 155], "team_size_recommend": [90, 143, 144, 145, 155], "strive": [92, 209], "howev": [92, 95, 130, 164, 201, 203, 204, 205, 206, 207, 208, 209, 211, 222, 226, 234, 238], "deviat": 92, "approach": [92, 95, 194, 204, 206, 207, 209, 211, 243, 246], "section": [92, 162, 163, 196, 201, 203, 205, 206, 207, 211, 220, 222, 232, 234], "usag": [92, 94, 132, 134, 135, 137, 146, 147, 161, 165, 175, 191, 192, 193, 196, 203, 208, 210, 211, 212, 217, 237], "guidanc": [92, 214], "relationship": [93, 95, 164, 201, 211], "entiti": [93, 95, 195, 206, 222], "msp1": 93, "msp2": 93, "retriev": [93, 95, 153, 198, 244], "v1": [93, 234], "word": [93, 130, 138, 150, 196, 209, 220], "shape": 93, "attribut": [93, 208, 209, 211, 215, 222], "intercessori": 93, "hipspac": [94, 215], "hiphostpinnedspac": 94, "hipmanagedspac": [94, 221], "sycldeviceusmspac": 94, "syclhostusmspac": 94, "syclsharedusmspac": 94, "sharedspac": [94, 205, 235], "sharedhostpinnedspac": [94, 240], "memoryspaceconcept": [94, 179], "lightweight": 95, "substanti": 95, "futur": [95, 204, 208, 211, 224, 230, 232, 244], "Not": [95, 211, 222], "too": [95, 146, 155, 205, 211, 217, 226], "small": [95, 135, 138, 207, 217, 244], "inher": 95, "plenti": 95, "scale": [95, 130, 196, 234], "easier": [95, 207, 214, 217, 240, 242], "hierarch": [95, 156, 157, 158, 159, 160, 161, 206, 207, 208, 224, 244, 246], "ordinari": [95, 207], "portion": [95, 209, 222], "haev": 95, "output": [95, 130, 136, 183, 194, 200, 208, 234, 238], "mytask": 95, "produc": [95, 204, 207, 209, 239, 241], "analog": [95, 175, 180], "task_spawn": [95, 244], "host_spawn": 95, "tasksingl": [95, 244], "taskteam": [95, 147, 148, 149], "former": [95, 100, 101, 196, 207, 211, 234], "worker": [95, 148, 244], "spawn": [95, 244], "basicfutur": [95, 244], "when_al": [95, 244], "scheduler_typ": 95, "discuss": [95, 206, 209, 211, 217, 222, 230, 231], "fut": 95, "mytaskfunctor": 95, "readi": [95, 195, 211, 217], "earliest": 95, "fut2": 95, "myothertaskfunctor": 95, "my_funct": [95, 130], "sched": 95, "my_result_typ": 95, "my_task_result": 95, "ff": [95, 232], "better": [95, 194, 196, 201, 211, 212, 227, 241], "never": [95, 130, 195, 196, 209, 211, 212], "share": [95, 154, 194, 196, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 217, 219, 222, 230, 238, 239], "transit": [95, 220, 230], "undefin": [95, 128, 129, 132, 187, 203, 211, 221, 245], "worst": 95, "kind": [95, 206, 207, 210, 222, 234], "bug": [95, 130, 137, 195, 205, 217, 226, 230, 231, 232], "segfault": [95, 212], "hour": [95, 195], "is_nul": 95, "attempt": [95, 206, 220, 225], "poll": 95, "is_readi": [95, 244], "forbidden": 95, "anywher": 95, "abil": [95, 147, 206, 209, 237], "yet": [95, 129, 171, 189, 195, 204, 206, 209, 210, 230, 232], "extrem": [95, 205, 206, 211], "expens": [95, 210], "sledgehamm": 95, "sparingli": 95, "alon": [95, 196, 222], "pend": 95, "decis": [95, 201, 217, 230, 239], "piec": 95, "help": [95, 137, 199, 202, 204, 205, 207, 211, 212, 221], "cost": [95, 194, 204, 210, 211], "tradit": [95, 138], "reus": [95, 201, 243], "successor": 95, "respawn": [95, 244], "future_typ": [95, 244], "got": 95, "redund": [95, 137, 239], "lead": [95, 130, 195, 201, 205, 211, 212, 230, 240], "lazi": 95, "third": [95, 196, 201, 203, 206, 210, 212, 221, 222, 230, 238], "serv": [95, 130, 230], "observ": [95, 146, 205], "effect": [95, 130, 146, 187, 195, 196, 201, 205, 207, 208, 209, 216, 243], "taskprior": 95, "low": [95, 194, 204, 207, 209, 211, 221], "boolean": [96, 130, 181, 182, 183, 202, 207, 209], "kokkos_assert": [97, 195], "kokkos_swap": 97, "device_id": [97, 131, 132, 173, 174], "num_devic": [97, 170, 174], "num_thread": [97, 131, 132, 170, 173, 202], "critic": [98, 206, 230], "_view": 98, "awar": [98, 187, 201, 206, 211, 213, 220, 238], "bundl": [98, 188], "loos": [98, 179, 189], "behav": [98, 180, 189, 209, 210, 211], "kokkos_atom": [100, 101, 102, 104, 107, 215], "obj": [100, 101, 102, 104, 107], "regardless": [100, 133, 206], "type_identity_t": [100, 101, 102, 107], "bitwis": [100, 101, 109, 110, 139, 211], "held": [100, 102, 104, 107, 230], "was_exchang": 101, "prefer": [101, 130, 195, 202, 211, 212, 220, 221, 222, 245], "retur": 102, "ptr_to_valu": [103, 105, 106], "update_valu": [103, 105, 106], "previou": [103, 135, 140, 141, 155, 179, 185, 201, 215, 232], "atomic_fetch_add": [103, 105, 194, 201], "tmp": [103, 201, 238], "atomic_fetch_and": 103, "atomic_fetch_div": 103, "divid": [103, 106, 147, 148, 149, 169, 199, 200, 236, 241], "atomic_fetch_lshift": 103, "atomic_fetch_max": 103, "atomic_fetch_min": 103, "atomic_fetch_mul": 103, "atomic_fetch_mod": 103, "atomic_fetch_or": 103, "atomic_fetch_rshift": 103, "atomic_fetch_sub": [103, 105], "subtract": [103, 105, 106], "atomic_fetch_xor": 103, "whose": [104, 107, 165, 195, 207, 210, 211, 238, 242], "atomic_and": 105, "atomic_assign": 105, "atomic_decr": 105, "atomic_incr": [105, 194], "atomic_max": 105, "atomic_min": 105, "atomic_or": 105, "atomic_sub": 105, "atomic_add_fetch": 106, "atomic_and_fetch": 106, "atomic_div_fetch": 106, "atomic_lshift_fetch": 106, "atomic_max_fetch": 106, "atomic_min_fetch": 106, "atomic_mul_fetch": 106, "atomic_mod_fetch": 106, "atomic_or_fetch": 106, "atomic_rshift_fetch": 106, "atomic_sub_fetch": 106, "atomic_xor_fetch": 106, "conjunct": [108, 137, 152, 194, 196, 201, 230], "AND": [109, 111, 222], "remove_cv": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124], "result_view_typ": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 200], "value_": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 153, 200], "local": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 132, 137, 138, 148, 149, 196, 201, 202, 206, 207, 208, 210, 211, 220, 221, 232, 234, 240], "reduction_ident": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 148, 149, 197, 199, 207], "resid": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 138, 205, 208, 240], "customtyp": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124], "_min": [113, 114, 117, 118], "vallocscalar": [114, 116, 123, 201], "loc": [114, 116, 125, 198], "_max": [114, 115, 116, 117, 118], "idx3d_t": 116, "minloc_t": 116, "minlocval_t": 116, "lf": [116, 148, 198], "minmaxscalar": [117, 123, 201], "min_val": [117, 118, 119, 120, 198], "max_val": [117, 118, 119, 120, 198], "minmaxlocscalar": [118, 123, 201], "min_loc": [118, 119, 198], "max_loc": [118, 119, 198], "minvalu": [119, 120], "maxvalu": [119, 120], "hypothet": 122, "brief": [122, 227, 230], "build": [122, 130, 180, 187, 195, 201, 202, 204, 207, 214, 219, 220, 232, 234, 246], "callback": 122, "monoid": 122, "val1": 122, "val2": 122, "ident": [122, 130, 148, 149, 153, 155, 179, 199, 201, 202, 206, 207, 211, 236], "el": 122, "under": [122, 180, 195, 196, 207, 211, 214, 222, 230, 234], "reducesum": 122, "lval": 122, "l": [122, 137, 141, 158, 206, 232], "resultvalu": 125, "resultindex": 125, "shrink": [126, 184, 185], "throw": [127, 128, 129, 155, 203, 211, 221], "runtime_error": 127, "failur": [127, 128, 129, 155, 187, 222, 232, 233], "uniniti": [128, 151, 153, 155, 179, 184, 185, 211], "metadata": 128, "succe": 128, "suitabl": [128, 195, 207, 217, 238], "rawmemoryallocationfailur": [128, 129], "thrown": [128, 136], "memadvis": [128, 129, 187], "tool": [128, 130, 132, 147, 148, 149, 195, 202, 219, 220, 246], "kokkosp": 128, "On": [128, 129, 194, 196, 201, 205, 210, 220], "leak": [128, 129, 211], "freed": [129, 201, 211], "new_siz": 129, "invalid": [129, 211], "rare": [130, 138], "offload": [130, 220], "talk": [130, 138, 150], "theoret": [130, 138, 150], "treatment": [130, 138, 150], "disclaim": [130, 138, 150, 222], "term": [130, 138, 150, 206, 211, 214, 222, 230, 243], "anyon": [130, 138, 150, 214], "who": [130, 138, 150, 204, 211, 230, 231, 233, 239, 242], "knew": [130, 138, 150], "confus": [130, 138, 150, 211], "often": [130, 137, 138, 150, 187, 194, 201, 203, 204, 205, 206, 207, 209, 211, 234, 239], "shini": [130, 138, 150], "surpris": 130, "answer": [130, 201, 211], "ll": [130, 205, 211], "nowher": 130, "intermedi": [130, 207], "incompat": [130, 196, 220], "explicit": [130, 141, 147, 153, 181, 182, 183, 187, 201, 207, 208, 221, 230], "simpli": [130, 137, 179, 196, 201, 203, 205, 209, 212, 237, 238, 239, 243], "mental": [130, 211], "exercis": [130, 222, 234], "translat": [130, 222], "tend": [130, 194, 208], "verbos": 130, "much": [130, 147, 155, 195, 200, 204, 206, 207, 209, 211, 217], "risk": [130, 195, 217, 222], "lose": 130, "caution": [130, 196], "optiopn": 130, "event": [130, 138, 152, 201, 222, 234], "unspecifi": [130, 167, 187, 208], "care": [130, 195, 209, 211], "print": [130, 132, 137, 166, 175, 183, 202, 220], "arraylayout": 130, "recommend": [130, 155, 201, 205, 207, 209, 211, 226, 234], "scratchmemoryspac": 130, "ex2": 130, "ex1": 130, "usabl": [130, 139, 211], "shorthand": [130, 138], "lh": [130, 191, 192], "sign": [130, 187, 202, 211, 225], "typetrait": [130, 138], "num_numa": 131, "ndevic": 131, "skip_devic": 131, "disable_warn": [131, 132], "favor": [131, 205], "One": [131, 155, 194, 196, 198, 201, 203, 205, 209, 211, 238, 239, 243], "distinguish": [131, 142, 207], "kokkoscor": 132, "set_num_thread": [132, 133, 135, 202], "set_device_id": [132, 202], "set_disable_warn": [132, 135], "introduc": [132, 187, 201, 205, 207, 208, 217, 233, 240], "unset": 132, "let": [132, 154, 196, 201, 203, 205, 206, 207, 210, 211, 239], "tabl": [132, 196, 202, 205, 211, 234], "set_parameter_nam": 132, "parameter_typ": 132, "parameter_nam": 132, "has_parameter_nam": 132, "get_parameter_nam": 132, "summar": 132, "id": [132, 162, 170, 173, 174, 201, 202, 203], "minu": 132, "map_device_id_bi": 132, "mpi_rank": [132, 202], "round": [132, 141, 202, 206], "robin": [132, 202], "mpi": [132, 134, 135, 194, 196, 202, 204, 210, 212, 220, 221, 235, 242, 246], "disabl": [132, 196, 202, 220, 221], "messag": [132, 202, 204, 210, 230, 232, 234], "configur": [132, 137, 202, 209, 218, 220, 222, 230, 232, 233, 234, 240], "tune_intern": 132, "autotun": [132, 202], "heurist": [132, 202], "tools_lib": 132, "full": [132, 189, 191, 194, 202, 203, 205, 208, 209], "ld_library_path": [132, 202], "tools_help": 132, "command": [132, 133, 135, 196, 212, 234], "line": [132, 133, 135, 138, 194, 196, 211, 217, 233, 245], "tools_arg": 132, "set_print_configur": 132, "set_map_device_id_bi": [132, 133, 135], "environ": [132, 134, 135, 136, 138, 170, 173, 174, 196, 203, 207, 211, 212, 221, 225, 232, 234], "raii": [133, 162, 163], "is_inti": 133, "is_fin": [133, 134, 135, 149, 168], "lifetim": [133, 201], "charact": [133, 222], "uncondition": 133, "precondit": 133, "is_initi": [133, 134, 135, 168], "unique_ptr": 133, "make_opt": 133, "nullopt": 133, "clean": [134, 232], "destroi": [134, 162, 205, 211, 227], "ill": 134, "mpi_fin": [134, 202], "push_finalize_hook": 134, "regist": [134, 136, 175, 193, 194, 201, 209, 218], "invoc": 134, "erron": 135, "pars": [135, 196, 202], "whenev": [135, 205, 211], "seen": [135, 195, 204, 234], "decrement": [135, 187, 194, 211], "implicitli": [135, 179, 187], "multibyt": 135, "backward": [135, 191, 193, 224], "mpi_init": [135, 202], "enter": [136, 203, 204, 211, 244], "exit": [136, 163, 202], "my_hook": 136, "cruel": 136, "world": [136, 175], "goodby": 136, "kokkos_macro": [137, 215], "deal": [137, 179, 205, 210, 245, 246], "fullfil": 137, "__host__": [137, 203, 221], "__device__": [137, 141, 203, 221], "markup": [137, 207], "primarili": [137, 202, 230, 231], "hurt": [137, 198], "bloat": 137, "excess": 137, "sycl_extern": 137, "unit": [137, 138, 196, 201, 203, 204, 206, 231], "count_even": 137, "lcount": 137, "scope_guard": 137, "captur": [137, 147, 201, 207, 211, 217, 237, 243], "claus": [137, 201, 207, 214, 243], "syntax": [137, 201, 207, 210, 211, 220], "print_data": 137, "data_copi": 137, "deduct": 137, "2f": 137, "side": [138, 146, 168, 187, 201, 207, 208, 210, 231], "virtual": [138, 211, 224], "xnack": 138, "movement": 138, "os": 138, "driver": [138, 234, 240], "moment": [138, 196, 211], "preprocessor": [138, 196, 212, 245], "kokkos_has_shared_spac": 138, "has_shared_spac": [138, 240], "stai": [138, 149], "nevertheless": [138, 201, 205, 206, 211], "kokkos_has_shared_host_pinned_spac": 138, "has_shared_host_pinned_spac": 138, "bit_cast": 139, "byteswap": 139, "has_single_bit": 139, "bit_ceil": 139, "bit_floor": 139, "bit_width": 139, "rotl": 139, "rotr": 139, "countl_zero": 139, "countl_on": 139, "countr_zero": 139, "countr_on": 139, "popcount": 139, "reinterpret": 139, "represent": [139, 209, 211], "counterpart": 139, "_builtin": 139, "suffix": [139, 141], "magic": 139, "log2": [140, 141], "log10": [140, 141, 191], "inv_pi": 140, "inv_sqrtpi": 140, "ln2": 140, "ln10": 140, "sqrt3": 140, "inv_sqrt3": 140, "egamma": 140, "toolchain": [140, 196, 221], "henc": [140, 205, 207, 211, 221], "pi_v": 140, "motiv": [141, 204, 209, 217, 242], "borrow": 141, "llvm": [141, 222], "compilecudawithllvm": 141, "clang": [141, 196, 212, 226, 232, 233, 246], "ok": [141, 156, 158, 160, 187, 211, 221], "everyth": [141, 209, 211, 217], "nvcc": [141, 196, 226, 232], "overrid": [141, 196, 205, 212], "sinf": 141, "goal": [141, 201, 203, 204, 217, 230, 234, 238, 242], "cmath": 141, "sqrtf": 141, "sqrtl": 141, "integraltyp": 141, "arithmet": [141, 142, 164], "reader": [141, 195, 196, 204, 206], "cpprefer": 141, "com": [141, 213, 218, 219, 221, 225, 231, 232, 233], "fmod": 141, "remaind": 141, "remquo": 141, "fma": [141, 191], "fmax": 141, "fmin": 141, "fdim": 141, "nan": 141, "exp": [141, 191], "exp2": [141, 191], "expm1": 141, "log": [141, 191, 232], "log1p": 141, "exponenti": 141, "pow": [141, 191], "cbrt": [141, 191], "hypot": [141, 191], "co": [141, 191, 195, 230], "tan": [141, 191], "asin": [141, 191], "aco": [141, 191], "atan": [141, 191], "atan2": [141, 191], "trigonometr": 141, "sinh": [141, 191], "cosh": [141, 191], "tanh": [141, 191], "asinh": [141, 191], "acosh": [141, 191], "atanh": [141, 191], "hyperbol": 141, "erf": [141, 191], "erfc": [141, 191], "tgamma": [141, 191], "lgamma": [141, 191], "gamma": 141, "ceil": [141, 191], "floor": [141, 191], "trunc": [141, 191], "lround": 141, "llround": 141, "nearbyint": 141, "rint": 141, "lrint": 141, "llrint": 141, "frexp": 141, "ldexp": 141, "modf": 141, "scalbn": 141, "scalbln": 141, "ilog": 141, "logb": 141, "nextaft": 141, "nexttoward": 141, "copysign": [141, 191], "fpclassifi": 141, "isfinit": 141, "isinf": 141, "isnan": 141, "isnorm": 141, "signbit": 141, "isgreat": 141, "isgreaterequ": 141, "isless": 141, "islessequ": 141, "islessgreat": 141, "isunord": 141, "classif": 141, "4767": 141, "feel": [141, 213], "keep": [141, 205, 210, 211, 217, 242], "track": [141, 217, 222, 230, 231], "bewar": [141, 205], "unqualifi": [141, 221], "qualif": [141, 221], "p1841": 142, "break": [142, 187, 195, 212], "monolith": 142, "apart": [142, 194, 195, 211], "infin": 142, "finite_min": 142, "finite_max": 142, "epsilon": 142, "round_error": 142, "norm_min": 142, "denorm_min": 142, "reciprocal_overflow_threshold": 142, "quiet_nan": 142, "signaling_nan": 142, "characterist": [142, 206, 208, 211, 234, 244], "digit": 142, "digits10": 142, "max_digits10": 142, "radix": 142, "min_expon": 142, "min_exponent10": 142, "max_expon": 142, "max_exponent10": 142, "finite_min_v": 142, "floatingpoint": 142, "norm_min_v": 142, "finite_max_v": 142, "epsilon_v": 142, "round_error_v": 142, "infinity_v": 142, "quiet_nan_v": 142, "signaling_nan_v": 142, "denorm_min_v": 142, "digits_v": 142, "digits10_v": 142, "max_digits10_v": 142, "radix_v": 142, "min_exponent_v": 142, "min_exponent10_v": 142, "max_exponent_v": 142, "max_exponent10_v": 142, "presenc": [142, 221], "absenc": 142, "has_infin": 142, "enable_if_t": 142, "legacy_std_numeric_limits_infin": 142, "kokkos_execpolici": [143, 144, 145], "policytyp": [143, 144, 145], "recommended_team_s": [143, 144, 145], "outstand": [146, 180, 206, 222], "exec1": 146, "exec2": 146, "touch": [146, 211, 217], "wait": [146, 154, 164, 201, 207, 244], "finish": [146, 147, 180, 194, 207, 211], "asynchron": [147, 148, 180, 206, 207, 211, 220, 221, 241, 246], "calle": 147, "execpolici": [147, 148, 149], "functortyp": [147, 148, 149, 155], "hook": [147, 148, 149, 202], "integertyp": [147, 148, 149], "work_tag": [147, 148, 149, 153, 155], "iN": [147, 148], "loop1": [147, 148, 149], "greet": 147, "taga": 147, "implicit": [147, 152, 157, 159, 161, 187, 201, 207, 237, 241], "tagb": 147, "thread_rank": 147, "loop2": [147, 148], "deduc": [148, 151, 153, 178, 205, 210, 242], "reducerargu": 148, "reducerargumentnonconst": 148, "fulfil": [148, 199, 200], "handletyp": [148, 149], "reducervaluetyp": 148, "value_count": [148, 207], "overwritten": [148, 149, 154, 211], "neutral": [148, 149], "lsum": [148, 152, 157, 159, 161, 201], "lmin": [148, 198], "tagmax": 148, "tagmin": 148, "lmax": 148, "team_rank": [148, 154, 201, 203], "returntyp": 149, "return_valu": 149, "postfix_sum": 149, "prefix_sum": 149, "partial_sum": 149, "li": 149, "domin": [150, 204], "elsewher": 150, "parallel_pattern": 150, "hand": [150, 194, 201, 205, 209, 220], "wavi": 150, "beginn": [150, 225], "tile": [151, 211, 238], "interv": [151, 153, 155], "outer": [151, 201, 211, 238], "inner": [151, 201, 211], "ot": 151, "IT": 151, "tt": 151, "de": [151, 153, 222, 230], "someexecutionspac": [151, 153], "se": [151, 153], "pl0": 151, "pl1": 151, "pl4": 151, "pl5": 151, "ctile": 151, "pc0": 151, "pc1": 151, "pc2": 151, "pc3": 151, "pc4": 151, "pc5": 151, "abegin": 151, "aend": 151, "atil": 151, "pa0": 151, "pa1": 151, "pa2": 151, "pa3": 151, "pa4": 151, "pa5": 151, "tile_typ": 151, "tile_size_recommend": 151, "array_index_typ": 151, "max_total_tile_s": 151, "policy_1": [151, 153, 155, 201], "policy_2": [151, 153, 155, 201], "t0": 151, "t1": [151, 165, 169], "t2": [151, 165, 169, 176], "teammembertyp": [152, 157, 159, 161], "threadvectorrangeboundariesstruct": 152, "threadsinglestruct": 152, "vectorsinglestruct": 152, "team_barri": [152, 154, 156, 157, 158, 159, 160, 161, 201], "encount": [152, 183, 221, 244], "thread_sum": 152, "team_sum": [152, 157, 159, 161, 201], "a_rowsum": [152, 156, 157, 158, 159, 161], "chunksiz": 153, "policytrait": 153, "inherit": [153, 180, 234], "schedule_typ": [153, 155], "iteration_pattern": [153, 155], "launch_bound": [153, 155], "work_begin": 153, "work_end": 153, "work_spac": 153, "discret": [153, 164, 198, 238], "chunk_size_": 153, "workgroup": 153, "6754": 153, "convers": [153, 169, 203, 209, 222, 230, 237, 243], "cs": [153, 207], "rp0": 153, "rp1": 153, "rp2": 153, "rp3": 153, "rp4": 153, "rp5": 153, "rp6": 153, "policy_3": [153, 155, 201], "policy_4": [153, 155], "policy_6": 153, "policy_7": 153, "teamtask": 154, "subject": [154, 171, 195, 211, 222], "leagu": [154, 155, 201, 208, 244], "league_s": [154, 155, 201], "workitem": 154, "team_shmem": [154, 201], "team_scratch": [154, 201], "thread_scratch": 154, "lexic": [154, 195], "arriv": [154, 201], "team_broadcast": 154, "source_team_rank": 154, "var": 154, "broadcast": [154, 201], "reducertyp": 154, "team_reduc": 154, "across": [154, 175, 204, 206, 208, 209, 217, 219], "team_scan": 154, "policy_typ": 154, "set_scratch_s": [154, 155, 201], "4096": 154, "tid": 154, "lid": 154, "scratch_memory_typ": 154, "vector_length": [155, 215], "auto_t": 155, "lazili": 155, "perteamvalu": 155, "per_team": 155, "perthreadvalu": 155, "per_thread": 155, "closest": 155, "bandwidth": [155, 201, 208, 209, 211], "twice": [155, 211], "overwrit": [155, 196, 207], "scratch_size_max": 155, "maxim": [155, 203], "scratch_siz": 155, "team_size_": 155, "team_scratch_s": 155, "thread_scratch_s": 155, "policy_5": 155, "extent_1": [156, 158, 160], "extent_2": [156, 158, 160, 211], "extent_i": [156, 158, 160], "violat": [156, 158, 160, 201, 205, 207, 211], "num": [156, 158, 160, 202, 234], "leaguerank": [156, 158, 160], "teamsum": [156, 158, 160], "threadsum": [156, 160, 161], "leaguesum": [156, 158], "itype1": [157, 159, 161], "itype2": [157, 159, 161], "teamtyp": 158, "vectorsum": [158, 160], "tsum": 161, "kokkos_profiling_profilesect": [162, 215], "stop": 162, "leav": [162, 203, 211, 241], "sectionnam": 162, "createprofilesect": 162, "sectionid": 162, "destroyprofilesect": 162, "startsect": 162, "stopsect": 162, "scopedregion": 162, "ownership": [162, 163, 222], "kokkos_profiling_scopedregion": 163, "push": [163, 203, 226, 232], "pop": 163, "flow": [163, 234], "earli": [163, 206, 233], "regionnam": 163, "pushregion": 163, "popregion": 163, "do_work_v1": 163, "myapp": 163, "cond": 163, "rememb": [163, 205, 211, 234], "do_work_v2": 163, "profilingsect": [163, 215], "weight": 164, "fraction": 164, "is_arithmetic_v": 164, "n_partit": 164, "3rd": 164, "stream": [164, 180, 208, 211, 220, 221, 246], "otherparam": 164, "param": [164, 227], "f1": [164, 244], "f2": [164, 244], "functor1": 164, "functor2": 164, "f3": 164, "functor3": 164, "kokkos_pair": [165, 215], "fulli": [165, 187, 205, 239], "std_pair": 165, "int_float": 165, "converted_std_pair": 165, "converted_kokkos_pair": 165, "to_std_pair": 165, "first_typ": 165, "second_typ": 165, "kokkos_defaulted_funct": [165, 217], "kokkos_forceinline_funct": [165, 199], "wise": [165, 181, 182, 183], "msg": 166, "kokkos_abort": 166, "ndebug": 168, "assert": [168, 186, 209, 221, 222], "diagnost": 168, "text": [168, 222], "predefin": [168, 201], "__file__": 168, "__line__": 168, "imag": 169, "real": [169, 237], "imaginari": 169, "im": 169, "realtyp": 169, "nodiscard": [170, 173, 174], "announc": [171, 230], "clamp": [172, 215], "boundari": [172, 210], "kokkos_clamp": [172, 195], "kokkos_minmax": [172, 195], "cerr": 173, "kokkos_printf": 175, "format": [175, 203, 211, 233], "stdout": 175, "hello": [175, 205], "is_nothrow_move_constructible_v": 176, "is_nothrow_move_assignable_v": 176, "resolut": [176, 199, 230, 231, 243], "unless": [176, 195, 196, 207, 209, 211, 220, 222, 245], "is_move_constructible_v": 176, "is_move_assignable_v": 176, "swappabl": 176, "yield": [176, 187, 245], "ambigu": [176, 221], "situat": [176, 194, 197, 206, 209, 230, 243], "adl": 176, "measur": [177, 206], "time1": 177, "time2": 177, "impl_detail": [178, 186], "view_arg": 178, "subviewhold": 178, "a_view": 179, "sole": [179, 195, 204, 222], "host_mirror": 179, "host_mirror_view": 179, "memory_space_inst": 179, "mirror_view": 179, "withoutiniti": [179, 184, 185, 188, 211, 215], "implmirrortyp": 179, "conduct": [179, 230, 233], "circumst": [180, 230], "viewdest": 180, "viewsrc": [180, 187, 227], "copy_spac": 180, "submit": [180, 201, 222, 234], "necessarili": [180, 201, 203, 208, 211, 222], "cudamemcpyasync": 180, "d_a": [180, 203], "d_a_2": 180, "d_a_5": 180, "h_a": [180, 203, 241], "h_a_2": 180, "d_a_2_5": 180, "deviceview": 180, "temporari": [180, 198, 208, 211, 221], "h_view_tmp": 180, "lai": [181, 182, 183], "convent": [181, 182, 208, 211, 220], "signifi": [181, 182, 183], "is_extent_construct": [181, 182, 183], "full_mesh": 183, "mesh": [183, 236], "mesh_subcompon": 183, "z": [183, 191, 209, 225], "frequent": 183, "noncontigu": [183, 211], "array_layout_max_rank": 183, "s0": 183, "s4": 183, "s5": 183, "s6": 183, "s7": 183, "order_dimens": 183, "itypeord": 183, "itypedimen": 183, "dimen": 183, "3d": [183, 203, 237], "grow": [184, 185, 204], "subext": 185, "191": 186, "subset": [186, 193, 194, 196, 210, 234], "arg_r": 186, "remove_const_t": [186, 210], "s3415": 186, "star": 187, "bracket": 187, "2d": [187, 198, 203, 237], "5d": 187, "Their": [187, 242], "integral_const": [187, 191, 192], "nullari": 187, "encourag": [187, 196, 201, 212, 214, 233], "akin": [187, 238], "_dynam": 187, "msvc": [187, 196, 226], "is_manag": 187, "natural_mdspan_typ": 187, "md": [187, 232], "Be": [187, 207], "upgrad": 187, "array_layout_from_map": 187, "elementtyp": 187, "extentstyp": 187, "accessortyp": 187, "see_below": 187, "i7": 187, "is_assign": 187, "assign_data": 187, "arg_data": 187, "anywai": [187, 203], "otherelementtyp": 187, "otherext": 187, "otherlayoutpolici": 187, "otheraccessor": 187, "otheraccessortyp": 187, "default_accessor": 187, "to_mdspan": 187, "other_accessor": 187, "data_handle_typ": 187, "viewdst": [187, 227], "dynamic_rank": 187, "a1": [187, 211, 244], "a2": [187, 220, 244], "a3": [187, 244], "a4": 187, "a5": 187, "a6": 187, "a7": 187, "a8": 187, "a9": 187, "a10": [187, 220], "a11": 187, "a12": 187, "a13": 187, "dictat": 187, "extents_typ": 187, "static_ext": 187, "dynamic_ext": 187, "layout_typ": 187, "layout_left_pad": 187, "layout_right_pad": 187, "layout_strid": 187, "accessor_typ": 187, "viewstr": 188, "view_wrap": 188, "pointer_to_wrapping_memori": 188, "bypass": 188, "allowpad": 188, "unspel": 188, "raw": [188, 201, 207, 215, 221], "notabl": 189, "simd_mask": [190, 191, 193, 209], "where_express": 190, "kokkos_simd": [191, 192, 193, 209], "abi": [191, 192, 193, 209], "simd_abi": [191, 192], "fallback": [191, 192], "nativ": [191, 192, 211], "extract": [191, 192, 203, 238], "mask_typ": [191, 192, 209], "abi_typ": [191, 192], "copy_from": [191, 193, 209], "simd_flag": [191, 193], "copy_to": [191, 193, 209], "simd_flag_default": [191, 193], "simd_flag_align": [191, 193], "element_aligned_tag": [191, 193, 209], "vector_aligned_tag": [191, 193], "mag": 191, "sgn": 191, "native_simd": [191, 193, 209], "simd_alignment_vector_align": 191, "simd_typ": [191, 192, 193, 209], "zu": 191, "simd": [192, 219, 224, 246], "iff": 192, "native_simd_mask": [192, 209], "basi": [193, 196, 222, 238], "const_where_express": 193, "scatter_to": 193, "gather_from": 193, "safer": 193, "domain": [193, 213], "chapter": [194, 196, 201, 203, 206, 207, 208, 210, 211, 234], "understand": [194, 196, 203, 205, 206, 210, 211, 220], "resolv": [194, 217, 230], "histogram": 194, "create_histogram": 194, "try": [194, 202, 206, 211, 212, 214, 217, 230], "lost": 194, "race": [194, 203, 206, 236], "particl": [194, 242, 243], "neighbour": 194, "forc": [194, 196, 201, 206, 208, 209, 243], "compute_forc": 194, "forceloop": 194, "neighbor": [194, 243], "particle_id": 194, "neighbour_id": 194, "some_contribut": 194, "colour": 194, "ii": [194, 203, 222, 237], "iii": [194, 222], "disadvantag": 194, "transfer": [194, 211, 222], "uninterrupt": 194, "cycl": [194, 196, 230, 231, 234], "hinder": 194, "throughput": [194, 204], "createhistogram": 194, "scheme": 194, "find_indic": 194, "findindic": 194, "div": 194, "lshift": 194, "mod": 194, "mul": 194, "rshift": 194, "sub": [194, 210, 217], "xor": 194, "histogram_atom": 194, "transpar": 194, "clever": 195, "constitut": [195, 201, 222, 234], "tension": 195, "freedom": 195, "frustrat": [195, 209], "pain": 195, "deliber": [195, 222], "accident": [195, 217, 230], "breakag": [195, 230], "kokkos_": [195, 220], "chanc": 195, "inadvert": 195, "broken": 195, "kokkos_impl_": 195, "notic": [195, 205, 220, 222, 239, 240], "period": [195, 230], "hous": 195, "prime": 195, "incomplet": 195, "newer": [195, 196, 226], "particularli": [195, 238], "problemat": [195, 245], "obei": 195, "interfer": [195, 206], "collis": [195, 206], "prefac": 195, "myproject_": 195, "disambigu": 195, "cap": 195, "usual": [195, 196, 203, 206, 207, 211, 232], "syntact": 195, "revis": [195, 222, 230], "behind": [195, 209, 237, 241], "publish": 195, "drive": [195, 209], "advantag": [195, 209, 241, 243], "workaround": [195, 232], "older": [195, 220, 230], "recompil": 195, "occasion": [195, 226], "overal": [195, 211, 234, 241], "migratori": 195, "evolutionari": 195, "ideal": [195, 230], "wrong": [195, 210, 211], "wast": [195, 211], "continu": [195, 196, 203, 204, 212, 230, 234, 239], "subdirectori": [195, 196], "union": [195, 222], "fashion": [195, 210], "invok": [195, 206, 211, 220], "explain": [196, 201, 205, 206, 211, 217], "embed": [196, 204, 222], "mix": [196, 203, 206, 211, 212, 226], "advic": [196, 221], "mainli": [196, 211], "directori": [196, 222, 225, 230, 232, 234], "protect": [196, 201, 203, 204, 206, 209, 245], "prevent": [196, 201, 203, 211, 221, 236], "kokkoscore_config": 196, "h": [196, 213, 221, 235, 241], "mention": [196, 234], "compliant": [196, 205], "date": [196, 220, 222, 230, 232], "nightli": [196, 234], "readm": [196, 214, 232, 234], "repositori": [196, 230, 232, 233], "At": [196, 202, 205, 207, 209, 211, 220, 230, 234], "88": [196, 226], "nvc": [196, 226, 233], "rocm": [196, 205, 225, 226], "xl": [196, 226, 232], "fujitsu": [196, 226], "arm": [196, 226], "linkag": [196, 226], "fopenmp": 196, "hwloc": [196, 202, 220, 234], "As": [196, 197, 201, 204, 205, 206, 207, 209, 212, 222, 234, 239], "robust": [196, 212, 230], "strongli": [196, 211, 212], "cmakelist": [196, 212], "txt": [196, 202, 212, 222], "find_packag": [196, 212, 220], "target_link_librari": [196, 212], "mytarget": [196, 212], "processor": [196, 201, 204, 206, 208, 234], "dkokkos_root": [196, 212, 225], "lib64": 196, "especi": [196, 205, 206, 207, 209, 221, 231, 234, 240], "nvcc_wrapper": 196, "dcmake_cxx_compil": [196, 212, 225], "bin": [196, 221], "cmake_cxx_flag": 196, "propag": [196, 212], "add_subdirectori": [196, 212], "dir": [196, 220], "include_directori": 196, "kokkos_include_dirs_ret": 196, "arch": 196, "mkdir": [196, 232], "cd": [196, 225, 232], "srcdir": [196, 212], "dcmake_install_prefix": [196, 212, 225], "my_install_fold": 196, "dkokkos_enable_openmp": [196, 212, 225], "parti": [196, 203, 206, 212, 221, 222], "altern": [196, 203, 209, 212, 220, 234], "download": [196, 212, 234], "env": [196, 212], "folder": [196, 212], "setup": [196, 212, 220, 234, 241], "sh": [196, 212, 234], "variant": [196, 207, 211, 212, 230], "deactiv": [196, 212], "chosen": [196, 212], "exact": [196, 212], "info": [196, 212, 219, 220], "hash": [196, 211, 212], "human": [196, 212], "readabl": [196, 209, 212, 222], "spec": [196, 212], "dii": 196, "wish": [196, 202], "downstream": [196, 212, 218], "almost": [196, 204, 209, 236], "myproject": 196, "myvers": 196, "idiosyncrasi": 196, "annoi": 196, "dspack_workaround": 196, "spack_workaround": 196, "spack_cxx": 196, "cmake_cxx_compil": 196, "cxx": [196, 237], "technolog": [196, 204, 222], "orient": [196, 243], "softwar": [196, 204, 209, 222, 230, 233], "framework": [196, 206, 213], "solut": [196, 204, 205, 209, 222, 230, 234, 238], "larg": [196, 209, 211, 212, 217, 220, 238, 244], "multiphys": 196, "scientif": [196, 204, 211], "problem": [196, 203, 204, 217, 231, 234, 240], "organ": [196, 218, 220, 230, 231, 243], "stand": 196, "trilinos_enable_kokko": 196, "tpetra": 196, "infer": [196, 210], "trilinos_enable_openmp": 196, "ON": [196, 212, 220, 222, 225], "autogener": 196, "cmake_c_compil": 196, "cmake_fortran_compil": 196, "kokkos_arch_": [196, 220], "archcod": 196, "kokkos_arch_hsw": [196, 220], "haswel": [196, 234], "uvm": [196, 203, 208, 211, 239], "export": 196, "cuda_launch_block": [196, 212], "cuda_managed_force_device_alloc": [196, 212], "aris": [196, 222], "stabil": 196, "symbol": 196, "ln": 196, "kokkos_source_dir_overrid": 196, "kokkoskernel": 196, "kokkoskernels_source_dir_overrid": 196, "script": [196, 212, 232, 233], "ompi_cxx": 196, "openmpi": [196, 202], "digest": 196, "matter": [196, 206, 217], "kokkos_link_depend": 196, "kokkos_cpp_depend": 196, "kokkos_cppflag": 196, "kokkos_cxxflag": 196, "kokkos_ldflag": 196, "kokkos_lib": 196, "tutori": [196, 204, 219], "kokkos_path": [196, 232], "IN": [196, 222], "root": [196, 209, 220, 225], "cuda_path": 196, "toolkit": [196, 220, 232], "kokkos_devic": 196, "kokkos_arch": [196, 209], "knl": [196, 220, 232], "knc": [196, 220], "snb": [196, 220], "hsw": [196, 220], "bdw": [196, 220], "kepler30": 196, "kepler35": 196, "kepler37": 196, "maxwell50": 196, "pascal60": 196, "pascal61": 196, "armv81": [196, 220], "kokkos_use_tpl": 196, "kokkos_opt": 196, "aggressive_vector": 196, "kokkos_cuda_opt": [196, 207], "force_uvm": 196, "use_ldg": 196, "rdc": [196, 220], "enable_lambda": [196, 207], "hwloc_path": 196, "ye": [196, 202], "kokkos_cxx_standard": 196, "lib": [196, 202], "cxxflag": [196, 234], "emb": 196, "metaprogram": [196, 211], "shortcom": 196, "prepend": 196, "xcompil": 196, "shell": [196, 212, 234], "analyz": [196, 234], "correctli": [196, 207, 212, 217], "ccbin": 196, "edit": [196, 206, 228, 230, 232, 234], "nvcc_wrapper_default_compil": 196, "peopl": [196, 205, 218], "modul": [196, 208, 225, 232, 234, 237, 246], "icpc": 196, "pgc": 196, "attach": [196, 202, 222, 229, 234, 244], "degrad": [196, 205], "accommod": 197, "click": [197, 228], "head": [197, 244], "summat": 198, "parabl": 198, "minreduc": 198, "min_reduc": 198, "minloc_typ": 198, "minlocreduc": 198, "lminloc": 198, "reducer_typ": 198, "team_typ": 198, "team_minmaxloc": 198, "row_minmaxloc": 198, "thread_minmaxloc": 198, "gui": [198, 207, 246], "team_minmax": 198, "the_arrai": 199, "tr": [199, 200], "upd": [199, 200], "ndx": [199, 200], "myarrai": 200, "summyarrai": 200, "references_scalar": 200, "arraysumresult": 200, "exploit": [201, 238], "parallel_": [201, 208, 211, 215], "node": [201, 204, 208, 219, 234, 235, 244], "modern": [201, 212], "character": [201, 208], "higher": [201, 204, 220], "orthogon": [201, 206], "heterogen": [201, 202, 208, 234, 242], "cluster": [201, 239], "multicor": [201, 204, 206, 208], "hyper": 201, "instruct": [201, 209, 214], "socket": [201, 212], "network": [201, 234], "llc": [201, 222], "l1": 201, "l2": 201, "sm": 201, "warp": [201, 203, 211], "wave": 201, "collabor": [201, 204], "close": [201, 207, 209, 214, 230], "adapt": [201, 205, 208], "suggest": [201, 234], "tightli": [201, 238, 246], "gather": 201, "choic": [201, 203, 206, 211, 212], "sometim": [201, 211, 212, 231, 232], "flat": [201, 244], "grid": [201, 203, 210], "inter": [201, 206], "guess": 201, "n_workset": 201, "choos": [201, 202, 207, 208, 211, 217, 220, 222], "sometag": 201, "action": [201, 230, 231, 233, 234], "team_memb": [201, 244], "coordin": [201, 217], "everyon": 201, "consum": 201, "indirect": [201, 222], "workset": 201, "recycl": 201, "cell": [201, 238], "team_shmem_s": 201, "double_s": 201, "team_shared_a": 201, "get_shmem": 201, "team_shared_b": 201, "160": 201, "kilobyt": 201, "gigabyt": 201, "mostli": [201, 203, 217], "shared_int_2d": 201, "shared_s": 201, "shmem_siz": 201, "layer": [201, 203, 204, 209, 221, 237], "teamthreadloop": 201, "threadvectorloop": 201, "consciou": [201, 217], "difficult": [201, 209, 238], "catch": [201, 211, 217, 230, 233], "loop_count": 201, "emploi": [201, 204, 206], "prepar": [201, 222, 232], "stage": 201, "innermost": 201, "compris": [201, 206], "workset_s": 201, "vectoriz": 201, "decor": 201, "pragma": [201, 203, 207], "ivdep": 201, "repetit": [201, 209], "bodi": [201, 211, 226, 244], "shared_arrai": 201, "somefunct": [201, 203], "global_arrai": 201, "my_offset": 201, "inner_lsum": 201, "inner_": 201, "_finalize_": 202, "subpackag": [202, 211], "alphabet": [202, 219], "interpret": 202, "openacc": [202, 204], "sup": 202, "quot": [202, 209], "whitespac": 202, "delimit": [202, 211], "insensit": 202, "promis": [202, 206, 207, 208], "conflict": [202, 211, 217, 220, 222], "mvapich": 202, "slurm": 202, "deriv": [202, 204, 205, 222], "mpich": [202, 220], "dash": 202, "underscor": 202, "kokkos_num_thread": 202, "set_xxx": 202, "xxx": 202, "has_xxx": 202, "get_xxx": 202, "setting": 202, "shut": 202, "down": [202, 205, 240], "atexit": 202, "mpi_comm_self": 202, "adopt": [203, 208], "facilit": 203, "lift": 203, "inde": [203, 211, 243], "cumbersom": 203, "__cuda_arch__": 203, "blockidx": 203, "threadidx": 203, "blockdim": 203, "omp_set_num_thread": 203, "bookkeep": 203, "ask": [203, 206, 208, 211, 217, 230, 233], "princip": 203, "insur": 203, "app": 203, "placement": [203, 205], "150": 203, "2d_arrai": 203, "200": [203, 211, 217], "scenario": [203, 208, 209, 225], "receiv": [203, 222, 234], "straight": 203, "mykokkosfunct": 203, "host_spac": 203, "t_1d_device_view": 203, "t_2d_device_view": 203, "d_b": 203, "h_b": 203, "t_team": 203, "t_1d_view": 203, "t_3d_view": 203, "had": [203, 243], "whatev": 203, "a_old": 203, "unfortun": [203, 205, 243], "unrestrict": 203, "bring": [203, 207, 217, 237], "massiv": 203, "penalti": [203, 211], "1000": [203, 207, 211, 217], "uneven": 203, "polymorph": [203, 208, 211, 213], "bla": [203, 211, 246], "matric": [203, 211], "dot": 203, "cubla": 203, "kokkos_have_cuda": 203, "call_cublas_dot": 203, "ptr_on_devic": 203, "extent_0": [203, 211], "cbla": 203, "call_cblas_dot": 203, "field": [204, 205, 230, 232, 238, 242], "hpc": [204, 219, 220, 230, 243], "verg": 204, "era": [204, 213], "angl": 204, "rate": 204, "flop": 204, "poor": 204, "workload": 204, "challeng": 204, "energi": 204, "mid": 204, "1990": [204, 207], "enjoi": 204, "seemingli": 204, "homogen": [204, 206, 234, 242], "decad": 204, "commun": [204, 210, 217, 221, 222, 230, 231, 239, 241], "realiz": 204, "review": [204, 216, 230, 233, 234], "broad": 204, "latenc": [204, 206, 211], "medium": [204, 222], "graphic": [204, 206, 220], "gp": 204, "toler": 204, "degre": [204, 208], "divers": 204, "interest": [204, 209, 227, 230], "heritag": 204, "offer": [204, 220, 222], "guidelin": [204, 221], "todai": [204, 206], "cilk": 204, "tbb": 204, "linux": 204, "contemporari": [204, 206], "opencl": 204, "Such": [204, 237, 238], "varieti": [204, 234, 242], "pose": 204, "reminisc": 204, "becam": 204, "invest": [204, 211], "seek": [204, 217], "isol": 204, "fluctuat": 204, "coverag": 204, "supplementari": 204, "gradual": 204, "idea": [205, 211, 217], "odditi": 205, "face": [205, 210], "2020": 205, "subtl": 205, "cleanup": [205, 232], "disclos": 205, "glanc": 205, "fine": [205, 211], "crash": [205, 221], "nomin": 205, "among": [205, 234], "okai": 205, "amongst": 205, "hidden": [205, 211], "derefer": 205, "credit": 205, "articl": [205, 213], "pablo": 205, "aria": [205, 233], "faithfulli": 205, "happili": 205, "anymor": [205, 230], "therefor": [205, 211, 221, 245], "techniqu": 205, "deviceinstancememori": 205, "deviceinst": 205, "mykernel": 205, "distinct": [205, 206], "ugli": 205, "repo": [205, 219], "setafield": 205, "somehostvalu": 205, "despit": 205, "resort": 205, "myloop": 205, "kokkos_class_lambda": 205, "derivedptr": 205, "make_uniqu": 205, "oh": 205, "strictli": 205, "spell": [205, 240], "educ": 205, "slack": [205, 217, 218, 219, 225, 230, 231, 233], "aspect": [206, 208, 209, 234], "programm": [206, 207, 209, 211, 239], "exascal": [206, 213], "consult": [206, 211], "ang": 206, "elect": 206, "show": [206, 207, 208, 211, 232], "die": [206, 208], "reachabl": 206, "et": [206, 230], "al": [206, 213], "proxi": 206, "sandia": [206, 222, 234], "nation": [206, 222], "laboratori": 206, "lawrenc": 206, "berkelei": 206, "consider": 206, "finit": [206, 236, 238], "packag": [206, 213, 230, 232, 233, 238], "slower": [206, 211], "dram": 206, "volatil": [206, 208, 211, 215], "routin": [206, 217, 237, 238], "gain": 206, "topic": [206, 207, 230], "coher": [206, 211], "hennessi": 206, "paterson": 206, "weak": 206, "therebi": 206, "fifth": [206, 210], "quantit": 206, "morgan": 206, "kaufmann": 206, "tempt": 206, "author": [206, 213, 217, 222], "background": 206, "scientist": 206, "stick": 206, "proof": 206, "forbid": [206, 211], "implic": [206, 220], "filesystem": 206, "overlap": [206, 235], "reproduc": [206, 222, 231], "awai": [206, 209, 210], "wonder": 206, "great": 206, "unnecessari": [207, 211, 217], "harmless": [207, 222], "anonym": 207, "suppli": 207, "outermost": 207, "turn": [207, 209, 211], "surround": 207, "stack": [207, 211, 230, 233], "secondli": 207, "circumvent": 207, "harder": 207, "interoper": [207, 209, 224, 237, 246], "omp": [207, 234], "prior": [207, 211, 212, 221, 230, 231, 237, 241], "faster": [207, 217], "trip": 207, "fewer": 207, "encapsul": [207, 208, 210], "semir": 207, "maxplu": 207, "x_": 207, "inf": 207, "columnsum": 207, "convinc": 207, "numrow": 207, "numcol": 207, "sequenti": [207, 211, 220, 238], "blelloch": 207, "book": 207, "hi": [207, 231], "phd": 207, "dissert": [207, 209], "val_i": 207, "mit": 207, "press": 207, "necess": 207, "unus": [207, 243], "differenti": 207, "bartag": 207, "rabtag": 207, "foobar": [207, 227], "formul": 208, "vari": [208, 211], "figur": 208, "hybrid": 208, "pim": 208, "principl": [208, 211], "remot": [208, 219, 234, 246], "send": 208, "undetermin": 208, "prescript": 208, "primit": 208, "spin": 208, "dead": 208, "persist": 208, "diverg": 208, "inspir": 208, "vocabulari": [208, 234], "comfort": [208, 217], "reflect": [208, 211], "rewrit": 208, "unoptim": 208, "optimis": 208, "histori": [209, 234], "struggl": 209, "blog": [209, 221], "insight": 209, "drawback": [209, 243], "stanford": 209, "tim": 209, "folei": 209, "heart": 209, "black": 209, "box": 209, "matthia": 209, "kretz": 209, "deliv": 209, "vendor": [209, 230, 246], "fairli": 209, "pictur": 209, "clearli": [209, 217, 222], "odd": 209, "quirk": 209, "tag_typ": 209, "sx": 209, "sy": 209, "sz": 209, "sr": 209, "squar": 209, "emit": [209, 210], "4x": 209, "speedup": [209, 241], "skip": [209, 211, 221], "troublesom": 209, "pitfal": [209, 211], "evenli": 209, "divis": 209, "cleaner": 209, "wide": [209, 211, 230, 234], "reach": [209, 211, 218], "throughout": 209, "slight": 209, "quadratic_formula": 209, "x1": 209, "x2": 209, "discrimin": 209, "sqrt_discrimin": 209, "classic": [209, 226], "familiar": [209, 211, 225, 230], "quadrat": 209, "formula": 209, "liter": 209, "naiv": 209, "mimic": 209, "roadmap": [209, 230], "regard": [209, 222], "very_expensive_funct": 209, "statement": [209, 222], "spend": [209, 211], "lot": [209, 211, 232], "pick": [210, 211, 230], "notat": 210, "vice": 210, "versa": 210, "cross": [210, 222, 233], "plane": 210, "cube": 210, "n_0": 210, "n_1": 210, "n_": 210, "a_0": 210, "a_1": 210, "a_": 210, "a_j": 210, "n_j": 210, "handi": 210, "matlab": 210, "python": [210, 219, 232, 234, 246], "colon": 210, "fourth": 210, "elabor": [210, 222], "a_sub": 210, "won": [210, 211, 217], "cheaper": 210, "keyword": [210, 212, 215, 219], "easiest": [210, 212], "said": 210, "dens": [210, 219, 246], "inconveni": 210, "my_view_typ": 210, "my_subview_typ": 210, "my_subview_type_deduc": 210, "fast": [211, 232], "intim": 211, "factor": 211, "coder": 211, "tie": 211, "hard": 211, "evolv": 211, "reliev": 211, "burden": [211, 230], "ty": 211, "expert": 211, "easi": [211, 212], "ellips": 211, "asterisk": 211, "typecast": 211, "a_ptr": 211, "malloc": 211, "a0": 211, "arbitrarili": 211, "unprotect": 211, "badli": 211, "advis": [211, 222], "deconstructor": 211, "disallow": 211, "indirectli": 211, "novic": 211, "THE": [211, 222, 232], "FOR": [211, 222], "IS": [211, 222], "NO": [211, 222], "rag": 211, "reorgan": 211, "v_outer": 211, "assigne": 211, "wors": 211, "yourself": [211, 232], "rid": 211, "inner_view_typ": 211, "outer_view_typ": 211, "numout": 211, "numinn": 211, "to_str": 211, "device_out": 211, "dispos": 211, "nonown": 211, "a_nonconst": 211, "nonconst": 211, "a_const": 211, "readonlyfunct": 211, "skew": 211, "parenthes": 211, "enclos": 211, "comma": 211, "a_ijk": 211, "rest": [211, 217], "slow": 211, "leftmost": 211, "exempt": 211, "unwind": 211, "incorrect": 211, "100x50x4": 211, "50": [211, 222], "200x50x4": 211, "300x60x4": 211, "300": 211, "java": 211, "s_1": 211, "s_2": 211, "s_3": 211, "dim1": 211, "extent_n": 211, "conserv": 211, "benefici": [211, 222], "heavi": 211, "stringent": 211, "overflow": 211, "lapack": [211, 246], "lda": 211, "morton": 211, "thereof": [211, 222], "viewmap": 211, "renam": 211, "coalesc": 211, "callbla": 211, "callsomeblasfunct": 211, "invalid_argu": 211, "100000": 211, "biject": 211, "accessspac": 211, "affin": 211, "memcopi": 211, "firstli": 211, "discourag": [211, 221], "circumv": 211, "defeat": 211, "legaci": [211, 221, 224], "legacyfunct": 211, "x_raw": 211, "len": 211, "myfunct": 211, "somelibraryfunct": 211, "reference_type_is_lvalu": 211, "sometrait": 211, "someothertrait": 211, "ca": 211, "a_atom": 211, "irregularli": 211, "a_ra": 211, "shorter": 211, "fault": 211, "prolifer": 211, "csr": 211, "spmatvec": 211, "ind": 211, "x_ra": 211, "y_i": 211, "accordingli": 211, "x_view": 211, "functionthattakeskokkosview": 211, "safest": 211, "tree": [212, 222, 232, 244], "exceedingli": 212, "devil": 212, "kokkos_install_prefix": 212, "compiler_used_to_build_kokko": 212, "cmake_polici": 212, "cmp0074": 212, "cmake_build_instal": 212, "cmake_build_in_tre": 212, "kokkos_install_fold": 212, "craype_link_typ": 212, "miss": 212, "benchmark": [212, 220, 234], "bytes_and_flop": 212, "nvlink": [212, 239], "displai": [212, 222], "dev": [212, 232, 234], "9485033": 213, "trott": [213, 222], "christian": [213, 222, 230], "lebrun": [213, 222], "grandi\u00e9": 213, "damien": [213, 222, 230], "arndt": 213, "daniel": 213, "ciesko": 213, "jan": 213, "dang": 213, "vinh": 213, "ellingwood": 213, "nathan": 213, "gayatri": 213, "rahulkumar": 213, "harvei": 213, "evan": 213, "hollman": 213, "daisi": 213, "ibanez": 213, "dan": 213, "liber": 213, "nevin": 213, "madsen": 213, "jonathan": 213, "mile": 213, "jeff": 213, "poliakoff": 213, "david": 213, "powel": 213, "ami": 213, "rajamanickam": 213, "sivasankaran": 213, "simberg": 213, "mikael": 213, "sunderland": 213, "turcksin": 213, "bruno": 213, "wilk": 213, "jeremiah": 213, "journal": 213, "ieee": 213, "transact": 213, "titl": [213, 217, 222], "2022": [213, 222, 226], "volum": 213, "805": 213, "817": 213, "doi": 213, "1109": 213, "tpd": 213, "2021": [213, 226], "3097283": 213, "ecosystem": [213, 219], "9502936": 213, "berger": 213, "vergiat": 213, "luc": 213, "grandi": [213, 222], "nader": 213, "gligor": 213, "milo": 213, "shipman": 213, "galen": 213, "womeldorff": 213, "geoff": 213, "scienc": [213, 233], "comprehens": [213, 217, 226, 232], "mcse": 213, "3098509": 213, "carteredwards20143202": 213, "manycor": 213, "3202": 213, "3216": 213, "issn": 213, "0743": 213, "7315": 213, "1016": 213, "jpdc": 213, "07": [213, 232], "003": 213, "url": 213, "sciencedirect": 213, "pii": 213, "s0743731514001257": 213, "carter": 213, "edward": 213, "pull": [214, 217, 230, 232, 234, 244], "licens": [214, 218, 219], "bsd": 214, "commerci": [214, 222], "req": 214, "activeexecutionmemoryspac": 215, "host_execution_spac": 215, "host_memory_spac": 215, "kokkos_restrict_execution_to_": 215, "data_spac": 215, "hip_safe_cal": 215, "create_inst": 215, "partition_mast": 215, "num_partit": 215, "partition_s": 215, "kokkos_openmp_inst": 215, "access_error": 215, "kokkos_hip_spac": 215, "hip_internal_safe_call_deprec": 215, "kokkos_hip_error": 215, "kokkos_openmp": 215, "openmpintern": 215, "validate_partit": 215, "getnam": 215, "getsectionid": 215, "kokkos_hip_parallel_team": 215, "kokkos_sycl_parallel_team": 215, "kokkos_openmptarget_exec": 215, "kokkos_cuda_parallel_team": 215, "kokkos_cudaspac": 215, "number_of_alloc": 215, "kokkos_hpx": 215, "masterlock": 215, "kokkos_attribute_nodiscard": 215, "amathfunct": 215, "is_reducer_typ": 215, "index_list_typ": 215, "always_use_kokkos_sort": 215, "finalize_al": 215, "withoutinitializing_t": 215, "wi": 215, "kokkos_thread_loc": 215, "thread_loc": 215, "is_view": 215, "cuda_internal_safe_call_deprec": 215, "cuda_safe_cal": 215, "trail": 215, "kokkosviewlabel": 215, "kokkos_arrai": 215, "kokkos_complex": 215, "kokkos_half": 215, "kokkos_tim": 215, "kokkos_sort": 215, "kokkos_bit": 215, "kokkos_errorreport": 215, "prospect": [216, 222], "pr": 216, "submitt": 217, "criteria": 217, "meaning": 217, "changelog": [217, 230, 232], "imo": 217, "person": [217, 230, 234], "five": 217, "bugfix": 217, "intuit": 217, "async": 217, "tangl": 217, "granular": 217, "unnecessarili": 217, "feedback": [217, 229, 230, 233], "respond": 217, "quickli": 217, "stall": 217, "bunch": 217, "feasibl": 217, "ci": 217, "happi": 217, "video": [217, 219], "contact": [217, 218, 222], "clarif": 217, "zone": 217, "quorum": 217, "audienc": [217, 230], "channel": [218, 225, 230, 231, 233], "kokkosteam": [218, 219, 231], "email": 218, "whitelist": 218, "workspac": [218, 234], "invit": [218, 230, 233], "cmake": [218, 219, 221, 225, 226, 240], "dcmake_cxx_standard": 218, "batch": [219, 246], "pykokko": 219, "checkpoint": 219, "mdspan": 219, "p0009": 219, "stdbla": 219, "p1673": 219, "quick": 219, "instal": [219, 220, 234, 239], "lectur": 219, "slide": 219, "faq": 219, "cite": 219, "sensit": 220, "recal": 220, "dkeyword_nam": 220, "ccmake": 220, "dkokkos_enable_": 220, "dkokkos_enable_cuda": [220, 225], "mutual": 220, "kokkos_enable_benchmark": 220, "kokkos_enable_exampl": 220, "kokkos_enable_test": 220, "kokkos_enable_deprecated_code_4": [220, 240], "relax": 220, "um": 220, "kokkos_enable_impl_cuda_malloc_async": 220, "cudamallocasync": [220, 221], "ucx": [220, 221], "crai": 220, "kokkos_enable_atomics_bypass": 220, "kokkos_enable_impl_hpx_async_dispatch": 220, "kokkos_enable_compiler_warn": 220, "kokkos_enable_header_self_containment_test": 220, "kokkos_enable_large_mem_test": 220, "kokkos_enable_rocthrust": 220, "rocthrust": 220, "kokkos_cuda_dir": 220, "cuda_root": [220, 225], "kokkos_hwloc_dir": 220, "hwloc_root": 220, "kokkos_libdl_dir": 220, "libdl_root": 220, "hpx_dir": 220, "hpx_root": 220, "config": [220, 232, 234], "kokkos_arch_n": 220, "kokkos_arch_a64fx": 220, "sve": 220, "kokkos_arch_amdavx": 220, "amdavx": 220, "armv80": 220, "armv8_thunderx": 220, "armv8_thunderx2": 220, "kokkos_arch_bdw": 220, "kokkos_arch_knl": 220, "kokkos_arch_skx": 220, "skx": 220, "kokkos_arch_snb": 220, "kokkos_arch_spr": 220, "sapphir": 220, "kokkos_arch_zen": 220, "kokkos_arch_zen2": 220, "kokkos_arch_zen3": 220, "eponym": 220, "microarchitectur": [220, 225], "compute_cap": 220, "autodetect": [220, 225], "h100": 220, "lovelac": 220, "l4": 220, "l40": 220, "a40": 220, "a16": 220, "a100": 220, "a30": 220, "t4": 220, "v100": 220, "p40": 220, "p4": 220, "p100": [220, 234], "m60": 220, "m40": 220, "k80": [220, 234], "k40": [220, 234], "k20": 220, "k10": 220, "amd_": 220, "kokkos_arch_amd_": 220, "architecture_flag": 220, "gfx942": 220, "gfx940": 220, "gfx1103": 220, "ryzen": 220, "8000g": 220, "gfx1100": 220, "center": 220, "1550": 220, "dg1": 220, "uhd": 220, "770": 220, "hd": 220, "510": 220, "pro": 220, "580": 220, "wherea": 220, "ahead": [220, 230], "jit": 220, "aot": 220, "cudarawmemoryallocationfailur": 221, "dkokkos_enable_impl_cuda_malloc_async": 221, "explan": 221, "partli": 221, "cudamempool_t": 221, "interprocess": 221, "ipc": 221, "tweak": 221, "interprocess_communication_support": 221, "library_compos": 221, "hsa_xnack": 221, "is_device_copy": 221, "mycompar": 221, "my_compar": 221, "usr": 221, "2572": 221, "is_device_copyable_v": 221, "oneapi": [221, 225], "dpl": 221, "pstl": 221, "hetero": 221, "dpcpp": 221, "parallel_backend_sycl": 221, "1816": 221, "isdeprecateddevicecopy": 221, "fieldt": 221, "2573": 221, "2605": 221, "checkfieldsaredevicecopy": 221, "1578": 221, "funct": 221, "__builtin_num_field": 221, "2613": 221, "checkdevicecopy": 221, "kerneltyp": 221, "handler": 221, "1652": 221, "roundedrangekernel": 221, "1694": 221, "unpack": 221, "ext": 221, "1697": 221, "kernelnam": 221, "propertiest": 221, "1293": 221, "kernel_parallel_for_wrapp": 221, "kname": 221, "transformedargtyp": 221, "2332": 221, "backtrac": 221, "ftemplat": 221, "parallel_for_lambda_impl": 221, "do_math": 221, "sqrt5": 221, "highli": 221, "z1": 221, "z2": 221, "z3": 221, "copyright": 222, "ntess": 222, "contract": [222, 241], "na0003525": 222, "govern": 222, "retain": 222, "apach": 222, "januari": 222, "2004": 222, "reproduct": [222, 233], "shall": [222, 231], "licensor": 222, "owner": [222, 232, 234, 239], "fifti": 222, "percent": 222, "permiss": [222, 232, 234], "media": 222, "authorship": 222, "appendix": 222, "editori": 222, "mere": 222, "intention": 222, "behalf": 222, "electron": 222, "verbal": 222, "sent": [222, 239], "mail": 222, "conspicu": 222, "contributor": [222, 225], "whom": 222, "incorpor": 222, "herebi": 222, "perpetu": 222, "worldwid": 222, "charg": 222, "royalti": 222, "irrevoc": 222, "publicli": [222, 233], "sublicens": 222, "patent": 222, "sell": 222, "claim": 222, "infring": 222, "institut": [222, 233], "litig": 222, "counterclaim": 222, "lawsuit": 222, "alleg": 222, "contributori": 222, "redistribut": 222, "recipi": 222, "carri": [222, 242], "promin": 222, "trademark": 222, "pertain": 222, "wherev": [222, 230], "alongsid": 222, "addendum": 222, "constru": 222, "compli": 222, "submiss": [222, 234], "notwithstand": 222, "herein": 222, "supersed": 222, "agreement": 222, "trade": 222, "servic": 222, "customari": 222, "warranti": 222, "law": 222, "AS": 222, "OF": 222, "merchant": 222, "liabil": 222, "theori": [222, 241], "tort": 222, "neglig": 222, "grossli": 222, "liabl": 222, "damag": 222, "incident": 222, "consequenti": 222, "inabl": 222, "loss": 222, "goodwil": 222, "stoppag": 222, "malfunct": 222, "fee": 222, "indemn": 222, "oblig": 222, "indemnifi": 222, "defend": 222, "incur": 222, "gplv2": 222, "court": 222, "compet": 222, "jurisdict": 222, "provis": 222, "retroact": 222, "deem": 222, "waiv": 222, "entireti": 222, "BY": 222, "BUT": 222, "exemplari": 222, "procur": [222, 230], "substitut": 222, "profit": 222, "busi": 222, "interrupt": 222, "strict": 222, "IF": 222, "SUCH": 222, "crtrott": 222, "gov": 222, "lebrungrandt": 222, "ornl": [222, 233], "introduct": [224, 234, 246], "jump": 225, "sdk": 225, "uncom": 225, "zip": 225, "tar": 225, "unzip": 225, "xzf": 225, "gz": 225, "dcmake_build_typ": 225, "dkokkos_enable_hip": 225, "hipcc": 225, "kokkos_root": 225, "rocm_path": 225, "git": [225, 232], "clone": [225, 232, 234], "build_cmake_instal": 225, "ramp": [225, 230], "unawar": 226, "appleclang": 226, "intelllvm": 226, "2023": 226, "pthread": [226, 232, 234], "wall": [226, 232], "wunus": 226, "wshadow": [226, 232], "pedant": [226, 232], "werror": [226, 232], "wsign": [226, 232], "wtype": [226, 232], "wignor": 226, "wempti": 226, "wclobber": 226, "wuniniti": 226, "master": [226, 232, 234], "rigor": 226, "some_var": 227, "frobrnic": 227, "foobat": 227, "frobnic": 227, "pencil": 228, "button": 228, "workflow": [229, 233, 236], "overarch": 230, "outdat": 230, "facto": 230, "month": [230, 232], "phase": [230, 233], "defect": 230, "upcom": 230, "seamless": 230, "anticip": 230, "soon": 230, "deploy": [230, 233], "engag": 230, "fund": [230, 233], "agenc": [230, 233], "monitor": 230, "hpe": 230, "kit": 230, "research": 230, "hackathon": 230, "chanel": 230, "bi": 230, "annual": 230, "usergroup": [230, 231], "influenc": 230, "sustain": 230, "mainten": [230, 234], "proven": 230, "committe": 230, "greatest": 230, "matur": 230, "train": 230, "bump": 230, "leadership": 230, "prioriti": [230, 231], "thrust": 230, "refin": 230, "unassign": 230, "aren": 230, "weekli": [230, 231], "reassign": 230, "obsolet": 230, "avenu": 230, "week": [230, 233], "mondai": 230, "urgent": 230, "triag": 230, "preliminari": 230, "agenda": 230, "kept": 230, "nucleu": 230, "ongo": 230, "ephemer": 230, "dai": [230, 232], "unpaid": 230, "longer": 230, "nda": 230, "wednesdai": 230, "2pm": 230, "pm": 230, "mt": 230, "00": [230, 232], "utc": 230, "zoom": 230, "six": 230, "candid": [230, 233], "cherri": 230, "nearing": 230, "delai": 230, "creation": 230, "ship": 230, "partner": [230, 231], "onto": 230, "regress": 230, "unaddress": 230, "approxim": 230, "overview": [230, 238], "enhanc": [231, 232, 243], "priorit": 231, "mileston": 231, "slot": 231, "15feb18": 232, "x86": [232, 234], "043": 232, "196": 232, "128": 232, "pgi": 232, "103": 232, "174": 232, "cygwin": 232, "64bit": 232, "test_all_sandia": [232, 234], "trilino": [232, 233, 234, 238], "atdm": 232, "lammp": [232, 233], "sparc": 232, "master_histori": 232, "snapshot": [232, 234], "nohup": 232, "tail": 232, "watch": 232, "white": [232, 234], "shepard": [232, 234], "shepard_jenkins_run_script_serial_intel": [232, 234], "pristin": [232, 234], "rerun": 232, "token": [232, 246], "oldtag": 232, "newtag": 232, "04": 232, "rubi": 232, "gitthub_changelog_gener": 232, "indevelop": 232, "cat": 232, "commit": [232, 234], "clariti": [232, 243], "noteworthi": 232, "checkout": [232, 234], "majornumb": 232, "minornumb": 232, "weekssinceminornumberupd": 232, "sha1": 232, "append": [232, 244], "03": 232, "27": 232, "da314444": 232, "29ccb58a": 232, "amend": 232, "mm": [232, 237], "dd": 232, "yyyi": 232, "sem": [232, 234], "checkin": [232, 234], "disk": [232, 241], "ram": 232, "ceerws1113": 232, "trilinos_path": 232, "pwd": 232, "untrack": 232, "py": [232, 234], "backtrack": 232, "server": [233, 234], "approv": [233, 234], "jenkin": [233, 234], "travi": 233, "durat": 233, "pipelin": 233, "verif": 233, "offici": [233, 234], "judg": 233, "thorough": 233, "wider": 233, "poc": 233, "arborx": 233, "million": 233, "nnsa": 233, "offic": 233, "snl": 233, "empir": 233, "sparta": 233, "sierra": 233, "cabana": [233, 235], "anl": 233, "petsc": 233, "advertis": 233, "role": 234, "databas": 234, "fork": 234, "privileg": 234, "865": 234, "begun": 234, "conclus": 234, "haap": 234, "secondari": 234, "outag": 234, "scroll": 234, "ohpc": 234, "srn": 234, "apollo": 234, "bowman": 234, "elli": 234, "hansen": 234, "e5": 234, "2698": 234, "kokkos_dev": 234, "ride": 234, "p8": 234, "tuleta": 234, "fireston": 234, "garrison": 234, "tesla": 234, "36": 234, "sullivan": 234, "mac": 234, "bed": 234, "connect": 234, "webcar": 234, "intranet": 234, "staff": 234, "leader": 234, "assist": 234, "csri": 234, "csu": 234, "administ": 234, "daili": 234, "regimen": 234, "suit": 234, "job": 234, "dashboard": 234, "identif": 234, "terminolog": 234, "joint": 234, "simul": [234, 239, 242, 243], "qthread": 234, "briefli": 234, "generate_makefil": 234, "bash": 234, "makefil": 234, "spot": 234, "jenkins_test_driv": 234, "testing_script": 234, "sha": 234, "accomplish": [234, 238], "prepare_trilinos_repo": 234, "shepard_jenkins_run_script_pthread_intel": 234, "white_run_jenkins_script_cuda": 234, "white_run_jenkins_script_omp": 234, "test_kokkos_master_develop_promot": 234, "checkintest": 234, "flavor": 234, "speed": 234, "central": 234, "equat": 234, "viz": 234, "accuraci": 234, "replica": 234, "nearli": 234, "hundr": 234, "unit_test": 234, "performance_test": 234, "perf_test": 234, "scrutini": 234, "inadequaci": 234, "defici": 234, "halo": 235, "averag": 235, "interop": [235, 246], "window": 235, "demonstr": [236, 237, 238, 241], "quantiti": 236, "ratio": 236, "ultim": 236, "count_adjacent_el": 236, "elements_to_nod": 236, "number_of_nod": 236, "elements_per_nod": 236, "scatter_elements_per_nod": 236, "create_scatter_view": 236, "access_elements_per_nod": 236, "node_of_el": 236, "sum_to_nod": 236, "element_valu": 236, "node_valu": 236, "scatter_node_valu": 236, "access_node_valu": 236, "average_to_nod": 236, "flcl": 237, "daxpi": 237, "ndarrai": 237, "flcl_ndarray_t": 237, "dope": 237, "flatten": [237, 238], "_flcl_nd_array_t": 237, "flcl_ndarray_max_rank": 237, "f90": 237, "nd_array_t": 237, "c_size_t": 237, "nd_array_max_rank": 237, "c_ptr": 237, "procedur": 237, "to_nd_arrai": 237, "to_nd_array_l_1d": 237, "to_nd_array_i32_1d": 237, "to_nd_array_i64_1d": 237, "to_nd_array_r32_1d": 237, "to_nd_array_r64_1d": 237, "to_nd_array_l_2d": 237, "to_nd_array_i32_2d": 237, "to_nd_array_i64_2d": 237, "to_nd_array_r32_2d": 237, "to_nd_array_r64_2d": 237, "to_nd_array_l_3d": 237, "to_nd_array_i32_3d": 237, "to_nd_array_i64_3d": 237, "to_nd_array_r32_3d": 237, "to_nd_array_r64_3d": 237, "view_from_ndarrai": 237, "axpi": 237, "flcl_mod": 237, "c_doubl": 237, "allocat": 237, "f_y": 237, "c_y": 237, "alpha": 237, "subroutin": 237, "iso_c_bind": 237, "inout": 237, "f_axpi": 237, "nd_arrai": 237, "earlier": 237, "c_axpi": 237, "nd_array_i": 237, "nd_array_x": 237, "tensor": 238, "pde": 238, "inputdata": 238, "inputfield": 238, "outputfield": 238, "tripl": 238, "paral": 238, "for_all_cel": 238, "merit": 238, "notion": 238, "natur": 238, "mdr_for_all_cel": 238, "wiki": 238, "intrepid2": 238, "intrepid2_arraytoolsdef": 238, "intrepid": 238, "complementari": 239, "scalabl": 239, "walk": 239, "source_rank": 239, "destination_rank": 239, "number_of_doubl": 239, "my_rank": 239, "mpi_comm": 239, "comm": 239, "mpi_comm_world": 239, "mpi_comm_rank": 239, "mpi_send": 239, "mpi_doubl": 239, "mpi_recv": 239, "quit": 239, "pcie": 239, "unstructur": 239, "redudantli": 239, "filter": 239, "subset_scann": 239, "keys_in": 239, "desired_key_in": 239, "subset_indices_in": 239, "m_kei": 239, "m_desired_kei": 239, "m_subset_indic": 239, "final_pass": 239, "is_in": 239, "find_subset": 239, "desired_kei": 239, "subset_s": 239, "local_sum": 239, "subset_indic": 239, "transmit": 239, "pack_messag": 239, "all_element_data": 239, "tediou": 240, "appar": 240, "acess": 240, "myview": 240, "c_style_memori": 240, "c_style_alloc": 240, "concur": 241, "stagger": 241, "littl": 241, "hostexecspac": 241, "deviceexecspac": 241, "device_range_polici": 241, "host_range_polici": 241, "viewvectortyp": 241, "viewmatrixtyp": 241, "xval": 241, "init_src_view": 241, "p_x": 241, "p_a": 241, "init_a": 241, "init_x": 241, "h_x": 241, "h_y": 241, "nrepeat": 241, "synch": 241, "yax": 241, "temp2": 241, "ini_src_view": 241, "occupi": 241, "attent": 241, "paid": 241, "opportun": [241, 243], "range_polici": 241, "v_r": 241, "v_r1": 241, "h_v": 241, "get_initial_st": 241, "get_rhs_func": 241, "serialize_st": 241, "view_r": 241, "exhibit": 242, "cabana_soa": 242, "vectorlength": 242, "membertyp": 242, "cabana_aosoa": 242, "memorymanag": 242, "evolut": 243, "particleinteract": 243, "particleposit": 243, "po": 243, "particleforc": 243, "particleneighbor": 243, "pairforc": 243, "parallelis": 243, "rectifi": 243, "qualiti": 243, "plai": 243, "tagphase1": 243, "tagphase2": 243, "compute1": 243, "compute2": 243, "prescrib": 244, "predetermin": 244, "surrog": 244, "roll": 244, "b1": 244, "b2": 244, "b3": 244, "fib": 244, "wait_list": 244, "a_f1": 244, "b_f1": 244, "b_f2": 244, "a_f2": 244, "tm": 244, "vertex": 244, "subteam": 244, "visit": 244, "vertic": 244, "exce": 244, "threshold": 244, "unvisit": 244, "frontier": 244, "edg": 244, "greatli": 244, "nominmax": 245, "uninterpret": 245, "redefin": 245, "dnominmax": 245, "intro": 246, "multidim": 246, "safeti": 246, "pga": 246, "analysi": 246, "linear": 246, "algebra": 246, "solver": 246}, "objects": {"": [[74, 0, 1, "_CPPv4I0E6Bitset", "Bitset"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_FORWARD_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_FORWARD_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_FORWARD"], [74, 1, 1, "_CPPv4N6Bitset16BIT_SCAN_REVERSEE", "Bitset::BIT_SCAN_REVERSE"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_REVERSE_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_REVERSE_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_FORWARD"], [74, 2, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset"], [74, 3, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset::arg_size"], [74, 4, 1, "_CPPv4I0E6Bitset", "Bitset::Device"], [74, 1, 1, "_CPPv4N6Bitset18MOVE_HINT_BACKWARDE", "Bitset::MOVE_HINT_BACKWARD"], [74, 2, 1, "_CPPv4N6Bitset5clearEv", "Bitset::clear"], [74, 2, 1, "_CPPv4NK6Bitset5countEv", "Bitset::count"], [74, 2, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset12is_allocatedEv", "Bitset::is_allocated"], [74, 2, 1, "_CPPv4NK6Bitset8max_hintEv", "Bitset::max_hint"], [74, 2, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset"], [74, 2, 1, "_CPPv4N6Bitset5resetEv", "Bitset::reset"], [74, 3, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset::i"], [74, 2, 1, "_CPPv4N6Bitset3setEj", "Bitset::set"], [74, 2, 1, "_CPPv4N6Bitset3setEv", "Bitset::set"], [74, 3, 1, "_CPPv4N6Bitset3setEj", "Bitset::set::i"], [74, 2, 1, "_CPPv4NK6Bitset4sizeEv", "Bitset::size"], [74, 2, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test"], [74, 3, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test::i"], [74, 0, 1, "_CPPv4I0E11ConstBitset", "ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetEv", "ConstBitset::ConstBitset"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset::rhs"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset::rhs"], [74, 4, 1, "_CPPv4I0E11ConstBitset", "ConstBitset::Device"], [74, 2, 1, "_CPPv4NK11ConstBitset5countEv", "ConstBitset::count"], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator="], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator="], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator=::rhs"], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator=::rhs"], [74, 2, 1, "_CPPv4NK11ConstBitset4sizeEv", "ConstBitset::size"], [74, 2, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test"], [74, 3, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test::i"], [187, 5, 1, "_CPPv410HostMirror", "HostMirror"], [147, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [147, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [147, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [147, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [147, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [147, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [147, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [147, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [147, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::name"], [147, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [147, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [149, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [149, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [149, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [149, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [149, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [149, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [149, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [149, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [149, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [149, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [149, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [149, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [149, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [149, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [149, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [149, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [149, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [149, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [149, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::name"], [149, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::name"], [149, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [149, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [149, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [149, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [149, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [149, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [183, 0, 1, "_CPPv412LayoutStride", "LayoutStride"], [133, 0, 1, "_CPPv410ScopeGuard", "ScopeGuard"], [133, 2, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard"], [133, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK10ScopeGuard", "ScopeGuard::ScopeGuard"], [133, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard"], [133, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERR10ScopeGuard", "ScopeGuard::ScopeGuard"], [133, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard"], [133, 4, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::Args"], [133, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argc"], [133, 3, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::args"], [133, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard::arguments"], [133, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argv"], [133, 2, 1, "_CPPv4N10ScopeGuardaSERK10ScopeGuard", "ScopeGuard::operator="], [133, 2, 1, "_CPPv4N10ScopeGuardaSERR10ScopeGuard", "ScopeGuard::operator="], [133, 2, 1, "_CPPv4N10ScopeGuardD0Ev", "ScopeGuard::~ScopeGuard"], [187, 5, 1, "_CPPv412array_layout", "array_layout"], [187, 5, 1, "_CPPv415const_data_type", "const_data_type"], [187, 5, 1, "_CPPv423const_scalar_array_type", "const_scalar_array_type"], [187, 5, 1, "_CPPv410const_type", "const_type"], [187, 5, 1, "_CPPv416const_value_type", "const_value_type"], [187, 5, 1, "_CPPv49data_type", "data_type"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::src"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::src"], [187, 5, 1, "_CPPv411device_type", "device_type"], [187, 5, 1, "_CPPv49dimension", "dimension"], [187, 5, 1, "_CPPv415execution_space", "execution_space"], [187, 5, 1, "_CPPv417host_mirror_space", "host_mirror_space"], [187, 5, 1, "_CPPv412memory_space", "memory_space"], [187, 5, 1, "_CPPv413memory_traits", "memory_traits"], [187, 5, 1, "_CPPv419non_const_data_type", "non_const_data_type"], [187, 5, 1, "_CPPv427non_const_scalar_array_type", "non_const_scalar_array_type"], [187, 5, 1, "_CPPv414non_const_type", "non_const_type"], [187, 5, 1, "_CPPv420non_const_value_type", "non_const_value_type"], [187, 5, 1, "_CPPv412pointer_type", "pointer_type"], [187, 5, 1, "_CPPv414reference_type", "reference_type"], [187, 5, 1, "_CPPv417scalar_array_type", "scalar_array_type"], [187, 5, 1, "_CPPv49size_type", "size_type"], [187, 5, 1, "_CPPv410specialize", "specialize"], [187, 5, 1, "_CPPv410value_type", "value_type"], [188, 6, 1, "_CPPv410ALLOC_PROP", "ALLOC_PROP"], [109, 7, 1, "_CPPv4I00E4BAnd", "BAnd"], [109, 8, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd"], [109, 8, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd"], [109, 9, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd::value_"], [109, 9, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd::value_"], [109, 10, 1, "_CPPv4I00E4BAnd", "BAnd::Scalar"], [109, 10, 1, "_CPPv4I00E4BAnd", "BAnd::Space"], [109, 8, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init"], [109, 9, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init::val"], [109, 8, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join"], [109, 9, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::dest"], [109, 9, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::src"], [109, 6, 1, "_CPPv4N4BAnd7reducerE", "BAnd::reducer"], [109, 8, 1, "_CPPv4NK4BAnd9referenceEv", "BAnd::reference"], [109, 6, 1, "_CPPv4N4BAnd16result_view_typeE", "BAnd::result_view_type"], [109, 6, 1, "_CPPv4N4BAnd10value_typeE", "BAnd::value_type"], [109, 8, 1, "_CPPv4NK4BAnd4viewEv", "BAnd::view"], [110, 7, 1, "_CPPv4I00E3BOr", "BOr"], [110, 8, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr"], [110, 8, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr"], [110, 9, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr::value_"], [110, 9, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr::value_"], [110, 10, 1, "_CPPv4I00E3BOr", "BOr::Scalar"], [110, 10, 1, "_CPPv4I00E3BOr", "BOr::Space"], [110, 8, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init"], [110, 9, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init::val"], [110, 8, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join"], [110, 9, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::dest"], [110, 9, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::src"], [110, 6, 1, "_CPPv4N3BOr7reducerE", "BOr::reducer"], [110, 8, 1, "_CPPv4NK3BOr9referenceEv", "BOr::reference"], [110, 6, 1, "_CPPv4N3BOr16result_view_typeE", "BOr::result_view_type"], [110, 6, 1, "_CPPv4N3BOr10value_typeE", "BOr::value_type"], [110, 8, 1, "_CPPv4NK3BOr4viewEv", "BOr::view"], [153, 11, 1, "_CPPv49ChunkSizei", "ChunkSize"], [153, 9, 1, "_CPPv49ChunkSizei", "ChunkSize::value_"], [227, 7, 1, "_CPPv4I0DpE10CoolerView", "CoolerView"], [227, 11, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView"], [227, 9, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView::rhs"], [227, 10, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::DataType"], [227, 10, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::Traits"], [227, 6, 1, "_CPPv4N10CoolerView9data_typeE", "CoolerView::data_type"], [227, 11, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo"], [227, 10, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::U"], [227, 9, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::x"], [227, 6, 1, "_CPPv4N10CoolerView6foobarE", "CoolerView::foobar"], [227, 6, 1, "_CPPv4N10CoolerView6foobatE", "CoolerView::foobat"], [227, 12, 1, "_CPPv4N10CoolerView8some_varE", "CoolerView::some_var"], [227, 11, 1, "_CPPv4N10CoolerViewD0Ev", "CoolerView::~CoolerView"], [75, 7, 1, "_CPPv4I0000E8DualView", "DualView"], [75, 10, 1, "_CPPv4I0000E8DualView", "DualView::Arg1Type"], [75, 10, 1, "_CPPv4I0000E8DualView", "DualView::Arg2Type"], [75, 10, 1, "_CPPv4I0000E8DualView", "DualView::Arg3Type"], [75, 10, 1, "_CPPv4I0000E8DualView", "DualView::DataType"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewEv", "DualView::DualView"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::arg0"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::arg_prop"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::args"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::d_view_"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::h_view_"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::label"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::src"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView::src"], [75, 11, 1, "_CPPv4N8DualView16clear_sync_stateEv", "DualView::clear_sync_state"], [75, 12, 1, "_CPPv4N8DualView6d_viewE", "DualView::d_view"], [75, 8, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent"], [75, 10, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::iType"], [75, 9, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::r"], [75, 8, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int"], [75, 10, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::iType"], [75, 9, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::r"], [75, 11, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side"], [75, 10, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side::Device"], [75, 12, 1, "_CPPv4N8DualView6h_viewE", "DualView::h_view"], [75, 6, 1, "_CPPv4N8DualView17host_mirror_spaceE", "DualView::host_mirror_space"], [75, 11, 1, "_CPPv4NK8DualView12is_allocatedEv", "DualView::is_allocated"], [75, 12, 1, "_CPPv4N8DualView15modified_deviceE", "DualView::modified_device"], [75, 12, 1, "_CPPv4N8DualView14modified_flagsE", "DualView::modified_flags"], [75, 12, 1, "_CPPv4N8DualView13modified_hostE", "DualView::modified_host"], [75, 11, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify"], [75, 10, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify::Device"], [75, 11, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync"], [75, 10, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync::Device"], [75, 11, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n0"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n1"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n2"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n3"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n4"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n5"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n6"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n7"], [75, 11, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n0"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n1"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n2"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n3"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n4"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n5"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n6"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n7"], [75, 8, 1, "_CPPv4NK8DualView4spanEv", "DualView::span"], [75, 8, 1, "_CPPv4N8DualView18span_is_contiguousEv", "DualView::span_is_contiguous"], [75, 11, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride"], [75, 10, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::iType"], [75, 9, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::stride_"], [75, 11, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 11, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 10, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 10, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 6, 1, "_CPPv4N8DualView5t_devE", "DualView::t_dev"], [75, 6, 1, "_CPPv4N8DualView11t_dev_constE", "DualView::t_dev_const"], [75, 6, 1, "_CPPv4N8DualView22t_dev_const_randomreadE", "DualView::t_dev_const_randomread"], [75, 6, 1, "_CPPv4N8DualView25t_dev_const_randomread_umE", "DualView::t_dev_const_randomread_um"], [75, 6, 1, "_CPPv4N8DualView14t_dev_const_umE", "DualView::t_dev_const_um"], [75, 6, 1, "_CPPv4N8DualView8t_dev_umE", "DualView::t_dev_um"], [75, 6, 1, "_CPPv4N8DualView6t_hostE", "DualView::t_host"], [75, 6, 1, "_CPPv4N8DualView12t_host_constE", "DualView::t_host_const"], [75, 6, 1, "_CPPv4N8DualView23t_host_const_randomreadE", "DualView::t_host_const_randomread"], [75, 6, 1, "_CPPv4N8DualView26t_host_const_randomread_umE", "DualView::t_host_const_randomread_um"], [75, 6, 1, "_CPPv4N8DualView15t_host_const_umE", "DualView::t_host_const_um"], [75, 6, 1, "_CPPv4N8DualView9t_host_umE", "DualView::t_host_um"], [75, 6, 1, "_CPPv4N8DualView15t_modified_flagE", "DualView::t_modified_flag"], [75, 6, 1, "_CPPv4N8DualView16t_modified_flagsE", "DualView::t_modified_flags"], [75, 6, 1, "_CPPv4N8DualView6traitsE", "DualView::traits"], [75, 8, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view"], [75, 10, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view::Device"], [76, 7, 1, "_CPPv4I0000E11DynRankView", "DynRankView"], [76, 10, 1, "_CPPv4I0000E11DynRankView", "DynRankView::DataType"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewEv", "DynRankView::DynRankView"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::args"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::layout"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::layout"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::layout"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::layout"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::name"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::name"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::prop"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::prop"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::ptr"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::ptr"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView::rhs"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::rhs"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView::rhs"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView::rhs"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::space"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::space"], [76, 6, 1, "_CPPv4N11DynRankView10HostMirrorE", "DynRankView::HostMirror"], [76, 10, 1, "_CPPv4I0000E11DynRankView", "DynRankView::LayoutType"], [76, 10, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemorySpace"], [76, 10, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemoryTraits"], [76, 11, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access"], [76, 9, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i0"], [76, 9, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i1"], [76, 9, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i2"], [76, 9, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i3"], [76, 9, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i4"], [76, 9, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i5"], [76, 9, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i6"], [76, 6, 1, "_CPPv4N11DynRankView12array_layoutE", "DynRankView::array_layout"], [76, 6, 1, "_CPPv4N11DynRankView15const_data_typeE", "DynRankView::const_data_type"], [76, 6, 1, "_CPPv4N11DynRankView23const_scalar_array_typeE", "DynRankView::const_scalar_array_type"], [76, 6, 1, "_CPPv4N11DynRankView10const_typeE", "DynRankView::const_type"], [76, 6, 1, "_CPPv4N11DynRankView16const_value_typeE", "DynRankView::const_value_type"], [76, 11, 1, "_CPPv4NK11DynRankView4dataEv", "DynRankView::data"], [76, 6, 1, "_CPPv4N11DynRankView9data_typeE", "DynRankView::data_type"], [76, 6, 1, "_CPPv4N11DynRankView11device_typeE", "DynRankView::device_type"], [76, 6, 1, "_CPPv4N11DynRankView9dimensionE", "DynRankView::dimension"], [76, 6, 1, "_CPPv4N11DynRankView15execution_spaceE", "DynRankView::execution_space"], [76, 11, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::dim"], [76, 10, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::iType"], [76, 11, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int"], [76, 9, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::dim"], [76, 10, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::iType"], [76, 6, 1, "_CPPv4N11DynRankView17host_mirror_spaceE", "DynRankView::host_mirror_space"], [76, 11, 1, "_CPPv4NK11DynRankView12is_allocatedEv", "DynRankView::is_allocated"], [76, 11, 1, "_CPPv4NK11DynRankView5labelEv", "DynRankView::label"], [76, 11, 1, "_CPPv4NK11DynRankView6layoutEv", "DynRankView::layout"], [76, 6, 1, "_CPPv4N11DynRankView12memory_spaceE", "DynRankView::memory_space"], [76, 6, 1, "_CPPv4N11DynRankView13memory_traitsE", "DynRankView::memory_traits"], [76, 6, 1, "_CPPv4N11DynRankView19non_const_data_typeE", "DynRankView::non_const_data_type"], [76, 6, 1, "_CPPv4N11DynRankView27non_const_scalar_array_typeE", "DynRankView::non_const_scalar_array_type"], [76, 6, 1, "_CPPv4N11DynRankView14non_const_typeE", "DynRankView::non_const_type"], [76, 6, 1, "_CPPv4N11DynRankView20non_const_value_typeE", "DynRankView::non_const_value_type"], [76, 11, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()"], [76, 9, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()::indices"], [76, 6, 1, "_CPPv4N11DynRankView12pointer_typeE", "DynRankView::pointer_type"], [76, 11, 1, "_CPPv4NK11DynRankView4rankEv", "DynRankView::rank"], [76, 6, 1, "_CPPv4N11DynRankView14reference_typeE", "DynRankView::reference_type"], [76, 11, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size"], [76, 11, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N0"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N1"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N2"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N3"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N4"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N5"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N6"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N7"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N8"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size::layout"], [76, 6, 1, "_CPPv4N11DynRankView17scalar_array_typeE", "DynRankView::scalar_array_type"], [76, 6, 1, "_CPPv4N11DynRankView9size_typeE", "DynRankView::size_type"], [76, 11, 1, "_CPPv4NK11DynRankView4spanEv", "DynRankView::span"], [76, 11, 1, "_CPPv4NK11DynRankView18span_is_contiguousEv", "DynRankView::span_is_contiguous"], [76, 6, 1, "_CPPv4N11DynRankView10specializeE", "DynRankView::specialize"], [76, 11, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::dim"], [76, 10, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::iType"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_0Ev", "DynRankView::stride_0"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_1Ev", "DynRankView::stride_1"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_2Ev", "DynRankView::stride_2"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_3Ev", "DynRankView::stride_3"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_4Ev", "DynRankView::stride_4"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_5Ev", "DynRankView::stride_5"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_6Ev", "DynRankView::stride_6"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_7Ev", "DynRankView::stride_7"], [76, 11, 1, "_CPPv4NK11DynRankView9use_countEv", "DynRankView::use_count"], [76, 6, 1, "_CPPv4N11DynRankView10value_typeE", "DynRankView::value_type"], [77, 7, 1, "_CPPv4I0DpE11DynamicView", "DynamicView"], [77, 10, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::DataType"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewEv", "DynamicView::DynamicView"], [77, 9, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::arg_label"], [77, 9, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::max_extent"], [77, 9, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::min_chunk_size"], [77, 9, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView::rhs"], [77, 9, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView::rhs"], [77, 6, 1, "_CPPv4N11DynamicView10HostMirrorE", "DynamicView::HostMirror"], [77, 10, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::P"], [77, 8, 1, "_CPPv4NK11DynamicView17allocation_extentEv", "DynamicView::allocation_extent"], [77, 6, 1, "_CPPv4N11DynamicView10array_typeE", "DynamicView::array_type"], [77, 8, 1, "_CPPv4NK11DynamicView10chunk_sizeEv", "DynamicView::chunk_size"], [77, 6, 1, "_CPPv4N11DynamicView10const_typeE", "DynamicView::const_type"], [77, 8, 1, "_CPPv4NK11DynamicView4dataEv", "DynamicView::data"], [77, 8, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::dim"], [77, 10, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::iType"], [77, 8, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int"], [77, 9, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::dim"], [77, 10, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::iType"], [77, 11, 1, "_CPPv4NK11DynamicView12is_allocatedEv", "DynamicView::is_allocated"], [77, 11, 1, "_CPPv4N11DynamicView5labelEv", "DynamicView::label"], [77, 6, 1, "_CPPv4N11DynamicView14non_const_typeE", "DynamicView::non_const_type"], [77, 8, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()"], [77, 9, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::args"], [77, 9, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::i0"], [77, 6, 1, "_CPPv4N11DynamicView12pointer_typeE", "DynamicView::pointer_type"], [77, 6, 1, "_CPPv4N11DynamicView14reference_typeE", "DynamicView::reference_type"], [77, 12, 1, "_CPPv4N11DynamicView34reference_type_is_lvalue_referenceE", "DynamicView::reference_type_is_lvalue_reference"], [77, 11, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial"], [77, 10, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::IntType"], [77, 9, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::n"], [77, 8, 1, "_CPPv4NK11DynamicView4sizeEv", "DynamicView::size"], [77, 8, 1, "_CPPv4NK11DynamicView4spanEv", "DynamicView::span"], [77, 8, 1, "_CPPv4NK11DynamicView18span_is_contiguousEv", "DynamicView::span_is_contiguous"], [77, 8, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::dim"], [77, 10, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::iType"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_0Ev", "DynamicView::stride_0"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_1Ev", "DynamicView::stride_1"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_2Ev", "DynamicView::stride_2"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_3Ev", "DynamicView::stride_3"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_4Ev", "DynamicView::stride_4"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_5Ev", "DynamicView::stride_5"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_6Ev", "DynamicView::stride_6"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_7Ev", "DynamicView::stride_7"], [77, 6, 1, "_CPPv4N11DynamicView6traitsE", "DynamicView::traits"], [77, 8, 1, "_CPPv4NK11DynamicView9use_countEv", "DynamicView::use_count"], [131, 7, 1, "_CPPv413InitArguments", "InitArguments"], [131, 11, 1, "_CPPv4N13InitArguments13InitArgumentsEv", "InitArguments::InitArguments"], [131, 12, 1, "_CPPv4N13InitArguments9device_idE", "InitArguments::device_id"], [131, 12, 1, "_CPPv4N13InitArguments16disable_warningsE", "InitArguments::disable_warnings"], [131, 12, 1, "_CPPv4N13InitArguments8ndevicesE", "InitArguments::ndevices"], [131, 12, 1, "_CPPv4N13InitArguments8num_numaE", "InitArguments::num_numa"], [131, 12, 1, "_CPPv4N13InitArguments11num_threadsE", "InitArguments::num_threads"], [131, 12, 1, "_CPPv4N13InitArguments11skip_deviceE", "InitArguments::skip_device"], [132, 7, 1, "_CPPv422InitializationSettings", "InitializationSettings"], [132, 11, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings"], [132, 11, 1, "_CPPv4N22InitializationSettings22InitializationSettingsEv", "InitializationSettings::InitializationSettings"], [132, 9, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings::arguments"], [132, 11, 1, "_CPPv4NK22InitializationSettings18get_PARAMETER_NAMEEv", "InitializationSettings::get_PARAMETER_NAME"], [132, 11, 1, "_CPPv4NK22InitializationSettings18has_PARAMETER_NAMEEv", "InitializationSettings::has_PARAMETER_NAME"], [132, 11, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME"], [132, 9, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME::value"], [180, 11, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [180, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [180, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [180, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [180, 11, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [180, 11, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [180, 10, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [180, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ExecSpace"], [180, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [180, 10, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [180, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [180, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [180, 10, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [180, 10, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [180, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [180, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [180, 10, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [180, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [180, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [180, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [180, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [180, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [180, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [180, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::exec_space"], [180, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::exec_space"], [180, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::exec_space"], [180, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [180, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [180, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [180, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [180, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [180, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [111, 7, 1, "_CPPv4I00E4LAnd", "LAnd"], [111, 8, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd"], [111, 8, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd"], [111, 9, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd::value_"], [111, 9, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd::value_"], [111, 10, 1, "_CPPv4I00E4LAnd", "LAnd::Scalar"], [111, 10, 1, "_CPPv4I00E4LAnd", "LAnd::Space"], [111, 8, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init"], [111, 9, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init::val"], [111, 8, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join"], [111, 9, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::dest"], [111, 9, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::src"], [111, 6, 1, "_CPPv4N4LAnd7reducerE", "LAnd::reducer"], [111, 8, 1, "_CPPv4NK4LAnd9referenceEv", "LAnd::reference"], [111, 6, 1, "_CPPv4N4LAnd16result_view_typeE", "LAnd::result_view_type"], [111, 6, 1, "_CPPv4N4LAnd10value_typeE", "LAnd::value_type"], [111, 8, 1, "_CPPv4NK4LAnd4viewEv", "LAnd::view"], [112, 7, 1, "_CPPv4I00E3LOr", "LOr"], [112, 8, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr"], [112, 8, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr"], [112, 9, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr::value_"], [112, 9, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr::value_"], [112, 10, 1, "_CPPv4I00E3LOr", "LOr::Scalar"], [112, 10, 1, "_CPPv4I00E3LOr", "LOr::Space"], [112, 8, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init"], [112, 9, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init::val"], [112, 8, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join"], [112, 9, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::dest"], [112, 9, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::src"], [112, 6, 1, "_CPPv4N3LOr7reducerE", "LOr::reducer"], [112, 8, 1, "_CPPv4NK3LOr9referenceEv", "LOr::reference"], [112, 6, 1, "_CPPv4N3LOr16result_view_typeE", "LOr::result_view_type"], [112, 6, 1, "_CPPv4N3LOr10value_typeE", "LOr::value_type"], [112, 8, 1, "_CPPv4NK3LOr4viewEv", "LOr::view"], [181, 7, 1, "_CPPv410LayoutLeft", "LayoutLeft"], [181, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftERK10LayoutLeft", "LayoutLeft::LayoutLeft"], [181, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftERR10LayoutLeft", "LayoutLeft::LayoutLeft"], [181, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft"], [181, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N0"], [181, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N1"], [181, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N2"], [181, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N3"], [181, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N4"], [181, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N5"], [181, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N6"], [181, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N7"], [181, 6, 1, "_CPPv4N10LayoutLeft12array_layoutE", "LayoutLeft::array_layout"], [181, 12, 1, "_CPPv4N10LayoutLeft9dimensionE", "LayoutLeft::dimension"], [181, 12, 1, "_CPPv4N10LayoutLeft23is_extent_constructibleE", "LayoutLeft::is_extent_constructible"], [181, 11, 1, "_CPPv4N10LayoutLeftaSERK10LayoutLeft", "LayoutLeft::operator="], [181, 11, 1, "_CPPv4N10LayoutLeftaSERR10LayoutLeft", "LayoutLeft::operator="], [182, 7, 1, "_CPPv411LayoutRight", "LayoutRight"], [182, 11, 1, "_CPPv4N11LayoutRight11LayoutRightERK11LayoutRight", "LayoutRight::LayoutRight"], [182, 11, 1, "_CPPv4N11LayoutRight11LayoutRightERR11LayoutRight", "LayoutRight::LayoutRight"], [182, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight"], [182, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N0"], [182, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N1"], [182, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N2"], [182, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N3"], [182, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N4"], [182, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N5"], [182, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N6"], [182, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N7"], [182, 6, 1, "_CPPv4N11LayoutRight12array_layoutE", "LayoutRight::array_layout"], [182, 12, 1, "_CPPv4N11LayoutRight9dimensionE", "LayoutRight::dimension"], [182, 12, 1, "_CPPv4N11LayoutRight23is_extent_constructibleE", "LayoutRight::is_extent_constructible"], [182, 11, 1, "_CPPv4N11LayoutRightaSERK11LayoutRight", "LayoutRight::operator="], [182, 11, 1, "_CPPv4N11LayoutRightaSERR11LayoutRight", "LayoutRight::operator="], [183, 11, 1, "_CPPv412LayoutStrideRK12LayoutStride", "LayoutStride"], [183, 11, 1, "_CPPv412LayoutStrideRR12LayoutStride", "LayoutStride"], [183, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N0"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N1"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N2"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N3"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N4"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N5"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N6"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N7"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S0"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S1"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S2"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S3"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S4"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S5"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S6"], [183, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S7"], [151, 11, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [151, 11, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [151, 11, 1, "_CPPv413MDRangePolicyv", "MDRangePolicy"], [151, 11, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy"], [151, 11, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy"], [151, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::IT"], [151, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::IT"], [151, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::OT"], [151, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::OT"], [151, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::TT"], [151, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::TT"], [151, 9, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [151, 9, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [151, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::begin"], [151, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::begin"], [151, 9, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [151, 9, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [151, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::end"], [151, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::end"], [151, 9, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::tiling"], [151, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::tiling"], [113, 7, 1, "_CPPv4I00E3Max", "Max"], [113, 8, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max"], [113, 8, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max"], [113, 9, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max::value_"], [113, 9, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max::value_"], [113, 10, 1, "_CPPv4I00E3Max", "Max::Scalar"], [113, 10, 1, "_CPPv4I00E3Max", "Max::Space"], [113, 8, 1, "_CPPv4NK3Max4initER10value_type", "Max::init"], [113, 9, 1, "_CPPv4NK3Max4initER10value_type", "Max::init::val"], [113, 8, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join"], [113, 9, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::dest"], [113, 9, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::src"], [113, 6, 1, "_CPPv4N3Max7reducerE", "Max::reducer"], [113, 8, 1, "_CPPv4NK3Max9referenceEv", "Max::reference"], [113, 6, 1, "_CPPv4N3Max16result_view_typeE", "Max::result_view_type"], [113, 6, 1, "_CPPv4N3Max10value_typeE", "Max::value_type"], [113, 8, 1, "_CPPv4NK3Max4viewEv", "Max::view"], [114, 7, 1, "_CPPv4I000E6MaxLoc", "MaxLoc"], [114, 10, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Index"], [114, 8, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc"], [114, 8, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc"], [114, 9, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc::value_"], [114, 9, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc::value_"], [114, 10, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Scalar"], [114, 10, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Space"], [114, 8, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init"], [114, 9, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init::val"], [114, 8, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join"], [114, 9, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::dest"], [114, 9, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::src"], [114, 6, 1, "_CPPv4N6MaxLoc7reducerE", "MaxLoc::reducer"], [114, 8, 1, "_CPPv4NK6MaxLoc9referenceEv", "MaxLoc::reference"], [114, 6, 1, "_CPPv4N6MaxLoc16result_view_typeE", "MaxLoc::result_view_type"], [114, 6, 1, "_CPPv4N6MaxLoc10value_typeE", "MaxLoc::value_type"], [114, 8, 1, "_CPPv4NK6MaxLoc4viewEv", "MaxLoc::view"], [115, 7, 1, "_CPPv4I00E3Min", "Min"], [115, 8, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min"], [115, 8, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min"], [115, 9, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min::value_"], [115, 9, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min::value_"], [115, 10, 1, "_CPPv4I00E3Min", "Min::Scalar"], [115, 10, 1, "_CPPv4I00E3Min", "Min::Space"], [115, 8, 1, "_CPPv4NK3Min4initER10value_type", "Min::init"], [115, 9, 1, "_CPPv4NK3Min4initER10value_type", "Min::init::val"], [115, 8, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join"], [115, 9, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::dest"], [115, 9, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::src"], [115, 6, 1, "_CPPv4N3Min7reducerE", "Min::reducer"], [115, 8, 1, "_CPPv4NK3Min9referenceEv", "Min::reference"], [115, 6, 1, "_CPPv4N3Min16result_view_typeE", "Min::result_view_type"], [115, 6, 1, "_CPPv4N3Min10value_typeE", "Min::value_type"], [115, 8, 1, "_CPPv4NK3Min4viewEv", "Min::view"], [116, 7, 1, "_CPPv4I000E6MinLoc", "MinLoc"], [116, 10, 1, "_CPPv4I000E6MinLoc", "MinLoc::Index"], [116, 8, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc"], [116, 8, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc"], [116, 9, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc::value_"], [116, 9, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc::value_"], [116, 10, 1, "_CPPv4I000E6MinLoc", "MinLoc::Scalar"], [116, 10, 1, "_CPPv4I000E6MinLoc", "MinLoc::Space"], [116, 8, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init"], [116, 9, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init::val"], [116, 8, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join"], [116, 9, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::dest"], [116, 9, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::src"], [116, 6, 1, "_CPPv4N6MinLoc7reducerE", "MinLoc::reducer"], [116, 8, 1, "_CPPv4NK6MinLoc9referenceEv", "MinLoc::reference"], [116, 6, 1, "_CPPv4N6MinLoc16result_view_typeE", "MinLoc::result_view_type"], [116, 6, 1, "_CPPv4N6MinLoc10value_typeE", "MinLoc::value_type"], [116, 8, 1, "_CPPv4NK6MinLoc4viewEv", "MinLoc::view"], [117, 7, 1, "_CPPv4I00E6MinMax", "MinMax"], [117, 8, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax"], [117, 8, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax"], [117, 9, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax::value_"], [117, 9, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax::value_"], [117, 10, 1, "_CPPv4I00E6MinMax", "MinMax::Scalar"], [117, 10, 1, "_CPPv4I00E6MinMax", "MinMax::Space"], [117, 8, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init"], [117, 9, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init::val"], [117, 8, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join"], [117, 9, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::dest"], [117, 9, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::src"], [117, 6, 1, "_CPPv4N6MinMax7reducerE", "MinMax::reducer"], [117, 8, 1, "_CPPv4NK6MinMax9referenceEv", "MinMax::reference"], [117, 6, 1, "_CPPv4N6MinMax16result_view_typeE", "MinMax::result_view_type"], [117, 6, 1, "_CPPv4N6MinMax10value_typeE", "MinMax::value_type"], [117, 8, 1, "_CPPv4NK6MinMax4viewEv", "MinMax::view"], [118, 7, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc"], [118, 8, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc"], [118, 8, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc"], [118, 9, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc::value_"], [118, 9, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc::value_"], [118, 10, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Scalar"], [118, 10, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Space"], [118, 8, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init"], [118, 9, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init::val"], [118, 8, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join"], [118, 9, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::dest"], [118, 9, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::src"], [118, 6, 1, "_CPPv4N9MinMaxLoc7reducerE", "MinMaxLoc::reducer"], [118, 8, 1, "_CPPv4NK9MinMaxLoc9referenceEv", "MinMaxLoc::reference"], [118, 6, 1, "_CPPv4N9MinMaxLoc16result_view_typeE", "MinMaxLoc::result_view_type"], [118, 6, 1, "_CPPv4N9MinMaxLoc10value_typeE", "MinMaxLoc::value_type"], [118, 8, 1, "_CPPv4NK9MinMaxLoc4viewEv", "MinMaxLoc::view"], [119, 7, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar"], [119, 10, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Index"], [119, 10, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Scalar"], [119, 12, 1, "_CPPv4N15MinMaxLocScalar7max_locE", "MinMaxLocScalar::max_loc"], [119, 12, 1, "_CPPv4N15MinMaxLocScalar7max_valE", "MinMaxLocScalar::max_val"], [119, 12, 1, "_CPPv4N15MinMaxLocScalar7min_locE", "MinMaxLocScalar::min_loc"], [119, 12, 1, "_CPPv4N15MinMaxLocScalar7min_valE", "MinMaxLocScalar::min_val"], [119, 11, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator="], [119, 9, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator=::rhs"], [120, 7, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar"], [120, 10, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar::Scalar"], [120, 12, 1, "_CPPv4N12MinMaxScalar7max_valE", "MinMaxScalar::max_val"], [120, 12, 1, "_CPPv4N12MinMaxScalar7min_valE", "MinMaxScalar::min_val"], [120, 11, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator="], [120, 9, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator=::rhs"], [152, 11, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam"], [152, 9, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam::team"], [152, 11, 1, "_CPPv49PerThread14TeamMemberType", "PerThread"], [152, 9, 1, "_CPPv49PerThread14TeamMemberType", "PerThread::team"], [121, 7, 1, "_CPPv4I00E4Prod", "Prod"], [121, 8, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod"], [121, 8, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod"], [121, 9, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod::value_"], [121, 9, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod::value_"], [121, 10, 1, "_CPPv4I00E4Prod", "Prod::Scalar"], [121, 10, 1, "_CPPv4I00E4Prod", "Prod::Space"], [121, 8, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init"], [121, 9, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init::val"], [121, 8, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join"], [121, 9, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::dest"], [121, 9, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::src"], [121, 6, 1, "_CPPv4N4Prod7reducerE", "Prod::reducer"], [121, 8, 1, "_CPPv4NK4Prod9referenceEv", "Prod::reference"], [121, 6, 1, "_CPPv4N4Prod16result_view_typeE", "Prod::result_view_type"], [121, 6, 1, "_CPPv4N4Prod10value_typeE", "Prod::value_type"], [121, 8, 1, "_CPPv4NK4Prod4viewEv", "Prod::view"], [162, 11, 1, "_CPPv416ProfilingSectionRKNSt6stringE", "ProfilingSection"], [162, 9, 1, "_CPPv416ProfilingSectionRKNSt6stringE", "ProfilingSection::sectionName"], [153, 11, 1, "_CPPv411RangePolicy7int64_t7int64_t", "RangePolicy"], [153, 11, 1, "_CPPv411RangePolicy7int64_t7int64_t9ChunkSize", "RangePolicy"], [153, 11, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t", "RangePolicy"], [153, 11, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy"], [153, 11, 1, "_CPPv411RangePolicyv", "RangePolicy"], [153, 9, 1, "_CPPv411RangePolicy7int64_t7int64_t", "RangePolicy::begin"], [153, 9, 1, "_CPPv411RangePolicy7int64_t7int64_t9ChunkSize", "RangePolicy::begin"], [153, 9, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t", "RangePolicy::begin"], [153, 9, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy::begin"], [153, 9, 1, "_CPPv411RangePolicy7int64_t7int64_t9ChunkSize", "RangePolicy::chunk_size"], [153, 9, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy::chunk_size"], [153, 9, 1, "_CPPv411RangePolicy7int64_t7int64_t", "RangePolicy::end"], [153, 9, 1, "_CPPv411RangePolicy7int64_t7int64_t9ChunkSize", "RangePolicy::end"], [153, 9, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t", "RangePolicy::end"], [153, 9, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy::end"], [153, 9, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t", "RangePolicy::space"], [153, 9, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy::space"], [122, 8, 1, "_CPPv47ReducerR10value_type", "Reducer"], [122, 8, 1, "_CPPv47ReducerRK16result_view_type", "Reducer"], [122, 9, 1, "_CPPv47ReducerR10value_type", "Reducer::value_"], [122, 9, 1, "_CPPv47ReducerRK16result_view_type", "Reducer::value_"], [79, 7, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView"], [79, 10, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::DataType"], [79, 10, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::ExecSpace"], [79, 10, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Layout"], [79, 10, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Op"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERK10ALLOC_PROPDp4Dims", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERK4ViewI2RTDp2RPE", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewEv", "ScatterView::ScatterView"], [79, 9, 1, "_CPPv4N11ScatterView11ScatterViewERK10ALLOC_PROPDp4Dims", "ScatterView::ScatterView::arg_prop"], [79, 9, 1, "_CPPv4N11ScatterView11ScatterViewERK10ALLOC_PROPDp4Dims", "ScatterView::ScatterView::dims"], [79, 9, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::dims"], [79, 9, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::name"], [79, 11, 1, "_CPPv4NK11ScatterView6accessEv", "ScatterView::access"], [79, 11, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into"], [79, 9, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into::dest"], [79, 10, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::contribution"], [79, 6, 1, "_CPPv4N11ScatterView14data_type_infoE", "ScatterView::data_type_info"], [79, 6, 1, "_CPPv4N11ScatterView18internal_data_typeE", "ScatterView::internal_data_type"], [79, 6, 1, "_CPPv4N11ScatterView18internal_view_typeE", "ScatterView::internal_view_type"], [79, 11, 1, "_CPPv4NK11ScatterView12is_allocatedEv", "ScatterView::is_allocated"], [79, 6, 1, "_CPPv4N11ScatterView23original_reference_typeE", "ScatterView::original_reference_type"], [79, 6, 1, "_CPPv4N11ScatterView19original_value_typeE", "ScatterView::original_value_type"], [79, 6, 1, "_CPPv4N11ScatterView18original_view_typeE", "ScatterView::original_view_type"], [79, 11, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n0"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n1"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n2"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n3"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n4"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n5"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n6"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n7"], [79, 11, 1, "_CPPv4N11ScatterView5resetEv", "ScatterView::reset"], [79, 11, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except"], [79, 9, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except::view"], [79, 11, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n0"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n1"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n2"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n3"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n4"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n5"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n6"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n7"], [79, 11, 1, "_CPPv4NK11ScatterView7subviewEv", "ScatterView::subview"], [163, 11, 1, "_CPPv412ScopedRegionRKNSt6stringE", "ScopedRegion"], [163, 9, 1, "_CPPv412ScopedRegionRKNSt6stringE", "ScopedRegion::regionName"], [124, 7, 1, "_CPPv4I00E3Sum", "Sum"], [124, 10, 1, "_CPPv4I00E3Sum", "Sum::Scalar"], [124, 10, 1, "_CPPv4I00E3Sum", "Sum::Space"], [124, 8, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum"], [124, 8, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum"], [124, 9, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum::value_"], [124, 9, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum::value_"], [124, 8, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init"], [124, 9, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init::val"], [124, 8, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join"], [124, 9, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::dest"], [124, 9, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::src"], [124, 6, 1, "_CPPv4N3Sum7reducerE", "Sum::reducer"], [124, 8, 1, "_CPPv4NK3Sum9referenceEv", "Sum::reference"], [124, 6, 1, "_CPPv4N3Sum16result_view_typeE", "Sum::result_view_type"], [124, 6, 1, "_CPPv4N3Sum10value_typeE", "Sum::value_type"], [124, 8, 1, "_CPPv4NK3Sum4viewEv", "Sum::view"], [154, 7, 1, "_CPPv417TeamHandleConcept", "TeamHandleConcept"], [154, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERK17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [154, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERR17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [154, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptEv", "TeamHandleConcept::TeamHandleConcept"], [154, 6, 1, "_CPPv4N17TeamHandleConcept15execution_spaceE", "TeamHandleConcept::execution_space"], [154, 8, 1, "_CPPv4NK17TeamHandleConcept11league_rankEv", "TeamHandleConcept::league_rank"], [154, 8, 1, "_CPPv4NK17TeamHandleConcept11league_sizeEv", "TeamHandleConcept::league_size"], [154, 11, 1, "_CPPv4N17TeamHandleConceptaSERK17TeamHandleConcept", "TeamHandleConcept::operator="], [154, 11, 1, "_CPPv4N17TeamHandleConceptaSERR17TeamHandleConcept", "TeamHandleConcept::operator="], [154, 6, 1, "_CPPv4N17TeamHandleConcept20scratch_memory_spaceE", "TeamHandleConcept::scratch_memory_space"], [154, 8, 1, "_CPPv4NK17TeamHandleConcept12team_barrierEv", "TeamHandleConcept::team_barrier"], [154, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast"], [154, 8, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast"], [154, 10, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::Closure"], [154, 10, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::T"], [154, 10, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::T"], [154, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::f"], [154, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [154, 9, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [154, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::value"], [154, 9, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::value"], [154, 8, 1, "_CPPv4NK17TeamHandleConcept9team_rankEv", "TeamHandleConcept::team_rank"], [154, 8, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce"], [154, 10, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::ReducerType"], [154, 9, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::reducer"], [154, 8, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan"], [154, 10, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::T"], [154, 9, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::global"], [154, 9, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::value"], [154, 8, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch"], [154, 9, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch::level"], [154, 8, 1, "_CPPv4NK17TeamHandleConcept10team_shmemEv", "TeamHandleConcept::team_shmem"], [154, 8, 1, "_CPPv4NK17TeamHandleConcept9team_sizeEv", "TeamHandleConcept::team_size"], [154, 8, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch"], [154, 9, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch::level"], [154, 11, 1, "_CPPv4N17TeamHandleConceptD0Ev", "TeamHandleConcept::~TeamHandleConcept"], [155, 7, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy"], [155, 10, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy::Args"], [155, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [155, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [155, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [155, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [155, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyERK10TeamPolicy", "TeamPolicy::TeamPolicy"], [155, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyERR10TeamPolicy", "TeamPolicy::TeamPolicy"], [155, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyEv", "TeamPolicy::TeamPolicy"], [155, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [155, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [155, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [155, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [155, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::space"], [155, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::space"], [155, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [155, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [155, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [155, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [155, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [155, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [155, 11, 1, "_CPPv4NK10TeamPolicy10chunk_sizeEv", "TeamPolicy::chunk_size"], [155, 6, 1, "_CPPv4N10TeamPolicy15execution_spaceE", "TeamPolicy::execution_space"], [155, 6, 1, "_CPPv4N10TeamPolicy10index_typeE", "TeamPolicy::index_type"], [155, 6, 1, "_CPPv4N10TeamPolicy17iteration_patternE", "TeamPolicy::iteration_pattern"], [155, 6, 1, "_CPPv4N10TeamPolicy13launch_boundsE", "TeamPolicy::launch_bounds"], [155, 11, 1, "_CPPv4NK10TeamPolicy11league_sizeEv", "TeamPolicy::league_size"], [155, 6, 1, "_CPPv4N10TeamPolicy11member_typeE", "TeamPolicy::member_type"], [155, 6, 1, "_CPPv4N10TeamPolicy13schedule_typeE", "TeamPolicy::schedule_type"], [155, 11, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size"], [155, 9, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::level"], [155, 9, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::team_size_"], [155, 11, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max"], [155, 9, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max::level"], [155, 11, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size"], [155, 9, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size::chunk"], [155, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [155, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [155, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [155, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [155, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [155, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [155, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [155, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [155, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [155, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_team"], [155, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [155, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [155, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [155, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_thread"], [155, 11, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size"], [155, 9, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size::level"], [155, 11, 1, "_CPPv4NK10TeamPolicy9team_sizeEv", "TeamPolicy::team_size"], [155, 11, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max"], [155, 11, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max"], [155, 10, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::FunctorType"], [155, 10, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::FunctorType"], [155, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::f"], [155, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::f"], [155, 11, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended"], [155, 11, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended"], [155, 10, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::FunctorType"], [155, 10, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::FunctorType"], [155, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::f"], [155, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::f"], [155, 11, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size"], [155, 9, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size::level"], [155, 11, 1, "_CPPv4N10TeamPolicy17vector_length_maxEv", "TeamPolicy::vector_length_max"], [155, 6, 1, "_CPPv4N10TeamPolicy8work_tagE", "TeamPolicy::work_tag"], [156, 7, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange"], [156, 10, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::Rank"], [156, 10, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::TeamHandle"], [156, 11, 1, "_CPPv4N17TeamThreadMDRange17TeamThreadMDRangeE4team8extent_18extent_2z", "TeamThreadMDRange::TeamThreadMDRange"], [152, 11, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange"], [152, 11, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange"], [152, 9, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::begin"], [152, 9, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::count"], [152, 9, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::end"], [152, 9, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::team"], [152, 9, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::team"], [158, 7, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange"], [158, 10, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::Rank"], [158, 10, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::TeamHandle"], [158, 11, 1, "_CPPv4N17TeamVectorMDRange17TeamVectorMDRangeE4team8extent_18extent_2z", "TeamVectorMDRange::TeamVectorMDRange"], [160, 7, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange"], [160, 10, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::Rank"], [160, 10, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::TeamHandle"], [160, 11, 1, "_CPPv4N19ThreadVectorMDRange19ThreadVectorMDRangeE4team8extent_18extent_2z", "ThreadVectorMDRange::ThreadVectorMDRange"], [152, 11, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange"], [152, 11, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange"], [152, 9, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::begin"], [152, 9, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::count"], [152, 9, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::end"], [152, 9, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::team"], [152, 9, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::team"], [81, 7, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap"], [81, 10, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Device"], [81, 10, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Key"], [81, 11, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap"], [81, 9, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap::capacity_hint"], [81, 10, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Value"], [81, 11, 1, "_CPPv4N12UnorderedMap13allocate_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::allocate_view"], [81, 9, 1, "_CPPv4N12UnorderedMap13allocate_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::allocate_view::src"], [81, 8, 1, "_CPPv4NK12UnorderedMap8capacityEv", "UnorderedMap::capacity"], [81, 11, 1, "_CPPv4N12UnorderedMap5clearEv", "UnorderedMap::clear"], [81, 11, 1, "_CPPv4N12UnorderedMap16create_copy_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::create_copy_view"], [81, 9, 1, "_CPPv4N12UnorderedMap16create_copy_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::create_copy_view::src"], [81, 11, 1, "_CPPv4N12UnorderedMap13create_mirrorERK12UnorderedMapI3Key9ValueType6Device6Hasher7EqualToE", "UnorderedMap::create_mirror"], [81, 9, 1, "_CPPv4N12UnorderedMap13create_mirrorERK12UnorderedMapI3Key9ValueType6Device6Hasher7EqualToE", "UnorderedMap::create_mirror::src"], [81, 11, 1, "_CPPv4N12UnorderedMap9deep_copyER12UnorderedMapI4DKey2DT7DDevice6Hasher7EqualToERK12UnorderedMapI4SKey2ST7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy"], [81, 9, 1, "_CPPv4N12UnorderedMap9deep_copyER12UnorderedMapI4DKey2DT7DDevice6Hasher7EqualToERK12UnorderedMapI4SKey2ST7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy::dst"], [81, 9, 1, "_CPPv4N12UnorderedMap9deep_copyER12UnorderedMapI4DKey2DT7DDevice6Hasher7EqualToERK12UnorderedMapI4SKey2ST7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy::src"], [81, 11, 1, "_CPPv4N12UnorderedMap14deep_copy_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy_view"], [81, 9, 1, "_CPPv4N12UnorderedMap14deep_copy_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy_view::src"], [81, 8, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists"], [81, 9, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists::key"], [81, 8, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find"], [81, 9, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find::key"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3key", "UnorderedMap::insert"], [81, 9, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::key"], [81, 9, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::op"], [81, 9, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::value"], [81, 8, 1, "_CPPv4NK12UnorderedMap12is_allocatedEv", "UnorderedMap::is_allocated"], [81, 8, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at"], [81, 9, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at::index"], [81, 11, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash"], [81, 9, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash::requested_capacity"], [81, 11, 1, "_CPPv4NK12UnorderedMap4sizeEv", "UnorderedMap::size"], [81, 8, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at"], [81, 9, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at::index"], [81, 8, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at"], [81, 9, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at::index"], [81, 7, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes"], [81, 7, 1, "_CPPv4N25UnorderedMapInsertOpTypes9AtomicAddE", "UnorderedMapInsertOpTypes::AtomicAdd"], [81, 7, 1, "_CPPv4N25UnorderedMapInsertOpTypes4NoOpE", "UnorderedMapInsertOpTypes::NoOp"], [81, 10, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValueTypeView"], [81, 10, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValuesIdxType"], [81, 7, 1, "_CPPv424UnorderedMapInsertResult", "UnorderedMapInsertResult"], [81, 8, 1, "_CPPv4NK24UnorderedMapInsertResult8existingEv", "UnorderedMapInsertResult::existing"], [81, 8, 1, "_CPPv4NK24UnorderedMapInsertResult6failedEv", "UnorderedMapInsertResult::failed"], [81, 8, 1, "_CPPv4NK24UnorderedMapInsertResult5indexEv", "UnorderedMapInsertResult::index"], [81, 8, 1, "_CPPv4NK24UnorderedMapInsertResult7successEv", "UnorderedMapInsertResult::success"], [187, 11, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View"], [187, 11, 1, "_CPPv44View12pointer_typeRK12array_layout", "View"], [187, 11, 1, "_CPPv44ViewRK10ALLOC_PROPDpRK7IntType", "View"], [187, 11, 1, "_CPPv44ViewRK10ALLOC_PROPRK12array_layout", "View"], [187, 11, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View"], [187, 11, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View"], [187, 11, 1, "_CPPv44ViewRK19NATURAL_MDSPAN_TYPE", "View"], [187, 11, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View"], [187, 11, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View"], [187, 11, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View"], [187, 11, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View"], [187, 11, 1, "_CPPv44ViewRR4View", "View"], [187, 11, 1, "_CPPv44Viewv", "View"], [187, 11, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View"], [187, 10, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::AccessorType"], [187, 10, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::ElementType"], [187, 10, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::ExtentsType"], [187, 10, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::LayoutType"], [187, 9, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::args"], [187, 9, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::indices"], [187, 9, 1, "_CPPv44ViewRK10ALLOC_PROPDpRK7IntType", "View::indices"], [187, 9, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::indices"], [187, 9, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::indices"], [187, 9, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::layout"], [187, 9, 1, "_CPPv44ViewRK10ALLOC_PROPRK12array_layout", "View::layout"], [187, 9, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::layout"], [187, 9, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::layout"], [187, 9, 1, "_CPPv44ViewRK19NATURAL_MDSPAN_TYPE", "View::mds"], [187, 9, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::mds"], [187, 9, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::name"], [187, 9, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::name"], [187, 9, 1, "_CPPv44ViewRK10ALLOC_PROPDpRK7IntType", "View::prop"], [187, 9, 1, "_CPPv44ViewRK10ALLOC_PROPRK12array_layout", "View::prop"], [187, 9, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::ptr"], [187, 9, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::ptr"], [187, 9, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View::rhs"], [187, 9, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::rhs"], [187, 9, 1, "_CPPv44ViewRR4View", "View::rhs"], [187, 9, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::space"], [187, 9, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::space"], [187, 11, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access"], [187, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i0"], [187, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i1"], [187, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i2"], [187, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i3"], [187, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i4"], [187, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i5"], [187, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i6"], [187, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i7"], [183, 6, 1, "_CPPv412array_layout", "array_layout"], [187, 11, 1, "_CPPv411assign_data12pointer_type", "assign_data"], [187, 9, 1, "_CPPv411assign_data12pointer_type", "assign_data::arg_data"], [105, 11, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add"], [105, 10, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::T"], [105, 9, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::ptr_to_value"], [105, 9, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::value"], [106, 11, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch"], [106, 10, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::T"], [106, 9, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::ptr_to_value"], [106, 9, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::value"], [105, 11, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and"], [105, 10, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::T"], [105, 9, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::ptr_to_value"], [105, 9, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::value"], [106, 11, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch"], [106, 10, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::T"], [106, 9, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::ptr_to_value"], [106, 9, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::value"], [105, 11, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign"], [105, 10, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::T"], [105, 9, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::ptr_to_value"], [105, 9, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::value"], [100, 11, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange"], [100, 10, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange::T"], [100, 9, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange::desired"], [100, 9, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange::expected"], [100, 9, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange::ptr"], [101, 11, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong"], [101, 10, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong::T"], [101, 9, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong::desired"], [101, 9, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong::expected"], [101, 9, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong::ptr"], [105, 11, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement"], [105, 10, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::T"], [105, 9, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::ptr_to_value"], [106, 11, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch"], [106, 10, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::T"], [106, 9, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::ptr_to_value"], [106, 9, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::value"], [102, 11, 1, "_CPPv4I0E15atomic_exchange1TP1TNSt15type_identity_tI1TEE", "atomic_exchange"], [102, 10, 1, "_CPPv4I0E15atomic_exchange1TP1TNSt15type_identity_tI1TEE", "atomic_exchange::T"], [102, 9, 1, "_CPPv4I0E15atomic_exchange1TP1TNSt15type_identity_tI1TEE", "atomic_exchange::ptr"], [102, 9, 1, "_CPPv4I0E15atomic_exchange1TP1TNSt15type_identity_tI1TEE", "atomic_exchange::val"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add"], [103, 10, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::T"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::ptr_to_value"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and"], [103, 10, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::T"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::ptr_to_value"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div"], [103, 10, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::T"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::ptr_to_value"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::value"], [103, 11, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift"], [103, 10, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::T"], [103, 9, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::ptr_to_value"], [103, 9, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::shift"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max"], [103, 10, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::T"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::ptr_to_value"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min"], [103, 10, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::T"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::ptr_to_value"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod"], [103, 10, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::T"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::ptr_to_value"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul"], [103, 10, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::T"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::ptr_to_value"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::value"], [103, 11, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or"], [103, 10, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::T"], [103, 9, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::ptr_to_value"], [103, 9, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::value"], [103, 11, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift"], [103, 10, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::T"], [103, 9, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::ptr_to_value"], [103, 9, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::shift"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub"], [103, 10, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::T"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::ptr_to_value"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::value"], [103, 11, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor"], [103, 10, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::T"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::ptr_to_value"], [103, 9, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::value"], [105, 11, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment"], [105, 10, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::T"], [105, 9, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::ptr_to_value"], [104, 11, 1, "_CPPv4I0E11atomic_load1TP1T", "atomic_load"], [104, 10, 1, "_CPPv4I0E11atomic_load1TP1T", "atomic_load::T"], [104, 9, 1, "_CPPv4I0E11atomic_load1TP1T", "atomic_load::ptr"], [106, 11, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch"], [106, 10, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::T"], [106, 9, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::ptr_to_value"], [106, 9, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::shift"], [105, 11, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max"], [105, 10, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::T"], [105, 9, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::ptr_to_value"], [105, 9, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::value"], [106, 11, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch"], [106, 10, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::T"], [106, 9, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::ptr_to_value"], [106, 9, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::value"], [105, 11, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min"], [105, 10, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::T"], [105, 9, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::ptr_to_value"], [105, 9, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::value"], [106, 11, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch"], [106, 10, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::T"], [106, 9, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::ptr_to_value"], [106, 9, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::value"], [106, 11, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch"], [106, 10, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::T"], [106, 9, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::ptr_to_value"], [106, 9, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::value"], [106, 11, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch"], [106, 10, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::T"], [106, 9, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::ptr_to_value"], [106, 9, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::value"], [105, 11, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or"], [105, 10, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::T"], [105, 9, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::ptr_to_value"], [105, 9, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::value"], [106, 11, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch"], [106, 10, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::T"], [106, 9, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::ptr_to_value"], [106, 9, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::value"], [106, 11, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch"], [106, 10, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::T"], [106, 9, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::ptr_to_value"], [106, 9, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::shift"], [107, 11, 1, "_CPPv4I0E12atomic_storevP1TNSt15type_identity_tI1TEE", "atomic_store"], [107, 10, 1, "_CPPv4I0E12atomic_storevP1TNSt15type_identity_tI1TEE", "atomic_store::T"], [107, 9, 1, "_CPPv4I0E12atomic_storevP1TNSt15type_identity_tI1TEE", "atomic_store::ptr"], [107, 9, 1, "_CPPv4I0E12atomic_storevP1TNSt15type_identity_tI1TEE", "atomic_store::val"], [105, 11, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub"], [105, 10, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::T"], [105, 9, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::ptr_to_value"], [105, 9, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::value"], [106, 11, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch"], [106, 10, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::T"], [106, 9, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::ptr_to_value"], [106, 9, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::value"], [106, 11, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch"], [106, 10, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::T"], [106, 9, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::ptr_to_value"], [106, 9, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::value"], [4, 8, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin"], [4, 10, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::DataType"], [4, 10, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::Properties"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::view"], [4, 8, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin"], [4, 10, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::DataType"], [4, 10, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::Properties"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::view"], [4, 8, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend"], [4, 10, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::DataType"], [4, 10, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::Properties"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::view"], [169, 7, 1, "_CPPv4I0E7complex", "complex"], [169, 10, 1, "_CPPv4I0E7complex", "complex::Scalar"], [169, 11, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex"], [169, 8, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex"], [169, 8, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex"], [169, 8, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex"], [169, 8, 1, "_CPPv4N7complex7complexEv", "complex::complex"], [169, 10, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::T"], [169, 10, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::T"], [169, 10, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T1"], [169, 10, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T2"], [169, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::imag"], [169, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::real"], [169, 9, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::real"], [169, 9, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::src"], [169, 9, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex::src"], [169, 12, 1, "_CPPv4N7complex2imE", "complex::im"], [169, 8, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag"], [169, 8, 1, "_CPPv4N7complex4imagEv", "complex::imag"], [169, 8, 1, "_CPPv4NK7complex4imagEv", "complex::imag"], [169, 9, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag::v"], [169, 11, 1, "_CPPv4NK7complexcvNSt7complexI10value_typeEEEv", "complex::operator std::complex&lt;value_type&gt;"], [169, 11, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!="], [169, 8, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!="], [169, 8, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!="], [169, 10, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::T"], [169, 10, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::T"], [169, 10, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::T"], [169, 9, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::real"], [169, 9, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::src"], [169, 9, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::src"], [169, 11, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*="], [169, 8, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*="], [169, 8, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*="], [169, 10, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::T"], [169, 10, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::T"], [169, 10, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::T"], [169, 9, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::real"], [169, 9, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::src"], [169, 9, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::src"], [169, 11, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+="], [169, 8, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+="], [169, 8, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+="], [169, 10, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::T"], [169, 10, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::T"], [169, 10, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::T"], [169, 9, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::real"], [169, 9, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::src"], [169, 9, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::src"], [169, 11, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-="], [169, 8, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-="], [169, 8, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-="], [169, 10, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::T"], [169, 10, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::T"], [169, 10, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::T"], [169, 9, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::real"], [169, 9, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::src"], [169, 9, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::src"], [169, 11, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/="], [169, 8, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/="], [169, 8, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/="], [169, 10, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::T"], [169, 10, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::T"], [169, 10, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::T"], [169, 9, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::real"], [169, 9, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::src"], [169, 9, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::src"], [169, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator="], [169, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator="], [169, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator="], [169, 10, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::T"], [169, 10, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::T"], [169, 10, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::T"], [169, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::re"], [169, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::src"], [169, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::src"], [169, 11, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator=="], [169, 8, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator=="], [169, 8, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator=="], [169, 10, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::T"], [169, 10, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::T"], [169, 10, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::T"], [169, 9, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::real"], [169, 9, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::src"], [169, 9, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::src"], [169, 12, 1, "_CPPv4N7complex2reE", "complex::re"], [169, 8, 1, "_CPPv4N7complex4realE8RealType", "complex::real"], [169, 8, 1, "_CPPv4N7complex4realEv", "complex::real"], [169, 8, 1, "_CPPv4NK7complex4realEv", "complex::real"], [169, 9, 1, "_CPPv4N7complex4realE8RealType", "complex::real::v"], [169, 6, 1, "_CPPv4N7complex10value_typeE", "complex::value_type"], [79, 11, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute"], [79, 9, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::dest"], [79, 9, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::src"], [179, 11, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror"], [179, 11, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror"], [179, 11, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror"], [179, 11, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror"], [179, 11, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror"], [179, 10, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror::ALLOC_PROP"], [179, 10, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::Space"], [179, 10, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::Space"], [179, 10, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::ViewType"], [179, 10, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::ViewType"], [179, 10, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror::ViewType"], [179, 10, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::ViewType"], [179, 10, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::ViewType"], [179, 9, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror::arg_prop"], [179, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::space"], [179, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::space"], [179, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::src"], [179, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::src"], [179, 9, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror::src"], [179, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::src"], [179, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::src"], [179, 11, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view"], [179, 11, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view"], [179, 11, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view"], [179, 11, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view"], [179, 11, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view"], [179, 10, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view::ALLOC_PROP"], [179, 10, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::Space"], [179, 10, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::Space"], [179, 10, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [179, 10, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [179, 10, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view::ViewType"], [179, 10, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::ViewType"], [179, 10, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::ViewType"], [179, 9, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view::arg_prop"], [179, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::space"], [179, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::space"], [179, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::src"], [179, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::src"], [179, 9, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view::src"], [179, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::src"], [179, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::src"], [179, 11, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy"], [179, 11, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy"], [179, 10, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy::ALLOC_PROP"], [179, 10, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::Space"], [179, 10, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy::ViewType"], [179, 10, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::ViewType"], [179, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy::arg_prop"], [179, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::space"], [179, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy::src"], [179, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::src"], [187, 11, 1, "_CPPv4NK4dataEv", "data"], [183, 12, 1, "_CPPv49dimension", "dimension"], [4, 8, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance"], [4, 10, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::IteratorType"], [4, 9, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::first"], [4, 9, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::last"], [4, 8, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end"], [4, 10, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::DataType"], [4, 10, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::Properties"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::view"], [187, 11, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent"], [187, 9, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::dim"], [187, 10, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::iType"], [187, 11, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int"], [187, 9, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::dim"], [187, 10, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::iType"], [122, 8, 1, "_CPPv4NK5finalER10value_type", "final"], [122, 9, 1, "_CPPv4NK5finalER10value_type", "final::val"], [227, 11, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator"], [227, 9, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator::v"], [122, 8, 1, "_CPPv4NK4initER10value_type", "init"], [122, 9, 1, "_CPPv4NK4initER10value_type", "init::val"], [187, 11, 1, "_CPPv4NK12is_allocatedEv", "is_allocated"], [187, 11, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable"], [187, 9, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable::rhs"], [183, 12, 1, "_CPPv423is_extent_constructible", "is_extent_constructible"], [4, 11, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap"], [4, 10, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::IteratorType"], [4, 9, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::first"], [4, 9, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::last"], [122, 8, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [122, 9, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [122, 9, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [127, 11, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free"], [127, 10, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::MemorySpace"], [127, 9, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::ptr"], [128, 11, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc"], [128, 11, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc"], [128, 10, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::MemorySpace"], [128, 10, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::MemorySpace"], [128, 9, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::label"], [128, 9, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::size"], [128, 9, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::size"], [129, 11, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc"], [129, 10, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::MemorySpace"], [129, 9, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::new_size"], [129, 9, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::ptr"], [187, 11, 1, "_CPPv4NK5labelEv", "label"], [187, 11, 1, "_CPPv4NK6layoutEv", "layout"], [151, 11, 1, "_CPPv4NK19max_total_tile_sizeEv", "max_total_tile_size"], [187, 11, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;"], [187, 10, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;::OtherAccessor"], [187, 10, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;::OtherElementType"], [187, 10, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;::OtherExtents"], [187, 10, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;::OtherLayoutPolicy"], [187, 11, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!="], [187, 10, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewDst"], [187, 10, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewSrc"], [187, 11, 1, "_CPPv4NKclEDpRK7IntType", "operator()"], [187, 9, 1, "_CPPv4NKclEDpRK7IntType", "operator()::indices"], [183, 11, 1, "_CPPv4aSRK12LayoutStride", "operator="], [183, 11, 1, "_CPPv4aSRR12LayoutStride", "operator="], [187, 11, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator=="], [227, 11, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator=="], [187, 10, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewDst"], [187, 10, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewSrc"], [227, 10, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator==::ViewSrc"], [183, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions"], [183, 9, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::dimen"], [183, 9, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::order"], [183, 9, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::rank"], [164, 11, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space"], [164, 11, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space"], [164, 10, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::Args"], [164, 10, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::ExecSpace"], [164, 10, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::ExecSpace"], [164, 10, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::T"], [164, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::args"], [164, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::space"], [164, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::space"], [164, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::weights"], [136, 11, 1, "_CPPv418push_finalize_hookNSt8functionIFvvEEE", "push_finalize_hook"], [136, 9, 1, "_CPPv418push_finalize_hookNSt8functionIFvvEEE", "push_finalize_hook::func"], [187, 11, 1, "_CPPv44rankv", "rank"], [187, 11, 1, "_CPPv412rank_dynamicv", "rank_dynamic"], [122, 8, 1, "_CPPv4NK9referenceEv", "reference"], [187, 11, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size"], [187, 11, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size"], [187, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N0"], [187, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N1"], [187, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N2"], [187, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N3"], [187, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N4"], [187, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N5"], [187, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N6"], [187, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N7"], [187, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N8"], [187, 9, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size::layout"], [187, 11, 1, "_CPPv4NK4sizeEv", "size"], [187, 11, 1, "_CPPv4NK4spanEv", "span"], [187, 11, 1, "_CPPv4NK18span_is_contiguousEv", "span_is_contiguous"], [162, 11, 1, "_CPPv45startv", "start"], [162, 11, 1, "_CPPv44stopv", "stop"], [187, 11, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride"], [187, 11, 1, "_CPPv4I0ENK6strideEvP5iType", "stride"], [183, 12, 1, "_CPPv46stride", "stride"], [187, 9, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::dim"], [187, 10, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::iType"], [187, 10, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::iType"], [187, 9, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::strides"], [187, 11, 1, "_CPPv4NK8stride_0Ev", "stride_0"], [187, 11, 1, "_CPPv4NK8stride_1Ev", "stride_1"], [187, 11, 1, "_CPPv4NK8stride_2Ev", "stride_2"], [187, 11, 1, "_CPPv4NK8stride_3Ev", "stride_3"], [187, 11, 1, "_CPPv4NK8stride_4Ev", "stride_4"], [187, 11, 1, "_CPPv4NK8stride_5Ev", "stride_5"], [187, 11, 1, "_CPPv4NK8stride_6Ev", "stride_6"], [187, 11, 1, "_CPPv4NK8stride_7Ev", "stride_7"], [186, 11, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview"], [186, 10, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::Args"], [186, 10, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::ViewType"], [186, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::args"], [186, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::v"], [151, 11, 1, "_CPPv4NK21tile_size_recommendedEv", "tile_size_recommended"], [187, 11, 1, "_CPPv4I0E9to_mdspanDaRK17OtherAccessorType", "to_mdspan"], [187, 10, 1, "_CPPv4I0E9to_mdspanDaRK17OtherAccessorType", "to_mdspan::OtherAccessorType"], [187, 9, 1, "_CPPv4I0E9to_mdspanDaRK17OtherAccessorType", "to_mdspan::other_accessor"], [187, 11, 1, "_CPPv4NK9use_countEv", "use_count"], [82, 7, 1, "_CPPv4I00E6vector", "vector"], [82, 10, 1, "_CPPv4I00E6vector", "vector::Arg1Type"], [82, 10, 1, "_CPPv4I00E6vector", "vector::Scalar"], [82, 11, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign"], [82, 9, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::n"], [82, 9, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::val"], [82, 11, 1, "_CPPv4N6vector4backEv", "vector::back"], [82, 11, 1, "_CPPv4NK6vector4backEv", "vector::back"], [82, 11, 1, "_CPPv4NK6vector5beginEv", "vector::begin"], [82, 11, 1, "_CPPv4N6vector5clearEv", "vector::clear"], [82, 6, 1, "_CPPv4N6vector14const_iteratorE", "vector::const_iterator"], [82, 6, 1, "_CPPv4N6vector13const_pointerE", "vector::const_pointer"], [82, 6, 1, "_CPPv4N6vector15const_referenceE", "vector::const_reference"], [82, 11, 1, "_CPPv4NK6vector4dataEv", "vector::data"], [82, 11, 1, "_CPPv4N6vector14device_to_hostEv", "vector::device_to_host"], [82, 11, 1, "_CPPv4NK6vector5emptyEv", "vector::empty"], [82, 11, 1, "_CPPv4NK6vector3endEv", "vector::end"], [82, 11, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find"], [82, 9, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find::val"], [82, 11, 1, "_CPPv4N6vector5frontEv", "vector::front"], [82, 11, 1, "_CPPv4NK6vector5frontEv", "vector::front"], [82, 11, 1, "_CPPv4NK6vector14host_to_deviceEv", "vector::host_to_device"], [82, 11, 1, "_CPPv4NK6vector12is_allocatedEv", "vector::is_allocated"], [82, 11, 1, "_CPPv4N6vector9is_sortedEv", "vector::is_sorted"], [82, 6, 1, "_CPPv4N6vector8iteratorE", "vector::iterator"], [82, 11, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound"], [82, 9, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::comp_val"], [82, 9, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::start"], [82, 9, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::theEnd"], [82, 11, 1, "_CPPv4NK6vector8max_sizeEv", "vector::max_size"], [82, 11, 1, "_CPPv4N6vector9on_deviceEv", "vector::on_device"], [82, 11, 1, "_CPPv4N6vector7on_hostEv", "vector::on_host"], [82, 8, 1, "_CPPv4NK6vectorclEi", "vector::operator()"], [82, 9, 1, "_CPPv4NK6vectorclEi", "vector::operator()::i"], [82, 8, 1, "_CPPv4NK6vectorixEi", "vector::operator[]"], [82, 9, 1, "_CPPv4NK6vectorixEi", "vector::operator[]::i"], [82, 6, 1, "_CPPv4N6vector7pointerE", "vector::pointer"], [82, 11, 1, "_CPPv4N6vector8pop_backEv", "vector::pop_back"], [82, 11, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back"], [82, 9, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back::val"], [82, 6, 1, "_CPPv4N6vector9referenceE", "vector::reference"], [82, 11, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve"], [82, 9, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve::n"], [82, 11, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize"], [82, 11, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize"], [82, 9, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize::n"], [82, 9, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::n"], [82, 9, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::val"], [82, 11, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation"], [82, 9, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation::extra"], [82, 11, 1, "_CPPv4NK6vector4sizeEv", "vector::size"], [82, 11, 1, "_CPPv4NK6vector4spanEv", "vector::span"], [82, 6, 1, "_CPPv4N6vector10value_typeE", "vector::value_type"], [82, 11, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector"], [82, 11, 1, "_CPPv4N6vector6vectorEv", "vector::vector"], [82, 9, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::n"], [82, 9, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::val"], [122, 8, 1, "_CPPv4NK4viewEv", "view"], [188, 11, 1, "_CPPv4IDpE10view_alloc10ALLOC_PROPDpRK4Args", "view_alloc"], [188, 10, 1, "_CPPv4IDpE10view_alloc10ALLOC_PROPDpRK4Args", "view_alloc::Args"], [188, 9, 1, "_CPPv4IDpE10view_alloc10ALLOC_PROPDpRK4Args", "view_alloc::args"], [188, 11, 1, "_CPPv4IDpE9view_wrap10ALLOC_PROPDpRK4Args", "view_wrap"], [188, 10, 1, "_CPPv4IDpE9view_wrap10ALLOC_PROPDpRK4Args", "view_wrap::Args"], [188, 9, 1, "_CPPv4IDpE9view_wrap10ALLOC_PROPDpRK4Args", "view_wrap::args"], [162, 11, 1, "_CPPv4D0v", "~ProfilingSection"], [163, 11, 1, "_CPPv4D0v", "~ScopedRegion"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:member", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:templateParam", "5": "cpp:type", "6": "cppkokkos:type", "7": "cppkokkos:class", "8": "cppkokkos:kokkosinlinefunction", "9": "cppkokkos:functionParam", "10": "cppkokkos:templateParam", "11": "cppkokkos:function", "12": "cppkokkos:member"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "member", "C++ member"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "templateParam", "C++ template parameter"], "5": ["cpp", "type", "C++ type"], "6": ["cppkokkos", "type", "C++ type"], "7": ["cppkokkos", "class", "C++ class"], "8": ["cppkokkos", "kokkosinlinefunction", "C++ kokkosinlinefunction"], "9": ["cppkokkos", "functionParam", "C++ function parameter"], "10": ["cppkokkos", "templateParam", "C++ template parameter"], "11": ["cppkokkos", "function", "C++ function"], "12": ["cppkokkos", "member", "C++ member"]}, "titleterms": {"api": [0, 72, 73, 83, 84, 190, 195, 230], "algorithm": [0, 3, 72, 215, 244], "random": [1, 211], "number": [1, 236], "rand": 1, "gener": [1, 32, 88, 130, 151, 152, 153, 196, 220, 233], "synopsi": [1, 2, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 130, 138, 143, 144, 145, 152, 153, 157, 159, 161, 165, 177], "exampl": [1, 2, 4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 53, 56, 76, 77, 79, 81, 84, 116, 122, 131, 132, 133, 134, 135, 136, 140, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 167, 168, 173, 175, 177, 178, 180, 183, 184, 185, 186, 187, 191, 192, 193, 199, 200, 202, 206, 207, 209, 227, 235, 241, 244], "sort": [2, 10], "nest": [2, 84, 85, 201], "polici": [2, 85, 90, 95, 201, 208], "team": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 90, 195, 201, 208], "thread": [2, 130, 201, 203, 206], "level": [2, 85], "addit": [2, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124], "inform": [2, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 124, 196], "sampl": 2, "output": 2, "std": [3, 203], "iter": [4, 81], "kokko": [4, 86, 87, 91, 95, 130, 138, 152, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 195, 196, 203, 205, 206, 211, 212, 213, 215, 219, 225, 226, 229, 230, 232, 233, 234, 237, 238, 244, 245], "experiment": [4, 171, 191, 192, 193], "begin": 4, "cbegin": 4, "end": 4, "cend": 4, "note": [4, 87, 133, 139, 140, 141, 151, 166, 168, 172, 173, 175, 176], "paramet": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 135, 146, 147, 148, 149, 151, 153, 180, 187, 191, 192, 193, 242], "requir": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 122, 134, 135, 146, 147, 148, 149, 151, 164, 178, 180, 226, 230, 231, 240], "distanc": 4, "return": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71], "iter_swap": 4, "minimum": [5, 172], "maximum": [5, 172], "modifi": [6, 7], "sequenc": [6, 7, 244], "non": [7, 74, 130, 138, 203, 227, 242], "numer": [8, 89, 142], "partit": 9, "adjacent_differ": 11, "descript": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 81, 82, 100, 101, 102, 103, 104, 105, 106, 107, 127, 128, 129, 133, 152, 154, 155, 156, 157, 158, 159, 160, 161, 169, 178, 179, 181, 182, 183, 184, 185, 186, 188, 217, 227], "adjacent_find": 12, "interfac": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 74, 78, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 131, 132, 134, 135, 136, 146, 147, 148, 149, 151, 156, 158, 160, 164, 178, 180, 187, 191, 192, 193, 217, 227], "overload": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71], "set": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 88], "accept": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71], "execut": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 85, 88, 90, 130, 196, 201, 206, 207, 208, 211, 241], "space": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 88, 93, 94, 130, 138, 196, 206, 207, 208, 211], "handl": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71], "valu": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 191, 192, 205, 236], "all_of": 13, "any_of": 14, "copi": [15, 130, 146, 180, 211], "copy_backward": 16, "copy_if": 17, "copy_n": 18, "count": [19, 211], "count_if": 20, "equal": 21, "detail": [21, 26, 27], "exclusive_scan": 22, "fill": 23, "fill_n": 24, "find": 25, "find_end": 26, "find_first_of": 27, "find_if": 28, "find_if_not": 29, "for_each": 30, "for_each_n": 31, "generate_n": 33, "inclusive_scan": 34, "is_partit": 35, "is_sort": 36, "is_sorted_until": 37, "lexicographical_compar": 38, "max_el": 39, "min_el": 40, "minmax_el": 41, "mismatch": 42, "move": [43, 240], "move_backward": 44, "none_of": 45, "partition_copi": 46, "partition_point": 47, "reduc": [48, 108, 122, 198, 199, 200, 207], "remov": 49, "remove_copi": 50, "remove_copy_if": 51, "remove_if": 52, "replac": 53, "replace_copi": 54, "replace_copy_if": 55, "replace_if": 56, "revers": 57, "reverse_copi": 58, "rotat": 59, "rotate_copi": 60, "search": 61, "search_n": 62, "shift_left": 63, "shift_right": 64, "swap_rang": 65, "transform": 66, "transform_exclusive_scan": 67, "transform_inclusive_scan": 68, "transform_reduc": 69, "uniqu": 70, "unique_copi": 71, "alphabet": 72, "order": 72, "contain": [72, 73, 211, 215], "core": [72, 83, 215], "bitset": 74, "class": [74, 122, 143, 144, 145, 151, 153, 165, 177, 187, 215], "constbitset": 74, "member": [74, 122, 125, 130, 138, 143, 144, 145, 151, 153, 165, 177, 187, 215, 227, 242], "function": [74, 88, 122, 126, 130, 137, 138, 141, 143, 144, 145, 150, 151, 165, 187, 191, 193, 194, 205, 207, 211, 215, 221, 227, 242], "dualview": 75, "usag": [75, 76, 80, 82, 95, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 133, 136, 143, 144, 145, 148, 149, 151, 152, 153, 155, 157, 159, 162, 163, 164, 169, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 238, 241, 244], "dynrankview": 76, "assign": [76, 125, 165, 187, 193, 209], "rule": [76, 187, 211], "dynamicview": 77, "offsetview": 78, "construct": [78, 130, 211], "scatterview": [79, 194, 236], "staticcrsgraph": 80, "unorderedmap": 81, "insert": 81, "us": [81, 130, 146, 196, 207, 211, 212, 235, 237, 238, 240, 244], "default": [81, 130, 211], "unorderedmapinsertoptyp": 81, "noop": 81, "atomicadd": 81, "vector": [82, 201, 203, 209], "deprec": [82, 195, 215], "detect": [84, 130], "idiom": [84, 211], "an": [84, 150, 207, 209, 231], "express": 84, "typedef": [84, 122, 130, 138, 143, 144, 145, 165, 187, 191, 192], "top": [85, 244], "common": [85, 141], "argument": [85, 151, 202], "all": [85, 130, 167], "initi": [86, 135, 202, 211, 238], "final": [86, 134, 202], "scopeguard": [86, 133], "concept": 87, "introduct": [87, 204], "approach": [87, 205], "overview": 87, "The": [87, 205, 209, 219, 240], "executionspac": 87, "implement": [87, 217, 238], "some": [87, 180], "de": 87, "facto": 87, "memoryspac": 87, "executionpolici": [87, 150], "teammemb": 87, "functor": [87, 95, 207, 244], "A": [87, 210, 232], "deleg": 87, "macro": [88, 137, 195, 215], "markup": 88, "version": [88, 226], "backend": [88, 220, 234], "option": [88, 220], "c": [88, 126, 195, 203, 210, 219, 230, 243], "standard": [88, 211, 219], "third": [88, 220], "parti": [88, 220], "librari": [88, 203, 209, 219, 220], "architectur": [88, 220], "parallel": [90, 95, 201, 207, 220, 225, 238], "dispatch": [90, 207], "pattern": [90, 95, 208, 241, 244], "tag": [90, 207, 243], "calcul": 90, "profil": [91, 162, 163], "scopedregion": [91, 163], "profilingsect": [91, 162], "stl": 92, "compat": [92, 195, 230], "issu": [92, 212, 221, 230, 231], "access": [93, 187, 191, 192, 211], "task": [95, 244], "Will": 95, "work": [95, 205, 219, 241, 244], "my": 95, "problem": [95, 205, 211, 238], "basic": [95, 201, 209, 225], "predecessor": 95, "schedul": 95, "wait": 95, "aggreg": 95, "prioriti": 95, "trait": [96, 142, 194, 208, 211], "is_array_layout": 96, "is_execution_polici": 96, "is_memory_spac": 96, "is_memory_trait": 96, "is_reduc": 96, "is_spac": 96, "util": 97, "view": [98, 180, 187, 189, 203, 210, 211], "relat": [98, 219], "atom": [99, 194, 211], "atomic_compare_exchang": 100, "see": [100, 102, 104, 107, 131, 132, 133, 134, 135, 136, 140, 141, 168, 172], "also": [100, 102, 104, 107, 131, 132, 133, 134, 135, 136, 140, 141, 168, 172], "atomic_compare_exchange_strong": 101, "atomic_exchang": 102, "atomic_fetch_": 103, "op": [103, 105, 106], "atomic_load": 104, "atomic_": [105, 106], "_fetch": 106, "atomic_stor": 107, "built": [108, 122, 198, 199], "band": 109, "bor": 110, "land": 111, "lor": 112, "max": [113, 191], "maxloc": 114, "min": [115, 191], "minloc": 116, "minmax": 117, "minmaxloc": 118, "minmaxlocscalar": 119, "minmaxscalar": 120, "prod": 121, "reducerconcept": 122, "public": [122, 125, 143, 144, 145, 151, 153, 165, 177, 187, 215, 217], "constructor": [122, 130, 138, 143, 144, 145, 151, 153, 165, 177, 187, 191, 192], "In": [122, 198, 199], "reduct": [123, 192, 197, 207, 209], "scalar": [123, 199], "type": [123, 189, 199, 209, 210, 211, 215], "sum": [124, 236], "vallocscalar": 125, "variabl": [125, 202], "oper": [125, 172, 191, 192, 194, 209, 237, 238, 241, 243], "style": 126, "memori": [126, 138, 194, 201, 203, 206, 208, 211], "manag": [126, 203, 211, 234], "kokkos_fre": 127, "kokkos_malloc": 128, "kokkos_realloc": 129, "cuda": [130, 196, 203, 212, 221, 225, 239], "hip": [130, 221, 225], "sycl": [130, 221], "hpx": 130, "openmp": [130, 203, 225], "openmptarget": 130, "serial": [130, 220, 238, 241], "executionspaceconcept": 130, "alias": [130, 215], "base": 130, "configur": [130, 196, 212, 225], "defaultexecutionspac": 130, "defaulthostexecutionspac": 130, "veri": [130, 205], "simplest": 130, "Not": 130, "Being": 130, "more": 130, "facil": [130, 138], "initargu": 131, "initializationset": 132, "semant": [134, 135, 146, 147, 148, 149, 164, 180], "push_finalize_hook": 136, "annot": 137, "kokkos_funct": 137, "kokkos_inline_funct": 137, "kokkos_forceinline_funct": 137, "kokkos_relocatable_funct": 137, "kokkos_lambda": 137, "kokkos_class_lambda": 137, "kokkos_deduction_guid": 137, "cudaspac": 138, "cudahostpinnedspac": 138, "cudauvmspac": 138, "hipspac": 138, "hiphostpinnedspac": 138, "hipmanagedspac": 138, "sycldeviceusmspac": 138, "syclhostusmspac": 138, "syclsharedusmspac": 138, "hostspac": 138, "sharedspac": [138, 240], "sharedhostpinnedspac": 138, "memoryspaceconcept": 138, "bit": 139, "manipul": 139, "mathemat": [140, 221], "constant": [140, 221], "math": 141, "parallelfortag": 143, "parallelreducetag": 144, "parallelscantag": 145, "fenc": 146, "time": 146, "kernel": [146, 201, 241], "asynchron": 146, "deep": [146, 211], "parallel_for": 147, "parallel_reduc": 148, "parallel_scan": 149, "what": [150, 205, 211], "mdrangepolici": [151, 238], "templat": [151, 152, 153, 191, 192, 193, 228, 242, 243], "agument": [151, 152, 153], "specif": [151, 220], "ctad": [151, 153], "sinc": [151, 153], "4": [151, 153, 194, 196, 201, 202, 203, 207, 208, 211, 226], "3": [151, 153, 194, 196, 200, 201, 202, 203, 206, 207, 208, 210, 211, 215, 226, 244], "nestedpolici": 152, "list": [152, 196], "perteam": 152, "perthread": 152, "teamthreadrang": [152, 157], "teamthreadmdrang": [152, 156], "teamvectorrang": [152, 159], "teamvectormdrang": [152, 158], "threadvectorrang": [152, 161], "threadvectormdrang": [152, 160], "rangepolici": [153, 238], "precondit": [153, 241, 244], "teamhandleconcept": 154, "teampolici": 155, "partition_spac": 164, "pair": 165, "convers": [165, 187, 211], "abort": 166, "kokkos_assert": 168, "complex": 169, "device_id": 170, "num_devic": 173, "num_thread": 174, "printf": 175, "kokkos_swap": 176, "timer": 177, "subview": [178, 186, 210], "create_mirror": 179, "_view": 179, "deep_copi": 180, "thing": 180, "you": [180, 211], "can": [180, 211], "cannot": 180, "do": [180, 205, 211], "how": [180, 205, 210, 211], "get": [180, 211, 225], "layout": [180, 187, 208, 211], "incompat": 180, "layoutleft": 181, "layoutright": 182, "layoutstrid": 183, "realloc": 184, "resiz": [185, 211], "enum": 187, "data": [187, 203, 211], "dimens": [187, 210, 211], "stride": [187, 211], "other": [187, 195, 211, 215], "mdspan": 187, "nonmemb": 187, "natur": 187, "view_alloc": 188, "like": 189, "simd": [190, 191, 193, 209], "width": [191, 192], "load": [191, 193], "store": [191, 193], "method": [191, 192, 193], "flag": [191, 193], "arithmet": 191, "comparison": [191, 192], "round": 191, "cmath": 191, "global": [191, 192], "simd_mask": 192, "boolean": 192, "where_express": 193, "where": 193, "gather": [193, 230], "scatter": 193, "10": 194, "1": [194, 196, 198, 201, 202, 203, 204, 206, 207, 208, 210, 211, 241], "write": 194, "conflict": 194, "Their": 194, "resolut": 194, "With": 194, "2": [194, 196, 199, 201, 202, 203, 206, 207, 208, 210, 211, 241], "free": [194, 215], "12": [195, 203], "backward": 195, "futur": [195, 206], "user": 195, "defin": 195, "abi": 195, "header": [195, 202, 215], "right": 195, "reserv": 195, "miscellan": 195, "proof": 195, "compil": [196, 226, 232, 234], "cmake": [196, 212, 220], "build": [196, 212, 225, 226], "system": [196, 226], "instal": [196, 212, 225], "packag": [196, 212], "tree": 196, "spack": [196, 212], "develop": [196, 212, 216, 220, 230], "keyword": [196, 220], "trilino": 196, "branch": 196, "gnu": 196, "makefil": [196, 212], "5": [196, 202, 207, 208, 211], "6": [196, 208, 211], "restrict": [196, 201], "9": [197, 198, 199, 200], "custom": [197, 199, 200, 233], "8": 201, "hierarch": 201, "motiv": [201, 206], "creat": [201, 211], "instanc": [201, 206], "scratch": 201, "pad": 201, "loop": [201, 207], "barrier": 201, "singl": [201, 239], "executor": 201, "0": 202, "includ": 202, "command": 202, "line": 202, "environ": 202, "struct": 202, "code": [202, 203, 209, 240, 241], "13": 203, "interoper": 203, "legaci": 203, "structur": [203, 237, 242], "raw": [203, 211, 212], "alloc": [203, 237], "through": [203, 244], "extern": 203, "fundament": 203, "own": 203, "call": 203, "14": 205, "virtual": 205, "vtabl": 205, "vpointer": 205, "annoi": 205, "gpu": [205, 220], "Then": 205, "why": [205, 211], "doesn": 205, "t": [205, 211], "straightforward": 205, "make": [205, 211], "i": [205, 207, 211], "need": [205, 211], "setter": 205, "host": [205, 220, 241], "But": 205, "realli": [205, 211], "devic": [205, 220, 241], "side": 205, "thi": [205, 211, 230], "portabl": [205, 219], "case": [205, 235, 237, 238, 244], "doe": 205, "nvcc": 205, "solv": 205, "question": [205, 219], "follow": 205, "up": 205, "machin": 206, "model": [206, 208, 219, 230], "abstract": 206, "figur": 206, "conceptu": 206, "high": 206, "perform": [206, 209, 219, 234, 241], "comput": [206, 234, 236, 241], "node": [206, 236], "program": [206, 208, 219, 224, 230, 237], "safeti": 206, "7": [207, 211, 215], "specifi": [207, 211], "bodi": 207, "lambda": 207, "should": 207, "join": 207, "init": 207, "arrai": [207, 211, 237, 238, 242], "result": 207, "scan": 207, "name": [207, 212], "rang": 208, "15": 209, "background": 209, "idea": 209, "deal": [209, 243], "remaind": 209, "condit": [209, 244], "ternari": 209, "11": 210, "slice": 210, "take": 210, "deduct": 210, "degener": 210, "obtain": 210, "multidimension": [211, 237], "mai": 211, "probabl": 211, "don": 211, "want": 211, "s": 211, "const": 211, "entri": 211, "index": 211, "refer": [211, 238], "lifetim": 211, "depend": 211, "explicitli": 211, "placement": 211, "hostmirror": 211, "pointer": 211, "unmanag": 211, "special": 211, "philosophi": 212, "known": [212, 221], "knownissu": 212, "crai": 212, "fortran": [212, 237], "inlin": 212, "vs": 212, "uvm": 212, "cite": 213, "contribut": 214, "document": [214, 228], "x": [215, 226], "namespac": 215, "updat": 215, "guid": [216, 224], "pr": 217, "review": 217, "intern": [217, 233], "test": [217, 229, 233, 234], "behavior": 217, "faq": 218, "websit": 219, "content": 219, "select": 220, "debug": 220, "tpl": 220, "cpu": [220, 225], "nvidia": 220, "amd": 220, "intel": 220, "licens": 222, "quick": 225, "start": 225, "download": 225, "latest": 225, "recip": 225, "link": 225, "hello": 225, "world": 225, "help": 225, "coolerview": 227, "plan": [229, 230], "project": 230, "stabil": 230, "activ": 230, "support": [230, 232], "platform": [230, 234], "capabl": 230, "iso": 230, "releas": [230, 233], "priorit": 230, "coordin": 230, "process": [230, 233], "feedback": 231, "report": 231, "attach": 232, "identif": 232, "b": 232, "file": 232, "promot": 232, "txt": 232, "chang": 233, "pull": 233, "request": 233, "nightli": 233, "integr": 233, "prefer": 233, "commun": 233, "workflow": 234, "compon": 234, "softwar": 234, "git": 234, "repositori": 234, "batch": 234, "queue": 234, "account": 234, "script": 234, "unit": 234, "averag": 236, "element": 236, "adjac": 236, "full": 236, "interop": 237, "multi": 238, "dimension": 238, "formul": 238, "mpi": 239, "halo": 239, "exchang": 239, "send": 239, "messag": 239, "awar": 239, "separ": 239, "out": 239, "identifi": 239, "subset": 239, "indic": 239, "extract": 239, "from": 240, "kokkos_enable_cuda_uvm": 240, "altern": 240, "transit": 240, "overlap": 241, "actor": [241, 244], "subject": [241, 244], "assumpt": [241, 244], "constraint": [241, 244], "while": 241, "cabana": 242, "soa": 242, "aosoa": 242, "pre": 243, "17": 243, "post": 244, "recurs": 244, "fibonacci": 244, "flow": 244, "n": 244, "divid": 244, "graph": 244, "down": 244, "bf": 244, "window": 245, "h": 245, "video": 246, "lectur": 246, "slide": 246}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "cppkokkos": 6, "sphinx": 56}})