Search.setIndex({"docnames": ["API/algorithms-index", "API/algorithms/Random-Number", "API/algorithms/Sort", "API/algorithms/std-algorithms-index", "API/algorithms/std-algorithms/Iterators", "API/algorithms/std-algorithms/StdMinMaxElement", "API/algorithms/std-algorithms/StdModSeq", "API/algorithms/std-algorithms/StdNonModSeq", "API/algorithms/std-algorithms/StdNumeric", "API/algorithms/std-algorithms/StdPartitioningOps", "API/algorithms/std-algorithms/StdSorting", "API/algorithms/std-algorithms/all/StdAdjacentDifference", "API/algorithms/std-algorithms/all/StdAdjacentFind", "API/algorithms/std-algorithms/all/StdAllOf", "API/algorithms/std-algorithms/all/StdAnyOf", "API/algorithms/std-algorithms/all/StdCopy", "API/algorithms/std-algorithms/all/StdCopyBackward", "API/algorithms/std-algorithms/all/StdCopyIf", "API/algorithms/std-algorithms/all/StdCopy_n", "API/algorithms/std-algorithms/all/StdCount", "API/algorithms/std-algorithms/all/StdCountIf", "API/algorithms/std-algorithms/all/StdEqual", "API/algorithms/std-algorithms/all/StdExclusiveScan", "API/algorithms/std-algorithms/all/StdFill", "API/algorithms/std-algorithms/all/StdFill_n", "API/algorithms/std-algorithms/all/StdFind", "API/algorithms/std-algorithms/all/StdFindEnd", "API/algorithms/std-algorithms/all/StdFindFirstOf", "API/algorithms/std-algorithms/all/StdFindIf", "API/algorithms/std-algorithms/all/StdFindIfNot", "API/algorithms/std-algorithms/all/StdForEach", "API/algorithms/std-algorithms/all/StdForEachN", "API/algorithms/std-algorithms/all/StdGenerate", "API/algorithms/std-algorithms/all/StdGenerate_n", "API/algorithms/std-algorithms/all/StdInclusiveScan", "API/algorithms/std-algorithms/all/StdIsPartitioned", "API/algorithms/std-algorithms/all/StdIsSorted", "API/algorithms/std-algorithms/all/StdIsSortedUntil", "API/algorithms/std-algorithms/all/StdLexicographicalCompare", "API/algorithms/std-algorithms/all/StdMaxElement", "API/algorithms/std-algorithms/all/StdMinElement", "API/algorithms/std-algorithms/all/StdMinMaxElement", "API/algorithms/std-algorithms/all/StdMismatch", "API/algorithms/std-algorithms/all/StdMove", "API/algorithms/std-algorithms/all/StdMoveBackward", "API/algorithms/std-algorithms/all/StdNoneOf", "API/algorithms/std-algorithms/all/StdPartitionCopy", "API/algorithms/std-algorithms/all/StdPartitionPoint", "API/algorithms/std-algorithms/all/StdReduce", "API/algorithms/std-algorithms/all/StdRemove", "API/algorithms/std-algorithms/all/StdRemoveCopy", "API/algorithms/std-algorithms/all/StdRemoveCopyIf", "API/algorithms/std-algorithms/all/StdRemoveIf", "API/algorithms/std-algorithms/all/StdReplace", "API/algorithms/std-algorithms/all/StdReplaceCopy", "API/algorithms/std-algorithms/all/StdReplaceCopyIf", "API/algorithms/std-algorithms/all/StdReplaceIf", "API/algorithms/std-algorithms/all/StdReverse", "API/algorithms/std-algorithms/all/StdReverseCopy", "API/algorithms/std-algorithms/all/StdRotate", "API/algorithms/std-algorithms/all/StdRotateCopy", "API/algorithms/std-algorithms/all/StdSearch", "API/algorithms/std-algorithms/all/StdSearchN", "API/algorithms/std-algorithms/all/StdShiftLeft", "API/algorithms/std-algorithms/all/StdShiftRight", "API/algorithms/std-algorithms/all/StdSwapRanges", "API/algorithms/std-algorithms/all/StdTransform", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan", "API/algorithms/std-algorithms/all/StdTransformReduce", "API/algorithms/std-algorithms/all/StdUnique", "API/algorithms/std-algorithms/all/StdUniqueCopy", "API/alphabetical", "API/containers-index", "API/containers/Bitset", "API/containers/DualView", "API/containers/DynRankView", "API/containers/DynamicView", "API/containers/Offset-View", "API/containers/ScatterView", "API/containers/StaticCrsGraph", "API/containers/Unordered-Map", "API/containers/vector", "API/core-index", "API/core/Detection-Idiom", "API/core/Execution-Policies", "API/core/Initialize-and-Finalize", "API/core/KokkosConcepts", "API/core/Macros", "API/core/Numerics", "API/core/ParallelDispatch", "API/core/Profiling", "API/core/STL-Compatibility", "API/core/SpaceAccessibility", "API/core/Spaces", "API/core/Task-Parallelism", "API/core/Traits", "API/core/Utilities", "API/core/View", "API/core/atomics", "API/core/atomics/atomic_assign", "API/core/atomics/atomic_compare_exchange", "API/core/atomics/atomic_compare_exchange_strong", "API/core/atomics/atomic_exchange", "API/core/atomics/atomic_fetch_op", "API/core/atomics/atomic_load", "API/core/atomics/atomic_op", "API/core/atomics/atomic_op_fetch", "API/core/atomics/atomic_store", "API/core/builtin_reducers", "API/core/builtinreducers/BAnd", "API/core/builtinreducers/BOr", "API/core/builtinreducers/LAnd", "API/core/builtinreducers/LOr", "API/core/builtinreducers/Max", "API/core/builtinreducers/MaxLoc", "API/core/builtinreducers/Min", "API/core/builtinreducers/MinLoc", "API/core/builtinreducers/MinMax", "API/core/builtinreducers/MinMaxLoc", "API/core/builtinreducers/MinMaxLocScalar", "API/core/builtinreducers/MinMaxScalar", "API/core/builtinreducers/Prod", "API/core/builtinreducers/ReducerConcept", "API/core/builtinreducers/ReductionScalarTypes", "API/core/builtinreducers/Sum", "API/core/builtinreducers/ValLocScalar", "API/core/c_style_memory_management", "API/core/c_style_memory_management/free", "API/core/c_style_memory_management/malloc", "API/core/c_style_memory_management/realloc", "API/core/execution_spaces", "API/core/initialize_finalize/InitArguments", "API/core/initialize_finalize/InitializationSettings", "API/core/initialize_finalize/ScopeGuard", "API/core/initialize_finalize/finalize", "API/core/initialize_finalize/initialize", "API/core/initialize_finalize/push_finalize_hook", "API/core/macros-special/host_device_macros", "API/core/memory_spaces", "API/core/numerics/bit-manipulation", "API/core/numerics/mathematical-constants", "API/core/numerics/mathematical-functions", "API/core/numerics/numeric-traits", "API/core/parallel-dispatch/ParallelForTag", "API/core/parallel-dispatch/ParallelReduceTag", "API/core/parallel-dispatch/ParallelScanTag", "API/core/parallel-dispatch/fence", "API/core/parallel-dispatch/parallel_for", "API/core/parallel-dispatch/parallel_reduce", "API/core/parallel-dispatch/parallel_scan", "API/core/policies/ExecutionPolicyConcept", "API/core/policies/MDRangePolicy", "API/core/policies/NestedPolicies", "API/core/policies/RangePolicy", "API/core/policies/TeamHandleConcept", "API/core/policies/TeamPolicy", "API/core/policies/TeamThreadMDRange", "API/core/policies/TeamThreadRange", "API/core/policies/TeamVectorMDRange", "API/core/policies/TeamVectorRange", "API/core/policies/ThreadVectorMDRange", "API/core/policies/ThreadVectorRange", "API/core/profiling/profiling_section", "API/core/profiling/scoped_region", "API/core/spaces/partition_space", "API/core/stl-compat/pair", "API/core/utilities/abort", "API/core/utilities/all", "API/core/utilities/assert", "API/core/utilities/complex", "API/core/utilities/device_id", "API/core/utilities/experimental", "API/core/utilities/min_max_clamp", "API/core/utilities/num_devices", "API/core/utilities/num_threads", "API/core/utilities/printf", "API/core/utilities/swap", "API/core/utilities/timer", "API/core/view/Subview_type", "API/core/view/create_mirror", "API/core/view/deep_copy", "API/core/view/layoutLeft", "API/core/view/layoutRight", "API/core/view/layoutStride", "API/core/view/realloc", "API/core/view/resize", "API/core/view/subview", "API/core/view/view", "API/core/view/view_alloc", "API/core/view/view_like", "API/simd-index", "API/simd/simd", "API/simd/simd_mask", "API/simd/where_expression", "ProgrammingGuide/Atomic-Operations", "ProgrammingGuide/Compatibility", "ProgrammingGuide/Compiling", "ProgrammingGuide/Custom-Reductions", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types", "ProgrammingGuide/Custom-Reductions-Custom-Reducers", "ProgrammingGuide/HierarchicalParallelism", "ProgrammingGuide/Initialization", "ProgrammingGuide/Interoperability", "ProgrammingGuide/Introduction", "ProgrammingGuide/Kokkos-and-Virtual-Functions", "ProgrammingGuide/Machine-Model", "ProgrammingGuide/ParallelDispatch", "ProgrammingGuide/ProgrammingModel", "ProgrammingGuide/SIMD", "ProgrammingGuide/Subviews", "ProgrammingGuide/View", "building", "citation", "contributing", "deprecation_page", "developer-guides/index", "developer-guides/prs-and-reviews", "faq", "index", "keywords", "known-issues", "license", "mydefs", "programmingguide", "quick_start", "requirements", "templates/class_api", "templates/index", "testing-and-issue-tracking", "testing-and-issue-tracking/Kokkos-Project-Planning", "testing-and-issue-tracking/Requirements-Issues-and-Feedback", "testing-and-issue-tracking/Testing-Process-Details", "testing-and-issue-tracking/Testing-Processes", "testing-and-issue-tracking/Testing-Workflow-Components", "usecases", "usecases/Average-To-Nodes", "usecases/Kokkos-Fortran-Interoperability", "usecases/MDRangePolicy", "usecases/MPI-Halo-Exchange", "usecases/Moving_from_EnableUVM_to_SharedSpace", "usecases/OverlappingHostAndDeviceWork", "usecases/SoA-and-AoSoA-with-Cabana", "usecases/TaggedOperators", "usecases/Tasking", "usecases/WindowsHeader", "videolectures"], "filenames": ["API/algorithms-index.rst", "API/algorithms/Random-Number.rst", "API/algorithms/Sort.rst", "API/algorithms/std-algorithms-index.rst", "API/algorithms/std-algorithms/Iterators.rst", "API/algorithms/std-algorithms/StdMinMaxElement.rst", "API/algorithms/std-algorithms/StdModSeq.rst", "API/algorithms/std-algorithms/StdNonModSeq.rst", "API/algorithms/std-algorithms/StdNumeric.rst", "API/algorithms/std-algorithms/StdPartitioningOps.rst", "API/algorithms/std-algorithms/StdSorting.rst", "API/algorithms/std-algorithms/all/StdAdjacentDifference.md", "API/algorithms/std-algorithms/all/StdAdjacentFind.rst", "API/algorithms/std-algorithms/all/StdAllOf.rst", "API/algorithms/std-algorithms/all/StdAnyOf.rst", "API/algorithms/std-algorithms/all/StdCopy.rst", "API/algorithms/std-algorithms/all/StdCopyBackward.rst", "API/algorithms/std-algorithms/all/StdCopyIf.rst", "API/algorithms/std-algorithms/all/StdCopy_n.rst", "API/algorithms/std-algorithms/all/StdCount.rst", "API/algorithms/std-algorithms/all/StdCountIf.rst", "API/algorithms/std-algorithms/all/StdEqual.rst", "API/algorithms/std-algorithms/all/StdExclusiveScan.md", "API/algorithms/std-algorithms/all/StdFill.md", "API/algorithms/std-algorithms/all/StdFill_n.md", "API/algorithms/std-algorithms/all/StdFind.rst", "API/algorithms/std-algorithms/all/StdFindEnd.rst", "API/algorithms/std-algorithms/all/StdFindFirstOf.rst", "API/algorithms/std-algorithms/all/StdFindIf.rst", "API/algorithms/std-algorithms/all/StdFindIfNot.rst", "API/algorithms/std-algorithms/all/StdForEach.md", "API/algorithms/std-algorithms/all/StdForEachN.md", "API/algorithms/std-algorithms/all/StdGenerate.rst", "API/algorithms/std-algorithms/all/StdGenerate_n.rst", "API/algorithms/std-algorithms/all/StdInclusiveScan.md", "API/algorithms/std-algorithms/all/StdIsPartitioned.rst", "API/algorithms/std-algorithms/all/StdIsSorted.rst", "API/algorithms/std-algorithms/all/StdIsSortedUntil.rst", "API/algorithms/std-algorithms/all/StdLexicographicalCompare.md", "API/algorithms/std-algorithms/all/StdMaxElement.rst", "API/algorithms/std-algorithms/all/StdMinElement.rst", "API/algorithms/std-algorithms/all/StdMinMaxElement.rst", "API/algorithms/std-algorithms/all/StdMismatch.md", "API/algorithms/std-algorithms/all/StdMove.rst", "API/algorithms/std-algorithms/all/StdMoveBackward.rst", "API/algorithms/std-algorithms/all/StdNoneOf.rst", "API/algorithms/std-algorithms/all/StdPartitionCopy.rst", "API/algorithms/std-algorithms/all/StdPartitionPoint.md", "API/algorithms/std-algorithms/all/StdReduce.md", "API/algorithms/std-algorithms/all/StdRemove.rst", "API/algorithms/std-algorithms/all/StdRemoveCopy.rst", "API/algorithms/std-algorithms/all/StdRemoveCopyIf.rst", "API/algorithms/std-algorithms/all/StdRemoveIf.rst", "API/algorithms/std-algorithms/all/StdReplace.md", "API/algorithms/std-algorithms/all/StdReplaceCopy.md", "API/algorithms/std-algorithms/all/StdReplaceCopyIf.md", "API/algorithms/std-algorithms/all/StdReplaceIf.md", "API/algorithms/std-algorithms/all/StdReverse.rst", "API/algorithms/std-algorithms/all/StdReverseCopy.rst", "API/algorithms/std-algorithms/all/StdRotate.rst", "API/algorithms/std-algorithms/all/StdRotateCopy.rst", "API/algorithms/std-algorithms/all/StdSearch.md", "API/algorithms/std-algorithms/all/StdSearchN.md", "API/algorithms/std-algorithms/all/StdShiftLeft.rst", "API/algorithms/std-algorithms/all/StdShiftRight.rst", "API/algorithms/std-algorithms/all/StdSwapRanges.rst", "API/algorithms/std-algorithms/all/StdTransform.rst", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformReduce.md", "API/algorithms/std-algorithms/all/StdUnique.rst", "API/algorithms/std-algorithms/all/StdUniqueCopy.rst", "API/alphabetical.rst", "API/containers-index.rst", "API/containers/Bitset.rst", "API/containers/DualView.rst", "API/containers/DynRankView.rst", "API/containers/DynamicView.rst", "API/containers/Offset-View.rst", "API/containers/ScatterView.rst", "API/containers/StaticCrsGraph.rst", "API/containers/Unordered-Map.rst", "API/containers/vector.rst", "API/core-index.rst", "API/core/Detection-Idiom.rst", "API/core/Execution-Policies.rst", "API/core/Initialize-and-Finalize.rst", "API/core/KokkosConcepts.rst", "API/core/Macros.rst", "API/core/Numerics.rst", "API/core/ParallelDispatch.rst", "API/core/Profiling.rst", "API/core/STL-Compatibility.rst", "API/core/SpaceAccessibility.rst", "API/core/Spaces.rst", "API/core/Task-Parallelism.rst", "API/core/Traits.rst", "API/core/Utilities.rst", "API/core/View.rst", "API/core/atomics.rst", "API/core/atomics/atomic_assign.rst", "API/core/atomics/atomic_compare_exchange.rst", "API/core/atomics/atomic_compare_exchange_strong.rst", "API/core/atomics/atomic_exchange.rst", "API/core/atomics/atomic_fetch_op.rst", "API/core/atomics/atomic_load.rst", "API/core/atomics/atomic_op.rst", "API/core/atomics/atomic_op_fetch.rst", "API/core/atomics/atomic_store.rst", "API/core/builtin_reducers.rst", "API/core/builtinreducers/BAnd.rst", "API/core/builtinreducers/BOr.rst", "API/core/builtinreducers/LAnd.rst", "API/core/builtinreducers/LOr.rst", "API/core/builtinreducers/Max.rst", "API/core/builtinreducers/MaxLoc.rst", "API/core/builtinreducers/Min.rst", "API/core/builtinreducers/MinLoc.rst", "API/core/builtinreducers/MinMax.rst", "API/core/builtinreducers/MinMaxLoc.rst", "API/core/builtinreducers/MinMaxLocScalar.rst", "API/core/builtinreducers/MinMaxScalar.rst", "API/core/builtinreducers/Prod.rst", "API/core/builtinreducers/ReducerConcept.rst", "API/core/builtinreducers/ReductionScalarTypes.rst", "API/core/builtinreducers/Sum.rst", "API/core/builtinreducers/ValLocScalar.rst", "API/core/c_style_memory_management.rst", "API/core/c_style_memory_management/free.rst", "API/core/c_style_memory_management/malloc.rst", "API/core/c_style_memory_management/realloc.rst", "API/core/execution_spaces.rst", "API/core/initialize_finalize/InitArguments.rst", "API/core/initialize_finalize/InitializationSettings.rst", "API/core/initialize_finalize/ScopeGuard.rst", "API/core/initialize_finalize/finalize.rst", "API/core/initialize_finalize/initialize.rst", "API/core/initialize_finalize/push_finalize_hook.rst", "API/core/macros-special/host_device_macros.rst", "API/core/memory_spaces.rst", "API/core/numerics/bit-manipulation.rst", "API/core/numerics/mathematical-constants.rst", "API/core/numerics/mathematical-functions.rst", "API/core/numerics/numeric-traits.rst", "API/core/parallel-dispatch/ParallelForTag.rst", "API/core/parallel-dispatch/ParallelReduceTag.rst", "API/core/parallel-dispatch/ParallelScanTag.rst", "API/core/parallel-dispatch/fence.rst", "API/core/parallel-dispatch/parallel_for.rst", "API/core/parallel-dispatch/parallel_reduce.rst", "API/core/parallel-dispatch/parallel_scan.rst", "API/core/policies/ExecutionPolicyConcept.rst", "API/core/policies/MDRangePolicy.rst", "API/core/policies/NestedPolicies.rst", "API/core/policies/RangePolicy.rst", "API/core/policies/TeamHandleConcept.rst", "API/core/policies/TeamPolicy.rst", "API/core/policies/TeamThreadMDRange.rst", "API/core/policies/TeamThreadRange.rst", "API/core/policies/TeamVectorMDRange.rst", "API/core/policies/TeamVectorRange.rst", "API/core/policies/ThreadVectorMDRange.rst", "API/core/policies/ThreadVectorRange.rst", "API/core/profiling/profiling_section.rst", "API/core/profiling/scoped_region.rst", "API/core/spaces/partition_space.rst", "API/core/stl-compat/pair.md", "API/core/utilities/abort.rst", "API/core/utilities/all.md", "API/core/utilities/assert.rst", "API/core/utilities/complex.rst", "API/core/utilities/device_id.rst", "API/core/utilities/experimental.md", "API/core/utilities/min_max_clamp.rst", "API/core/utilities/num_devices.rst", "API/core/utilities/num_threads.rst", "API/core/utilities/printf.rst", "API/core/utilities/swap.rst", "API/core/utilities/timer.rst", "API/core/view/Subview_type.rst", "API/core/view/create_mirror.rst", "API/core/view/deep_copy.rst", "API/core/view/layoutLeft.rst", "API/core/view/layoutRight.rst", "API/core/view/layoutStride.rst", "API/core/view/realloc.rst", "API/core/view/resize.rst", "API/core/view/subview.rst", "API/core/view/view.rst", "API/core/view/view_alloc.rst", "API/core/view/view_like.rst", "API/simd-index.rst", "API/simd/simd.md", "API/simd/simd_mask.md", "API/simd/where_expression.md", "ProgrammingGuide/Atomic-Operations.md", "ProgrammingGuide/Compatibility.md", "ProgrammingGuide/Compiling.md", "ProgrammingGuide/Custom-Reductions.rst", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers.md", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types.md", "ProgrammingGuide/Custom-Reductions-Custom-Reducers.md", "ProgrammingGuide/HierarchicalParallelism.md", "ProgrammingGuide/Initialization.rst", "ProgrammingGuide/Interoperability.md", "ProgrammingGuide/Introduction.md", "ProgrammingGuide/Kokkos-and-Virtual-Functions.md", "ProgrammingGuide/Machine-Model.rst", "ProgrammingGuide/ParallelDispatch.md", "ProgrammingGuide/ProgrammingModel.md", "ProgrammingGuide/SIMD.md", "ProgrammingGuide/Subviews.md", "ProgrammingGuide/View.rst", "building.md", "citation.rst", "contributing.rst", "deprecation_page.rst", "developer-guides/index.rst", "developer-guides/prs-and-reviews.rst", "faq.rst", "index.rst", "keywords.rst", "known-issues.rst", "license.rst", "mydefs.rst", "programmingguide.rst", "quick_start.rst", "requirements.rst", "templates/class_api.rst", "templates/index.rst", "testing-and-issue-tracking.rst", "testing-and-issue-tracking/Kokkos-Project-Planning.md", "testing-and-issue-tracking/Requirements-Issues-and-Feedback.md", "testing-and-issue-tracking/Testing-Process-Details.md", "testing-and-issue-tracking/Testing-Processes.md", "testing-and-issue-tracking/Testing-Workflow-Components.md", "usecases.rst", "usecases/Average-To-Nodes.md", "usecases/Kokkos-Fortran-Interoperability.md", "usecases/MDRangePolicy.md", "usecases/MPI-Halo-Exchange.md", "usecases/Moving_from_EnableUVM_to_SharedSpace.rst", "usecases/OverlappingHostAndDeviceWork.md", "usecases/SoA-and-AoSoA-with-Cabana.md", "usecases/TaggedOperators.md", "usecases/Tasking.md", "usecases/WindowsHeader.md", "videolectures.rst"], "titles": ["API: Algorithms", "Random-Number", "Sort", "Std Algorithms", "Iterators", "Minimum/maximum", "Modifying Sequence", "Non-modifying Sequence", "Numeric", "Partitioning", "Sorting", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_difference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">all_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">any_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">equal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_end</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_first_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if_not</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_partitioned</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted_until</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lexicographical_compare</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">max_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">min_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">minmax_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mismatch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">none_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_point</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_left</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_right</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">swap_ranges</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique_copy</span></code>", "API in Alphabetical Order", "API: Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Bitset</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DualView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynRankView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynamicView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">OffsetView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScatterView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">StaticCrsGraph</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnorderedMap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector</span></code> [DEPRECATED]", "API: Core", "Detection Idiom", "Execution Policies", "Initialize and Finalize", "Kokkos Concepts", "Macros", "Numerics", "Parallel Execution/Dispatch", "Profiling", "STL Compatibility Issues", "Space Accessibility", "Spaces", "Task-Parallelism", "Traits", "Utilities", "View and related", "Atomics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_assign</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange_strong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_fetch_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_load</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]_fetch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_store</span></code>", "Built-in Reducers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Max</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Min</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLocScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Prod</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReducerConcept</span></code>", "Reduction Scalar Types", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ValLocScalar</span></code>", "C-style memory management", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_free</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_malloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_realloc</span></code>", "Execution Spaces", "InitArguments", "<code class=\"docutils literal notranslate\"><span class=\"pre\">InitializationSettings</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScopeGuard</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">finalize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">initialize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">push_finalize_hook</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Function</span> <span class=\"pre\">Annotation</span> <span class=\"pre\">Macros</span></code>", "Memory Spaces", "Bit manipulation", "Mathematical constants", "Common math functions", "Numeric traits", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelForTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelReduceTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelScanTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fence</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_for</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ExecutionPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MDRangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NestedPolicies</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">RangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamHandleConcept</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Profiling::ProfilingSection</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Profiling::ScopedRegion</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_space</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::pair</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::abort</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::ALL</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">KOKKOS_ASSERT</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::complex</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::device_id</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Experimental</span></code>", "Minimum/maximum operations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::num_devices</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::num_threads</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::printf</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::kokkos_swap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Timer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_mirror[_view]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deep_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutLeft</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutRight</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutStride</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">realloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">resize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">View</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">view_alloc</span></code>", "View-like Types", "API: SIMD", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::where_expression</span></code>", "10. Atomic Operations", "12 Backwards &amp; Future Compatibility", "4. Compiling", "9. Custom Reductions", "9.1 Built-In-Reducers", "9.2 Built-In Reducers with Custom Scalar Types", "9.3 Custom Reducers", "8. Hierarchical Parallelism", "5. Initialization", "13. Interoperability and Legacy Codes", "1. Introduction", "14. Kokkos and Virtual Functions", "2. Machine Model", "7. Parallel dispatch", "3: Programming Model", "15. SIMD Types", "11: Subviews", "6: View: Multidimensional array", "Build, Install and Use", "Citing Kokkos", "Contributing", "Deprecations", "Developer Guides", "PRs and Reviews", "FAQ", "Kokkos: The Programming Model", "CMake Keywords", "Known issues", "License", "&lt;no title&gt;", "Programming Guide", "Quick Start", "Requirements", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CoolerView</span></code>", "Documentation Templates", "Kokkos Planning and Testing", "Kokkos Project Planning", "Requirements, Issues and Feedback", "Attachments", "Kokkos Testing Processes and Change Process", "Kokkos Testing Workflow Components", "Use Cases and Examples", "ScatterView averaging elements to nodes", "Fortran Interop Use Case", "MDRangePolicy Use Case", "MPI Halo Exchange", "Moving code from requiring <code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos_ENABLE_CUDA_UVM</span></code> to using <code class=\"docutils literal notranslate\"><span class=\"pre\">SharedSpace</span></code>", "Overlapping Host and Device work", "Array of Structures and Structure of Arrays with Cabana", "Tagged Operators", "Kokkos Tasking Use Case", "Kokkos and <code class=\"docutils literal notranslate\"><span class=\"pre\">Windows.h</span></code>", "Video lectures and slides"], "terms": {"random": [0, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 75, 76, 133, 134, 136, 139, 188, 203, 209], "number": [0, 4, 18, 19, 20, 24, 31, 33, 63, 64, 72, 74, 76, 77, 81, 82, 87, 88, 89, 123, 129, 131, 133, 134, 136, 140, 141, 155, 165, 170, 171, 174, 175, 178, 188, 192, 193, 195, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 222, 233, 234, 239, 240, 243, 245], "gener": [0, 6, 33, 72, 83, 85, 87, 90, 95, 136, 138, 139, 192, 193, 195, 196, 199, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 223, 227, 231, 233, 235], "sort": [0, 3, 36, 37, 82, 88, 216, 222], "nest": [0, 77, 87, 93, 95, 138, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 182, 183, 196, 199, 207, 208, 209, 239, 244, 247], "polici": [0, 72, 83, 87, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 188, 197, 201, 203, 204, 208, 216, 222, 239, 242, 244], "team": [0, 72, 85, 87, 95, 144, 145, 146, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 162, 199, 204, 207, 208, 215, 217, 231, 232, 234, 235, 245], "thread": [0, 1, 72, 74, 79, 81, 85, 87, 88, 93, 94, 95, 133, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 162, 165, 171, 174, 175, 176, 195, 197, 198, 199, 203, 205, 208, 209, 212, 213, 220, 221, 235, 242, 245, 247], "level": [0, 87, 95, 153, 155, 156, 196, 197, 202, 205, 208, 212, 213, 214, 220, 222, 235], "std": [0, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 87, 88, 89, 92, 93, 95, 100, 101, 102, 103, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 128, 131, 133, 134, 137, 142, 143, 147, 148, 149, 150, 152, 158, 160, 162, 163, 164, 165, 166, 170, 174, 176, 177, 179, 180, 181, 187, 188, 189, 192, 193, 194, 206, 210, 211, 212, 216, 222, 243], "header": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 89, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 197, 218, 221, 228, 234, 243, 246], "file": [1, 4, 11, 22, 23, 24, 30, 31, 34, 38, 42, 47, 48, 53, 54, 55, 56, 61, 62, 67, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 203, 218, 219, 221, 223, 226, 228, 234, 239, 246], "kokkos_cor": [1, 2, 76, 88, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 201, 203, 206, 216, 222, 228, 241, 246], "hpp": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 88, 89, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 201, 203, 206, 210, 216, 222, 228, 238, 239, 241, 243, 246], "kokkos_random": [1, 2, 216], "templat": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 84, 85, 87, 89, 93, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 138, 139, 140, 143, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 170, 173, 176, 177, 179, 180, 181, 185, 186, 187, 188, 189, 190, 196, 197, 199, 200, 201, 202, 204, 208, 210, 212, 215, 222, 228, 238, 239, 241], "class": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 92, 93, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 133, 134, 136, 138, 139, 143, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 196, 198, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 212, 222, 228, 229, 240, 243, 244], "struct": [1, 2, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 35, 36, 39, 40, 41, 42, 45, 46, 48, 51, 52, 56, 67, 69, 70, 71, 72, 81, 84, 95, 117, 120, 121, 123, 126, 131, 132, 134, 136, 139, 144, 145, 146, 148, 149, 154, 166, 179, 182, 183, 196, 199, 200, 201, 202, 204, 208, 212, 216, 222, 238, 243, 245], "gen_data_typ": 1, "kokkos_inline_funct": [1, 2, 4, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 35, 36, 39, 40, 41, 42, 45, 46, 51, 52, 56, 70, 71, 75, 77, 79, 81, 82, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 148, 149, 155, 170, 182, 183, 184, 200, 201, 202, 204, 208, 212, 240], "static": [1, 74, 75, 76, 77, 85, 87, 117, 138, 152, 156, 182, 183, 184, 188, 192, 193, 200, 202, 205, 206, 212, 213, 216, 222, 228, 247], "gen_func_typ": 1, "max": [1, 72, 74, 88, 104, 107, 109, 115, 118, 119, 120, 121, 123, 124, 126, 143, 149, 157, 159, 161, 173, 195, 199, 202, 208, 210, 216, 221, 246], "return": [1, 2, 27, 38, 42, 62, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 88, 95, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 130, 131, 133, 134, 135, 136, 139, 143, 148, 152, 154, 155, 156, 158, 160, 162, 164, 165, 166, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 187, 188, 189, 192, 193, 194, 195, 196, 200, 201, 202, 204, 206, 207, 210, 212, 216, 228, 237, 238, 239, 240, 241, 242, 245], "type_valu": 1, "draw": [1, 72], "gen": [1, 192, 193], "gen_return_valu": 1, "const": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 131, 133, 134, 136, 138, 139, 141, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 199, 200, 201, 202, 204, 206, 208, 210, 211, 216, 228, 238, 239, 240, 242, 244], "rang": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 95, 148, 149, 150, 153, 154, 157, 158, 159, 160, 161, 162, 173, 187, 202, 207, 208, 211, 212, 234, 235, 239], "start": [1, 24, 50, 51, 60, 66, 69, 71, 72, 74, 82, 95, 131, 134, 139, 140, 148, 149, 150, 152, 153, 154, 156, 163, 164, 178, 192, 196, 199, 202, 203, 204, 208, 212, 213, 220, 221, 231, 235, 238, 240, 242, 245], "end": [1, 2, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 78, 80, 82, 86, 134, 135, 136, 140, 149, 150, 152, 153, 154, 156, 158, 160, 162, 163, 164, 197, 203, 206, 212, 223, 238, 239, 245, 246], "function": [1, 2, 4, 30, 33, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 95, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 128, 129, 130, 135, 136, 137, 140, 141, 143, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 162, 170, 173, 174, 176, 177, 178, 179, 180, 184, 189, 196, 197, 200, 201, 202, 203, 204, 205, 209, 210, 211, 218, 221, 225, 231, 237, 238, 239, 240, 242, 244], "special": [1, 39, 40, 41, 72, 75, 76, 84, 87, 96, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 179, 180, 188, 189, 192, 193, 198, 200, 202, 208, 210, 211, 216, 222, 223, 228, 238, 243], "all": [1, 2, 12, 13, 21, 30, 33, 35, 47, 49, 52, 53, 54, 55, 56, 66, 70, 72, 74, 76, 77, 78, 86, 87, 93, 95, 97, 123, 134, 135, 137, 138, 139, 140, 141, 147, 148, 151, 152, 155, 156, 179, 181, 184, 187, 188, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 218, 220, 221, 222, 223, 226, 227, 231, 233, 234, 235, 239, 241, 245], "list": [1, 2, 72, 82, 98, 142, 143, 152, 187, 189, 190, 195, 203, 205, 207, 212, 213, 221, 223, 227, 231, 232, 233, 234, 235, 239, 240, 245], "here": [1, 39, 40, 41, 72, 84, 87, 131, 135, 136, 139, 151, 152, 153, 154, 156, 164, 195, 202, 203, 206, 207, 208, 210, 212, 215, 222, 226, 227, 234, 235, 240, 242], "ar": [1, 2, 4, 13, 14, 19, 21, 26, 27, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 53, 59, 60, 61, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 87, 88, 90, 95, 98, 101, 102, 109, 118, 119, 123, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 161, 171, 172, 173, 174, 175, 179, 180, 181, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 221, 222, 223, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 240, 242, 244, 245, 246], "part": [1, 72, 83, 87, 98, 123, 131, 139, 155, 170, 172, 195, 196, 197, 204, 205, 209, 210, 212, 218, 222, 223, 231, 233, 235, 244], "kokko": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 92, 93, 94, 96, 97, 98, 100, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 161, 163, 164, 165, 169, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 205, 208, 209, 210, 211, 215, 217, 218, 219, 221, 222, 223, 225, 228, 232, 236, 237, 240, 241, 242, 243, 244, 247], "namespac": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 84, 87, 140, 141, 142, 143, 165, 168, 172, 173, 192, 193, 194, 196, 200, 201, 204, 211, 212, 222], "char": [1, 2, 76, 86, 87, 117, 123, 131, 134, 135, 136, 137, 138, 139, 148, 149, 150, 167, 169, 174, 176, 181, 184, 188, 192, 193, 194, 200, 201, 203, 206, 212, 228, 233, 243], "short": [1, 208], "127": 1, "0xff": 1, "256": [1, 210, 245], "32767": 1, "0xffff": 1, "65536": 1, "32768": 1, "int": [1, 2, 4, 21, 25, 28, 30, 35, 42, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 117, 123, 131, 132, 133, 134, 135, 136, 137, 138, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 169, 171, 174, 175, 176, 179, 181, 184, 187, 188, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 206, 208, 210, 212, 216, 228, 237, 239, 240, 241, 242, 243, 244, 245], "max_rand": 1, "uint": 1, "max_urand": 1, "long": [1, 81, 87, 123, 138, 142, 197, 205, 207, 208, 212, 218, 231], "max_rand64": 1, "ulong": 1, "max_urand64": 1, "float": [1, 75, 82, 141, 142, 143, 166, 182, 183, 184, 192, 207, 208, 210, 240, 243], "1": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 106, 112, 117, 122, 123, 132, 133, 134, 136, 138, 140, 148, 149, 150, 153, 155, 156, 158, 160, 162, 164, 165, 166, 169, 170, 171, 174, 175, 177, 181, 184, 187, 188, 192, 193, 194, 198, 200, 201, 206, 210, 213, 221, 222, 223, 225, 226, 227, 228, 233, 235, 237, 238, 239, 240, 245, 247], "0f": [1, 166], "doubl": [1, 4, 23, 24, 39, 40, 41, 53, 56, 76, 77, 78, 79, 80, 86, 95, 117, 131, 134, 135, 136, 138, 142, 147, 149, 158, 160, 162, 168, 170, 178, 179, 187, 188, 192, 193, 194, 195, 199, 202, 204, 208, 210, 211, 212, 228, 237, 238, 239, 240, 241, 242], "0": [1, 2, 11, 18, 21, 24, 35, 56, 72, 74, 75, 76, 77, 78, 79, 80, 82, 87, 88, 95, 110, 111, 113, 117, 123, 125, 131, 133, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 169, 170, 174, 181, 182, 183, 184, 187, 188, 192, 193, 194, 195, 197, 199, 200, 201, 202, 204, 206, 208, 209, 210, 212, 213, 221, 222, 223, 227, 228, 233, 237, 238, 239, 240, 241, 242, 244, 245], "complex": [1, 72, 82, 87, 88, 97, 123, 197, 198, 199, 202, 206, 207, 210, 216, 218, 220, 222, 227], "where": [1, 2, 4, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 40, 42, 45, 46, 51, 52, 55, 56, 67, 69, 70, 71, 76, 77, 81, 87, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 131, 139, 148, 149, 157, 161, 165, 169, 181, 188, 189, 196, 197, 198, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 221, 223, 226, 227, 231, 235, 237, 238, 239, 242, 243, 244, 245], "maximum": [1, 3, 72, 77, 78, 82, 97, 104, 106, 107, 109, 114, 115, 118, 119, 120, 121, 131, 138, 156, 199, 202], "valu": [1, 2, 4, 11, 22, 23, 24, 27, 30, 34, 48, 55, 56, 62, 67, 69, 72, 75, 76, 77, 78, 79, 81, 82, 84, 87, 88, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 131, 133, 136, 138, 139, 140, 143, 148, 149, 150, 152, 154, 155, 156, 158, 160, 162, 166, 169, 173, 177, 180, 181, 187, 188, 189, 194, 195, 198, 199, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 216, 221, 222, 240, 243], "xorshift": 1, "given": [1, 4, 12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 70, 71, 75, 78, 79, 81, 84, 85, 87, 93, 95, 104, 106, 107, 123, 130, 131, 140, 149, 150, 155, 156, 172, 173, 179, 181, 184, 197, 202, 203, 204, 208, 209, 210, 211, 212, 213, 234, 240, 244, 245], "follow": [1, 32, 33, 37, 39, 40, 41, 75, 76, 77, 78, 79, 81, 86, 87, 88, 90, 92, 93, 98, 123, 131, 139, 142, 155, 180, 181, 188, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 208, 210, 211, 212, 213, 216, 217, 221, 222, 223, 227, 229, 233, 235, 237], "enum": [1, 131, 139, 212], "0xffffffffu": 1, "0xffffffffffffffffull": 1, "static_cast": [1, 35, 138, 206], "2": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 82, 84, 88, 117, 123, 132, 136, 138, 150, 152, 155, 157, 159, 161, 165, 166, 167, 169, 176, 177, 181, 184, 185, 186, 187, 188, 192, 196, 198, 199, 201, 210, 221, 222, 223, 225, 227, 228, 233, 235, 245, 247], "int64_t": [1, 78, 150, 152, 154, 192, 193], "provid": [1, 36, 39, 40, 41, 72, 75, 76, 77, 78, 80, 84, 87, 89, 92, 93, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 129, 131, 134, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 154, 155, 156, 163, 164, 165, 166, 173, 177, 180, 181, 182, 183, 184, 188, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 221, 223, 231, 232, 233, 234, 235, 238, 239, 243, 245], "structur": [1, 4, 72, 76, 95, 98, 133, 188, 203, 207, 209, 211, 212, 236, 237, 239, 240, 244, 245, 247], "necessari": [1, 75, 76, 87, 92, 95, 148, 188, 197, 198, 202, 204, 206, 208, 212, 213, 226, 231, 235, 237, 240], "pseudorandom": 1, "These": [1, 2, 76, 87, 88, 138, 139, 154, 155, 188, 192, 194, 196, 199, 202, 205, 207, 209, 211, 212, 221, 227, 231, 233, 234, 235, 238], "base": [1, 36, 40, 76, 77, 81, 82, 84, 87, 95, 133, 152, 163, 164, 192, 193, 196, 197, 202, 203, 205, 206, 208, 210, 211, 212, 221, 223, 231, 232, 234, 235, 239, 240, 243, 244, 245, 247], "vigna": 1, "sebastiano": 1, "2014": [1, 207, 214], "an": [1, 2, 4, 11, 13, 14, 18, 20, 22, 24, 25, 28, 29, 33, 34, 43, 44, 58, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 83, 85, 87, 93, 95, 109, 117, 123, 125, 129, 131, 135, 136, 139, 140, 142, 147, 148, 149, 150, 152, 154, 155, 156, 159, 164, 165, 166, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 215, 216, 218, 220, 222, 223, 231, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246], "experiment": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 87, 88, 97, 129, 130, 131, 139, 140, 141, 142, 143, 165, 191, 196, 202, 203, 210, 216, 221, 222, 227, 235, 237], "explor": [1, 87, 205, 218, 221, 231], "marsaglia": 1, "s": [1, 21, 75, 77, 79, 81, 87, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 131, 133, 149, 155, 166, 168, 179, 181, 187, 188, 189, 197, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 218, 223, 226, 228, 231, 235, 240, 242, 243, 244], "scrambl": 1, "see": [1, 75, 76, 86, 87, 88, 91, 92, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 139, 140, 143, 148, 149, 151, 154, 155, 156, 163, 164, 165, 171, 174, 175, 188, 197, 199, 201, 202, 206, 207, 208, 211, 212, 213, 215, 221, 222, 226, 227, 229, 235], "http": [1, 84, 142, 214, 220, 222, 223, 226, 233], "arxiv": 1, "org": [1, 84, 142, 197, 214, 223], "ab": [1, 142, 192], "1402": 1, "6246": 1, "The": [1, 2, 4, 11, 12, 13, 14, 16, 19, 20, 21, 22, 26, 27, 30, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 89, 90, 92, 95, 98, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 130, 131, 133, 135, 136, 137, 139, 141, 142, 148, 149, 150, 151, 152, 154, 155, 156, 161, 163, 164, 165, 169, 170, 173, 176, 180, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 217, 218, 221, 222, 223, 226, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246], "themselv": [1, 95, 207, 208, 209, 231], "have": [1, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 57, 58, 59, 60, 63, 65, 69, 70, 71, 75, 78, 81, 82, 87, 88, 92, 95, 123, 131, 133, 134, 143, 147, 148, 150, 155, 157, 158, 159, 160, 180, 184, 185, 186, 188, 189, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 221, 222, 223, 227, 231, 233, 234, 235, 237, 240, 243, 244, 245], "two": [1, 2, 11, 12, 21, 22, 26, 27, 34, 36, 39, 40, 41, 42, 46, 48, 65, 69, 75, 77, 78, 81, 87, 95, 123, 131, 133, 136, 139, 140, 154, 165, 181, 195, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 223, 228, 231, 232, 234, 235, 237, 238, 239, 240, 246], "compon": [1, 170, 184, 207, 226, 230, 234], "state": [1, 72, 75, 81, 87, 135, 202, 208, 210, 212, 221, 223], "pool": [1, 72, 202, 212, 222], "actual": [1, 77, 101, 131, 139, 151, 154, 155, 156, 188, 195, 202, 204, 206, 207, 208, 209, 212, 213, 221, 233, 234, 235], "A": [1, 2, 22, 34, 41, 48, 69, 72, 73, 75, 76, 77, 78, 79, 81, 88, 93, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 129, 134, 144, 145, 146, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 162, 168, 179, 180, 181, 182, 183, 184, 187, 188, 195, 197, 198, 199, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 221, 222, 223, 228, 231, 235, 238, 242, 244, 245], "manag": [1, 72, 73, 75, 76, 79, 81, 83, 86, 87, 98, 129, 130, 138, 163, 188, 189, 197, 207, 213, 216, 220, 221, 223, 232, 240, 247], "so": [1, 2, 82, 87, 92, 95, 131, 154, 188, 195, 196, 197, 202, 203, 204, 206, 207, 208, 210, 211, 212, 215, 227, 232, 233, 235, 238, 242], "each": [1, 2, 4, 11, 23, 30, 31, 32, 33, 62, 67, 68, 69, 72, 75, 76, 78, 82, 85, 87, 95, 142, 148, 149, 156, 157, 159, 161, 165, 166, 182, 183, 184, 188, 195, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 223, 229, 231, 233, 234, 235, 237, 239, 240, 243, 245], "activ": [1, 23, 24, 53, 56, 88, 197, 202, 208, 213, 218, 221, 235], "abl": [1, 76, 95, 131, 139, 188, 189, 195, 202, 205, 207, 210, 212, 216, 240], "grab": 1, "its": [1, 4, 72, 75, 76, 77, 81, 87, 95, 101, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 133, 134, 140, 155, 165, 166, 169, 185, 188, 189, 195, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 223, 231, 232, 234, 235, 237, 244], "own": [1, 75, 165, 188, 195, 211, 212, 213, 223, 231, 233, 240], "thi": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 75, 76, 77, 79, 81, 82, 87, 88, 92, 95, 123, 131, 134, 135, 136, 138, 139, 142, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 170, 177, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 218, 220, 221, 222, 223, 226, 227, 229, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246], "allow": [1, 75, 76, 78, 79, 81, 82, 86, 87, 95, 131, 133, 136, 139, 149, 151, 155, 156, 157, 159, 161, 180, 182, 183, 184, 188, 189, 195, 196, 197, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 221, 231, 234, 241, 242, 244], "which": [1, 2, 17, 20, 28, 29, 37, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 83, 84, 86, 87, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 129, 131, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 163, 165, 176, 177, 180, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 221, 223, 231, 232, 235, 238, 240, 241, 242, 243, 244], "independ": [1, 72, 139, 156, 180, 208, 212, 231, 235, 247], "between": [1, 11, 21, 37, 54, 65, 69, 72, 76, 81, 82, 93, 98, 155, 165, 173, 180, 181, 188, 196, 197, 202, 205, 206, 207, 210, 212, 216, 222, 228, 231, 233, 239, 240, 241, 242], "note": [1, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 76, 77, 78, 82, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 138, 147, 148, 154, 155, 156, 165, 181, 188, 195, 197, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 231, 235, 238, 242, 245], "contrast": [1, 140, 153, 158, 160, 162, 169, 202, 212, 231], "curand": 1, "none": [1, 4, 23, 32, 53, 56, 57, 128, 144, 145, 146, 193, 197, 205, 206, 207, 216, 235, 238], "collect": [1, 155, 202, 205, 208, 209, 211, 231, 235, 240, 243], "i": [1, 2, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 115, 117, 119, 120, 123, 126, 128, 129, 130, 131, 138, 147, 148, 149, 150, 153, 155, 156, 157, 158, 159, 160, 161, 162, 165, 169, 176, 180, 181, 184, 185, 186, 188, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 219, 223, 226, 227, 228, 231, 235, 239, 240, 242, 244], "e": [1, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 75, 76, 79, 85, 87, 88, 93, 123, 128, 129, 130, 131, 133, 135, 138, 139, 141, 143, 147, 149, 150, 151, 155, 156, 157, 158, 159, 160, 164, 180, 181, 185, 186, 188, 192, 193, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 218, 221, 226, 227, 228, 231, 233, 234, 235, 241], "can": [1, 2, 4, 11, 22, 25, 28, 30, 39, 40, 41, 42, 69, 72, 76, 77, 78, 81, 84, 85, 87, 88, 95, 123, 131, 132, 133, 136, 138, 139, 143, 148, 149, 152, 153, 154, 155, 156, 161, 162, 180, 184, 185, 186, 188, 189, 192, 193, 194, 195, 196, 197, 199, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 218, 219, 220, 221, 222, 229, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 244], "call": [1, 2, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 33, 35, 36, 40, 42, 45, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 74, 75, 77, 79, 81, 85, 86, 87, 90, 95, 101, 103, 106, 123, 129, 130, 131, 133, 134, 135, 136, 137, 138, 142, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 174, 176, 177, 178, 179, 180, 181, 185, 186, 188, 189, 192, 193, 194, 195, 197, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 222, 235, 238, 240, 242], "insid": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 81, 85, 87, 95, 138, 147, 148, 149, 150, 153, 157, 158, 159, 160, 161, 162, 172, 189, 196, 197, 202, 204, 206, 207, 208, 212, 244, 245, 246], "condit": [1, 13, 14, 20, 30, 53, 76, 169, 188, 195, 202, 204, 207, 208, 223, 234, 242], "devic": [1, 72, 74, 75, 76, 80, 81, 82, 88, 93, 131, 133, 138, 139, 141, 142, 166, 169, 171, 174, 175, 180, 181, 188, 197, 203, 204, 205, 208, 212, 213, 222, 226, 234, 235, 236, 240, 241], "public": [1, 75, 76, 77, 79, 81, 82, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 131, 138, 139, 149, 153, 155, 156, 158, 160, 162, 170, 172, 184, 194, 196, 201, 206, 208, 215, 228, 231, 240, 244], "typedef": [1, 75, 76, 77, 79, 81, 82, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 153, 155, 156, 158, 160, 162, 170, 178, 182, 183, 184, 196, 199, 200, 201, 202, 204, 208, 212, 238, 242], "device_typ": [1, 75, 76, 77, 81, 87, 131, 139, 180, 188, 212], "generator_typ": 1, "rannum_typ": 1, "seed": [1, 72], "void": [1, 2, 4, 23, 30, 32, 53, 56, 57, 74, 75, 77, 80, 81, 82, 84, 85, 87, 88, 95, 100, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 137, 138, 139, 141, 142, 147, 148, 149, 150, 155, 163, 164, 165, 167, 169, 170, 176, 177, 178, 181, 185, 186, 188, 192, 194, 195, 196, 201, 202, 204, 206, 208, 210, 212, 216, 222, 228, 238, 240, 241, 242, 244, 245], "init": [1, 22, 34, 67, 72, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 149, 150, 201, 240], "num_stat": 1, "get_stat": 1, "free_stat": 1, "initi": [1, 2, 22, 34, 48, 67, 69, 72, 75, 76, 82, 83, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 132, 133, 134, 135, 137, 148, 149, 150, 166, 169, 170, 171, 174, 175, 176, 181, 184, 188, 189, 192, 193, 194, 197, 198, 200, 201, 202, 204, 206, 207, 208, 222, 225, 228, 231, 233, 235, 241, 242], "us": [1, 2, 4, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 93, 95, 100, 102, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 130, 132, 133, 134, 135, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 171, 174, 175, 179, 180, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 218, 220, 221, 222, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 240, 242, 243, 244, 246], "establish": [1, 235, 239], "pool_siz": [1, 216], "random_xorshift64": [1, 72], "serial": [1, 72, 85, 87, 88, 94, 189, 197, 203, 205, 206, 208, 210, 212, 216, 226, 227, 233, 235], "make": [1, 75, 76, 87, 95, 140, 150, 155, 173, 188, 195, 196, 197, 199, 202, 207, 208, 210, 213, 215, 218, 222, 223, 231, 233, 238, 240, 241, 244], "process": [1, 89, 139, 197, 203, 209, 210, 211, 212, 213, 220, 230, 235], "platform": [1, 83, 192, 193, 220, 232, 234, 243], "determinist": [1, 48, 69, 209], "request": [1, 75, 77, 131, 144, 145, 146, 149, 155, 156, 202, 203, 207, 209, 215, 218, 221, 222, 231, 232, 233, 235], "lock": [1, 204, 207, 209, 210, 212], "guarante": [1, 75, 76, 79, 93, 95, 131, 139, 148, 149, 150, 172, 180, 188, 196, 197, 204, 207, 208, 209, 210, 241, 245], "ha": [1, 75, 76, 78, 79, 81, 87, 88, 95, 101, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 136, 138, 139, 142, 148, 149, 150, 151, 164, 180, 188, 192, 193, 195, 197, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 222, 223, 226, 231, 234, 235, 237, 238, 244, 245], "privat": [1, 79, 87, 155, 170, 196, 198, 201, 202, 208, 221, 231, 240], "get": [1, 75, 87, 95, 98, 135, 155, 156, 184, 195, 202, 203, 204, 206, 207, 210, 211, 213, 215, 221, 231, 233, 243, 245], "cuda": [1, 72, 75, 85, 87, 88, 94, 138, 139, 152, 154, 156, 165, 181, 202, 203, 205, 206, 208, 209, 210, 212, 216, 220, 221, 227, 233, 234, 235, 241, 242], "involv": [1, 87, 151, 212, 234, 239], "atom": [1, 72, 76, 81, 83, 100, 101, 102, 103, 104, 105, 106, 107, 108, 188, 202, 204, 207, 209, 221, 225, 245, 247], "non": [1, 3, 18, 24, 33, 36, 37, 48, 63, 64, 69, 72, 73, 75, 76, 77, 79, 80, 81, 82, 87, 95, 103, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 136, 138, 140, 156, 163, 164, 181, 188, 194, 195, 197, 202, 207, 208, 209, 210, 212, 216, 221, 223, 233, 242, 244], "upon": [1, 84, 87, 131, 147, 164, 196, 205, 218, 226, 231], "complet": [1, 77, 95, 131, 147, 197, 198, 202, 207, 212, 213, 231, 235, 242, 245], "unlock": 1, "updat": [1, 72, 75, 82, 104, 106, 107, 180, 195, 197, 202, 208, 212, 227, 231, 233, 235, 240, 242, 245], "statu": [1, 218], "onc": [1, 72, 95, 135, 136, 202, 203, 209, 212, 213, 221, 231, 240, 242], "again": [1, 87, 197, 204, 212, 213, 221, 235], "becom": [1, 59, 60, 79, 95, 139, 207, 226, 231, 235, 239], "avail": [1, 74, 77, 81, 82, 87, 88, 98, 131, 133, 138, 139, 140, 141, 142, 143, 152, 156, 169, 171, 173, 174, 175, 188, 192, 193, 194, 197, 202, 203, 205, 207, 208, 210, 212, 213, 216, 221, 223, 231, 234, 235, 237, 239, 240], "within": [1, 2, 4, 79, 82, 93, 131, 136, 138, 148, 149, 150, 152, 155, 197, 202, 206, 207, 209, 212, 223, 238, 239, 240], "select": [1, 72, 74, 92, 133, 168, 187, 194, 203, 205, 207, 212, 227, 231, 234, 235, 245], "from": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 92, 93, 95, 98, 100, 101, 102, 103, 105, 108, 120, 121, 123, 126, 131, 132, 133, 136, 138, 139, 140, 141, 142, 143, 148, 149, 150, 152, 154, 155, 156, 166, 169, 170, 173, 176, 177, 179, 180, 181, 184, 188, 189, 190, 194, 195, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 222, 223, 227, 231, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245], "next": [1, 231, 233, 235, 242, 245], "step": [1, 4, 202, 204, 205, 210, 212, 231, 233, 234, 235, 240], "develop": [1, 88, 92, 148, 202, 205, 207, 209, 212, 215, 218, 220, 222, 227, 232, 233, 234, 235], "functor": [1, 2, 11, 12, 13, 14, 20, 21, 22, 26, 27, 30, 31, 32, 33, 34, 36, 37, 40, 42, 45, 48, 67, 69, 85, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 138, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 192, 193, 202, 204, 206, 207, 212, 239, 240, 242, 244], "desir": [1, 13, 14, 20, 48, 67, 69, 77, 100, 101, 102, 103, 108, 150, 165, 180, 197, 208, 212, 218, 226, 231, 233, 234, 235], "type": [1, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 35, 36, 40, 45, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 93, 95, 96, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 129, 131, 133, 139, 140, 142, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 170, 176, 179, 180, 181, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 220, 222, 223, 225, 226, 228, 233, 235, 238, 239, 240, 243], "devicetyp": [1, 131, 139], "respect": [1, 21, 26, 27, 76, 123, 142, 173, 180, 181, 185, 186, 188, 199, 202, 207, 212, 222, 223], "x": [1, 72, 141, 142, 184, 185, 186, 192, 194, 199, 204, 208, 210, 212, 221, 226, 228, 238, 242], "idx": [1, 238], "just": [1, 2, 75, 87, 88, 95, 131, 139, 151, 177, 181, 184, 195, 203, 208, 210, 212, 213, 215, 218, 221, 233, 237, 240], "give": [1, 88, 95, 196, 203, 204, 208, 209, 210, 212, 218, 222, 223, 233], "argument": [1, 11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 35, 36, 40, 45, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 75, 76, 77, 79, 88, 93, 95, 98, 103, 105, 131, 132, 133, 134, 136, 142, 147, 149, 150, 153, 154, 155, 156, 158, 160, 162, 169, 179, 180, 181, 187, 188, 189, 192, 193, 194, 196, 201, 202, 208, 211, 212, 216, 218, 222, 239, 241], "state_argu": 1, "state_idx": 1, "equidistribut": 1, "uint32_t": [1, 81, 192, 193, 216], "urand": 1, "For": [1, 2, 37, 75, 76, 81, 95, 123, 131, 134, 139, 140, 143, 154, 157, 159, 161, 165, 181, 187, 188, 192, 194, 195, 196, 197, 198, 199, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 220, 221, 222, 223, 229, 231, 235, 239, 240, 241], "32": [1, 2, 131, 202, 204, 212, 235], "bit": [1, 72, 74, 87, 89, 131, 188, 193, 206, 208, 210, 211, 212], "unsign": [1, 74, 75, 76, 77, 80, 104, 107, 131, 140, 188, 211, 212, 241], "integ": [1, 59, 60, 75, 76, 81, 85, 88, 95, 131, 140, 142, 154, 187, 188, 202, 208, 210, 212, 238], "three": [1, 75, 87, 88, 142, 147, 195, 196, 197, 202, 205, 207, 208, 210, 212, 213, 231, 234, 239], "option": [1, 72, 75, 76, 81, 85, 95, 123, 131, 133, 148, 149, 150, 152, 188, 189, 196, 197, 199, 202, 203, 204, 205, 208, 212, 213, 231, 233, 234, 235, 239, 241, 243, 244], "shown": [1, 55, 87, 123, 180, 202, 207, 239], "first": [1, 4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 74, 75, 76, 79, 84, 87, 93, 95, 129, 131, 136, 155, 165, 166, 182, 187, 188, 192, 193, 194, 197, 199, 202, 204, 206, 207, 208, 212, 215, 216, 218, 231, 238, 239, 242], "default": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 84, 85, 88, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 130, 132, 133, 138, 139, 144, 145, 146, 149, 150, 152, 154, 155, 156, 166, 170, 178, 181, 182, 183, 184, 185, 186, 188, 189, 192, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 208, 213, 216, 218, 221, 222, 226, 228, 231, 235, 239, 243], "over": [1, 34, 48, 67, 68, 72, 81, 85, 87, 95, 131, 152, 153, 155, 157, 158, 159, 160, 161, 162, 192, 193, 195, 199, 202, 208, 210, 211, 212, 213, 218, 234, 237, 239, 244], "possibl": [1, 11, 17, 22, 28, 29, 30, 35, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 76, 82, 87, 95, 134, 149, 156, 188, 196, 203, 204, 206, 208, 209, 210, 211, 212, 218, 222, 223, 226, 227, 231, 234, 240], "data": [1, 72, 74, 75, 76, 77, 79, 80, 81, 82, 95, 98, 131, 132, 133, 138, 147, 166, 170, 176, 180, 181, 195, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 220, 221, 223, 228, 231, 237, 238, 239, 240, 242, 243, 244, 245, 247], "defin": [1, 21, 33, 42, 65, 72, 76, 78, 83, 87, 88, 93, 98, 100, 101, 102, 103, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 152, 154, 155, 158, 160, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 188, 189, 190, 192, 193, 197, 200, 201, 202, 204, 207, 208, 212, 216, 223, 234, 235, 237, 238, 243, 246], "abov": [1, 86, 131, 140, 142, 195, 197, 202, 205, 206, 208, 210, 211, 212, 223, 235, 239, 240, 245], "And": [1, 72, 109, 204, 214, 244], "also": [1, 11, 17, 25, 28, 29, 30, 35, 42, 46, 51, 52, 56, 70, 71, 75, 76, 77, 78, 81, 84, 87, 95, 123, 131, 138, 139, 143, 148, 149, 155, 156, 163, 164, 166, 171, 174, 175, 184, 188, 195, 196, 197, 198, 199, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 221, 226, 227, 231, 232, 233, 234, 235, 239, 242, 244], "64": [1, 2, 131, 208, 210, 212, 221], "latter": [1, 95, 149, 188, 202, 207, 212, 235], "cover": [1, 76, 188, 208, 233, 234], "user": [1, 36, 39, 40, 41, 75, 76, 77, 81, 87, 90, 95, 129, 131, 132, 135, 136, 138, 148, 149, 150, 152, 156, 163, 164, 188, 190, 197, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 221, 222, 226, 231, 234, 240, 241, 245, 246], "more": [1, 76, 77, 78, 87, 95, 123, 134, 139, 148, 151, 164, 188, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 221, 222, 223, 239, 244, 245], "other": [1, 46, 75, 76, 77, 78, 82, 87, 93, 95, 136, 139, 148, 149, 150, 155, 157, 158, 159, 160, 165, 169, 180, 181, 182, 183, 184, 195, 197, 202, 204, 206, 207, 208, 209, 210, 211, 213, 218, 220, 221, 223, 227, 228, 231, 233, 235, 238, 240, 241, 244], "scalar": [1, 75, 76, 77, 78, 82, 98, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 149, 170, 181, 188, 192, 193, 195, 198, 199, 201, 202, 204, 208, 222], "uint64_t": [1, 192, 193], "int32_t": [1, 192, 193, 194], "normal": [1, 72, 195, 197, 208, 212, 223, 235], "distribut": [1, 72, 205, 211, 214, 221, 223, 235, 240], "view": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 93, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 131, 134, 135, 136, 149, 150, 155, 168, 179, 180, 182, 183, 184, 185, 186, 187, 189, 195, 197, 199, 201, 202, 203, 205, 207, 208, 210, 216, 221, 222, 225, 228, 235, 237, 238, 239, 240, 241, 242, 247], "fill": [1, 6, 21, 24, 25, 28, 30, 35, 39, 40, 42, 192, 193, 199, 202, 204, 208, 212], "includ": [1, 2, 22, 34, 67, 68, 76, 77, 87, 88, 95, 100, 101, 102, 103, 105, 108, 117, 123, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 147, 148, 149, 150, 164, 167, 169, 173, 174, 176, 177, 180, 181, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 197, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 220, 222, 223, 228, 231, 233, 234, 235, 238, 241, 243, 246], "main": [1, 2, 76, 86, 88, 98, 117, 123, 132, 133, 134, 135, 136, 137, 138, 148, 149, 150, 169, 172, 174, 176, 181, 184, 188, 192, 193, 194, 197, 200, 201, 203, 206, 210, 212, 213, 228, 231, 238, 241, 242], "argc": [1, 2, 76, 86, 117, 123, 133, 134, 135, 136, 137, 138, 148, 149, 150, 169, 174, 176, 181, 184, 188, 192, 193, 194, 200, 201, 203, 206, 228], "argv": [1, 2, 76, 86, 117, 123, 133, 134, 135, 136, 137, 138, 148, 149, 150, 169, 174, 176, 181, 184, 188, 192, 193, 194, 200, 201, 203, 206, 228], "scopeguard": [1, 72, 136, 138, 216], "guard": [1, 134], "random_xorshift64_pool": [1, 2, 72], "random_pool": 1, "12345": 1, "total": [1, 77, 87, 156, 188, 195, 200, 201, 202, 203, 239], "1000000": [1, 181], "count": [1, 7, 33, 62, 74, 76, 77, 87, 95, 138, 140, 148, 149, 150, 153, 158, 160, 162, 188, 195, 202, 208, 211, 244], "parallel_reduc": [1, 72, 79, 87, 90, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 138, 145, 147, 151, 153, 156, 157, 158, 159, 160, 161, 162, 199, 200, 201, 202, 208, 209, 216, 239, 240, 241], "approximate_pi": 1, "kokkos_lambda": [1, 2, 76, 77, 79, 81, 117, 123, 131, 148, 149, 150, 151, 153, 155, 157, 158, 159, 160, 161, 162, 169, 176, 188, 195, 199, 200, 201, 202, 204, 206, 208, 212, 228, 237, 238, 239, 240, 242, 244], "local_count": 1, "acquir": [1, 76, 87, 137, 188, 203, 204, 209, 212], "engin": [1, 197, 207, 209, 212, 214, 223], "auto": [1, 2, 4, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 78, 79, 81, 82, 95, 101, 103, 105, 133, 134, 138, 141, 143, 148, 149, 153, 156, 157, 158, 159, 160, 161, 162, 165, 168, 180, 181, 187, 188, 194, 199, 202, 206, 210, 211, 222, 237, 238, 239, 245], "drand": 1, "y": [1, 192, 204, 210, 212, 226, 238, 242], "do": [1, 2, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 75, 83, 87, 95, 131, 134, 135, 138, 139, 147, 151, 174, 188, 189, 195, 196, 197, 199, 202, 203, 207, 208, 209, 210, 211, 213, 215, 218, 219, 222, 223, 231, 233, 238, 240, 241, 242, 244], "forget": 1, "releas": [1, 86, 87, 88, 135, 137, 176, 196, 197, 202, 205, 206, 207, 226, 227, 232, 233, 235], "printf": [1, 95, 97, 117, 123, 138, 148, 149, 150, 184, 192, 193, 199, 200, 201, 206], "pi": [1, 89, 141, 222], "f": [1, 87, 95, 138, 142, 155, 156, 166, 216, 233, 238, 239, 245], "n": [1, 2, 18, 24, 31, 63, 64, 74, 75, 77, 81, 82, 87, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 131, 137, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 174, 176, 177, 181, 184, 185, 186, 188, 192, 199, 200, 201, 202, 204, 206, 208, 210, 211, 212, 216, 220, 241, 242, 244], "4": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 81, 82, 88, 95, 100, 102, 131, 132, 139, 140, 141, 142, 143, 153, 156, 157, 158, 159, 160, 161, 162, 164, 167, 169, 171, 173, 174, 175, 176, 177, 184, 187, 188, 189, 196, 200, 201, 210, 211, 214, 221, 222, 223, 225, 228, 231, 233, 235, 239, 241, 245, 247], "dstviewtyp": 2, "srcviewtyp": 2, "copy_functor": 2, "permuteviewtyp": 2, "copy_permute_functor": 2, "binsort": [2, 216], "valuesviewtyp": 2, "values_range_begin": 2, "values_range_end": 2, "keyviewtyp": 2, "binop1d": [2, 216], "binop3d": [2, 216], "viewtyp": [2, 75, 131, 179, 180, 187, 188, 212], "size_t": [2, 59, 60, 75, 76, 77, 78, 79, 82, 87, 129, 130, 138, 177, 182, 183, 184, 185, 186, 188, 192, 193, 194, 202, 206, 208, 210, 211, 212, 238], "begin": [2, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 78, 80, 82, 87, 129, 130, 152, 153, 154, 156, 158, 160, 162, 212, 231, 235, 238, 239, 246], "parallel": [2, 12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 77, 81, 83, 85, 87, 92, 93, 123, 131, 133, 138, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 189, 195, 197, 199, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 218, 220, 225, 237, 240, 242, 244, 245, 247], "teampolici": [2, 12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 70, 71, 72, 76, 85, 87, 95, 131, 144, 145, 146, 148, 149, 150, 153, 155, 157, 158, 159, 160, 161, 162, 188, 199, 202, 204, 208], "kernel": [2, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 79, 82, 85, 88, 95, 148, 154, 155, 156, 165, 176, 181, 188, 195, 197, 204, 206, 207, 208, 209, 212, 213, 220, 221, 222, 235, 241, 245, 247], "perform": [2, 4, 48, 67, 69, 76, 77, 79, 85, 88, 90, 95, 103, 110, 111, 112, 113, 122, 123, 125, 138, 149, 150, 155, 156, 176, 188, 189, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 214, 221, 223, 228, 231, 232, 234, 238, 239, 243, 247], "teamthreadrang": [2, 72, 85, 87, 148, 149, 161, 162, 199, 202, 204], "threadvectorrang": [2, 72, 85, 87, 148, 149, 150, 202], "kokkos_nestedsort": 2, "teammemb": [2, 95, 156, 202], "sort_team": 2, "t": [2, 19, 23, 24, 25, 35, 53, 54, 55, 56, 72, 75, 84, 87, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 131, 138, 143, 147, 149, 150, 155, 156, 165, 170, 177, 180, 185, 186, 188, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 208, 209, 210, 211, 213, 216, 218, 221, 222, 223, 227, 231, 233, 245], "compar": [2, 12, 21, 26, 27, 36, 38, 39, 40, 41, 42, 61, 62, 76, 77, 88, 101, 102, 103, 133, 188, 210, 212, 222, 227, 233, 235], "comp": [2, 36, 37, 38, 39, 40, 41], "valueviewtyp": 2, "sort_by_key_team": 2, "keyview": 2, "valueview": 2, "sort_thread": 2, "sort_by_key_thread": 2, "intern": [2, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 81, 82, 86, 87, 88, 133, 134, 152, 156, 197, 202, 203, 204, 216, 231, 239], "entir": [2, 75, 87, 138, 153, 184, 206, 208, 209, 211, 213, 231, 234, 235, 244], "thei": [2, 75, 78, 87, 88, 95, 131, 134, 135, 138, 139, 141, 148, 151, 154, 165, 181, 195, 196, 202, 203, 206, 208, 209, 210, 212, 218, 221, 227, 231, 232, 233, 234, 235, 237, 240, 244, 246], "mai": [2, 4, 75, 76, 77, 78, 79, 82, 87, 88, 95, 130, 131, 134, 135, 136, 138, 148, 149, 150, 156, 165, 167, 173, 174, 176, 180, 188, 189, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 215, 221, 222, 223, 227, 229, 231, 233, 235, 239, 240, 242, 243, 244, 245], "top": [2, 95, 196, 197, 202, 223, 229, 235], "lambda": [2, 88, 95, 138, 147, 148, 149, 202, 204, 206, 221, 222, 238, 239, 244], "vector": [2, 72, 73, 85, 88, 148, 149, 150, 153, 156, 159, 160, 161, 162, 165, 192, 193, 194, 199, 208, 209, 212, 216, 221, 238, 243], "lane": [2, 72, 85, 153, 159, 160, 161, 162, 192, 202, 209, 210], "either": [2, 36, 39, 40, 41, 75, 76, 80, 81, 85, 95, 115, 117, 119, 133, 134, 148, 149, 155, 181, 185, 186, 188, 194, 196, 197, 200, 201, 202, 203, 208, 212, 213, 218, 223, 233, 235, 245, 246], "loop": [2, 85, 88, 95, 153, 154, 189, 195, 204, 206, 207, 210, 212, 221, 237, 239, 242, 244, 247], "sort_by_kei": 2, "while": [2, 46, 72, 76, 87, 95, 139, 153, 180, 186, 188, 195, 196, 197, 198, 202, 204, 205, 206, 207, 210, 211, 212, 213, 223, 235], "simultan": [2, 195], "appli": [2, 11, 30, 31, 39, 40, 41, 66, 69, 87, 95, 149, 155, 195, 197, 200, 201, 206, 208, 223, 232], "same": [2, 17, 18, 24, 26, 27, 31, 34, 37, 39, 41, 47, 51, 52, 55, 56, 64, 67, 68, 75, 76, 77, 78, 81, 82, 84, 87, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 130, 131, 134, 136, 138, 142, 148, 149, 150, 155, 156, 157, 158, 159, 160, 165, 177, 180, 181, 188, 195, 197, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 221, 233, 234, 235, 239, 240, 241, 243, 245], "permut": 2, "element": [2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 82, 123, 136, 149, 150, 165, 166, 168, 173, 181, 182, 183, 184, 186, 188, 189, 202, 204, 209, 212, 236, 239, 240, 243], "It": [2, 71, 75, 76, 77, 78, 87, 130, 131, 132, 133, 134, 138, 149, 150, 153, 174, 177, 188, 189, 192, 193, 195, 196, 197, 202, 204, 206, 207, 208, 210, 211, 212, 220, 221, 222, 223, 231, 235, 243, 244], "equival": [2, 39, 40, 41, 70, 71, 78, 93, 131, 138, 155, 187, 188, 202, 208, 210, 211, 212, 238, 243], "kei": [2, 81, 180, 210, 240], "tupl": [2, 152, 222, 243], "accord": [2, 35, 87, 104, 106, 107, 148, 149, 150, 226], "commonli": [2, 207], "entri": [2, 75, 77, 80, 95, 200, 201, 204, 208, 211, 231, 237], "row": [2, 80, 199, 204, 211, 212], "cr": [2, 72, 80], "compress": [2, 80, 212, 240], "spars": [2, 212, 220, 234, 247], "matrix": [2, 199, 211, 212], "requir": [2, 75, 76, 77, 81, 88, 93, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 139, 140, 153, 157, 158, 159, 160, 161, 162, 180, 188, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 216, 218, 220, 221, 222, 223, 226, 230, 233, 235, 236, 239, 242, 243, 245], "extent": [2, 21, 75, 76, 77, 78, 80, 131, 157, 159, 161, 181, 182, 183, 184, 185, 186, 187, 188, 195, 208, 212, 228, 231, 237, 238, 244], "version": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 76, 84, 92, 131, 132, 133, 134, 136, 141, 142, 167, 169, 173, 180, 188, 189, 196, 197, 206, 208, 210, 212, 213, 221, 222, 223, 228, 231, 233, 234, 235], "take": [2, 76, 77, 78, 85, 87, 93, 95, 104, 106, 107, 131, 136, 139, 141, 149, 151, 156, 182, 183, 184, 195, 196, 201, 202, 203, 207, 208, 209, 210, 212, 216, 218, 222, 228, 233, 235, 237, 239, 242, 247], "object": [2, 11, 22, 30, 33, 75, 76, 79, 81, 86, 87, 88, 100, 101, 102, 103, 105, 108, 109, 133, 134, 135, 136, 137, 139, 140, 153, 155, 163, 164, 184, 188, 189, 194, 197, 201, 203, 204, 206, 208, 210, 212, 216, 223, 244], "order": [2, 16, 36, 37, 41, 44, 49, 52, 57, 58, 74, 76, 85, 86, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 137, 148, 149, 150, 152, 153, 158, 160, 162, 184, 188, 195, 196, 200, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 218, 220, 222, 231, 234, 235, 237, 240, 241, 242, 244], "oper": [2, 4, 11, 12, 13, 14, 17, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 51, 52, 53, 54, 56, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 85, 95, 97, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 131, 134, 139, 142, 147, 148, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 166, 170, 181, 182, 183, 184, 188, 189, 190, 194, 198, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 216, 222, 225, 228, 235, 236, 240, 245, 247], "should": [2, 4, 12, 21, 26, 27, 30, 55, 59, 60, 74, 75, 87, 93, 95, 120, 121, 123, 126, 131, 135, 136, 139, 148, 150, 192, 193, 194, 195, 196, 197, 199, 202, 203, 204, 205, 206, 207, 211, 212, 213, 216, 218, 221, 222, 226, 227, 231, 233, 235, 240], "member": [2, 75, 77, 79, 81, 87, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 132, 133, 138, 143, 148, 149, 150, 155, 157, 158, 159, 160, 170, 182, 183, 184, 189, 194, 196, 199, 201, 202, 206, 208, 212, 219, 229, 231, 234, 235, 244, 245], "accept": [2, 30, 31, 69, 85, 87, 166, 192, 193, 202, 203, 205, 212, 223, 233, 235, 239], "b": [2, 11, 12, 21, 22, 26, 27, 34, 36, 39, 40, 41, 42, 48, 69, 76, 78, 147, 148, 157, 158, 159, 160, 161, 162, 170, 177, 180, 188, 192, 193, 194, 202, 204, 208, 210, 212, 223, 226, 228, 245], "bool": [2, 12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 36, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 70, 71, 74, 75, 76, 77, 79, 81, 82, 84, 87, 93, 102, 131, 132, 133, 139, 150, 162, 169, 182, 183, 184, 188, 193, 194, 201, 208, 210, 216, 228, 240], "true": [2, 12, 13, 14, 17, 20, 21, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 62, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 93, 95, 102, 131, 132, 133, 134, 136, 139, 157, 158, 159, 160, 161, 162, 165, 177, 181, 182, 183, 187, 188, 193, 194, 195, 197, 201, 203, 204, 210, 212, 216, 222, 228], "onli": [2, 4, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 93, 95, 131, 134, 138, 139, 147, 148, 149, 150, 155, 166, 171, 174, 180, 181, 188, 189, 192, 194, 195, 197, 198, 199, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 216, 218, 221, 223, 227, 228, 231, 233, 234, 235, 237, 240, 241], "goe": [2, 212, 231], "befor": [2, 35, 69, 74, 75, 76, 86, 101, 103, 134, 135, 136, 137, 155, 174, 181, 188, 202, 204, 205, 207, 208, 211, 212, 221, 231, 234, 240, 242, 245], "ascend": 2, "descend": [2, 36, 37], "intcompar": 2, "kokkos_funct": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 141, 142, 143, 148, 154, 167, 169, 176, 177, 206, 208, 210, 212, 216, 222, 244], "constexpr": [2, 4, 35, 48, 67, 69, 74, 75, 76, 77, 79, 81, 82, 84, 88, 117, 139, 140, 141, 143, 166, 168, 177, 182, 183, 184, 188, 192, 193, 210, 221], "preced": [2, 235], "larger": [2, 74, 76, 77, 156, 173, 184, 188, 195, 212, 215, 218], "final": [2, 72, 76, 79, 83, 87, 117, 123, 132, 133, 134, 136, 137, 148, 149, 150, 162, 169, 174, 176, 181, 184, 186, 188, 192, 193, 194, 198, 200, 201, 202, 205, 206, 208, 212, 216, 228, 237, 240, 241], "barrier": [2, 155, 209, 242], "access": [2, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 87, 89, 94, 120, 121, 126, 130, 131, 133, 138, 139, 155, 180, 181, 189, 195, 199, 202, 204, 206, 207, 208, 209, 211, 213, 214, 222, 233, 235, 237, 239, 241, 242, 243, 244, 247], "immedi": [2, 148, 197, 205, 212, 213, 242], "after": [2, 11, 15, 17, 18, 22, 24, 34, 47, 49, 50, 51, 52, 54, 55, 60, 66, 67, 68, 70, 71, 75, 77, 86, 87, 95, 133, 135, 136, 155, 174, 181, 185, 186, 194, 195, 197, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 222, 231, 232, 233, 234, 235, 241, 242, 245], "both": [2, 72, 75, 76, 79, 82, 87, 95, 109, 118, 119, 139, 165, 166, 180, 181, 188, 195, 196, 199, 202, 203, 204, 205, 207, 208, 210, 212, 220, 231, 232, 233, 234, 235, 239, 240], "global": [2, 83, 87, 153, 155, 158, 160, 162, 202, 212, 242], "scratch": [2, 76, 131, 155, 156, 188, 207, 209, 247], "memori": [2, 72, 73, 75, 76, 77, 79, 81, 82, 83, 88, 93, 94, 98, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 130, 131, 147, 155, 156, 180, 182, 183, 184, 185, 186, 188, 189, 197, 199, 201, 205, 206, 210, 211, 213, 214, 220, 221, 222, 235, 240, 241, 242, 243, 245, 247], "space": [2, 4, 11, 22, 23, 24, 30, 38, 42, 47, 48, 53, 54, 55, 56, 67, 69, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 90, 96, 98, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 130, 138, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 160, 162, 165, 180, 181, 185, 186, 188, 189, 199, 201, 202, 203, 204, 206, 213, 216, 218, 220, 233, 235, 239, 240, 242, 243, 244, 245, 247], "biton": 2, "algorithm": [2, 37, 81, 87, 88, 90, 138, 173, 195, 197, 202, 203, 205, 207, 208, 209, 212, 218, 220, 222, 235, 237, 242, 243], "stabl": [2, 231], "mean": [2, 22, 34, 67, 68, 76, 81, 93, 95, 131, 134, 139, 147, 148, 151, 188, 190, 197, 202, 204, 207, 208, 209, 210, 211, 212, 213, 215, 221, 223, 240, 246], "repeat": [2, 150, 202, 233, 242, 245], "input": [2, 22, 34, 67, 68, 76, 77, 79, 95, 149, 150, 197, 199, 203, 204, 208, 212, 235, 239, 240], "correspond": [2, 76, 79, 87, 88, 119, 123, 136, 139, 166, 182, 183, 184, 187, 188, 202, 208, 209, 212, 218, 232, 233, 244], "might": [2, 88, 131, 150, 172, 194, 195, 202, 204, 205, 206, 207, 208, 211, 212, 221, 239, 246], "ani": [2, 27, 39, 40, 41, 75, 81, 83, 84, 85, 87, 88, 93, 95, 98, 129, 130, 131, 133, 134, 136, 138, 139, 142, 148, 165, 172, 181, 188, 193, 196, 197, 198, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 223, 231, 233, 234, 235, 241], "execspac": [2, 79, 131, 154, 165, 181, 212], "defaultexecutionspac": [2, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56, 76, 81, 85, 94, 128, 129, 130, 151, 152, 154, 165, 171, 188, 202, 203, 240], "teampol": 2, "teammem": 2, "typenam": [2, 4, 19, 20, 48, 63, 64, 74, 75, 77, 79, 81, 84, 87, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 155, 157, 159, 161, 176, 180, 181, 185, 186, 188, 204, 212, 238, 243], "member_typ": [2, 72, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 199, 202, 204], "10": [2, 12, 21, 24, 26, 27, 34, 36, 37, 39, 40, 41, 48, 66, 69, 70, 71, 77, 78, 82, 86, 117, 134, 135, 136, 150, 152, 181, 188, 197, 202, 206, 208, 212, 214, 225, 227, 233, 235], "rand_pool": 2, "13718": 2, "fill_random": [2, 72], "100": [2, 75, 88, 123, 150, 202, 204, 208, 209, 212, 241], "parallel_for": [2, 72, 76, 77, 79, 81, 87, 90, 95, 131, 138, 144, 147, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 169, 176, 188, 195, 202, 204, 206, 207, 208, 209, 212, 228, 237, 238, 239, 240, 241, 242, 244], "whole": [2, 155, 195, 197, 199, 211, 223, 244], "a_row_i": 2, "subview": [2, 72, 75, 76, 78, 79, 98, 168, 181, 184, 186, 188, 216, 225, 239, 247], "league_rank": [2, 148, 149, 153, 155, 157, 158, 159, 160, 161, 162, 199, 202], "ahost": 2, "create_mirror_view_and_copi": [2, 180], "hostspac": [2, 72, 75, 87, 94, 180, 181, 184, 188, 189, 201, 204, 212, 216, 238], "cout": [2, 88, 131, 137], "j": [2, 80, 117, 153, 159, 162, 165, 202, 204, 207, 208, 212, 214, 239, 242, 244], "vectorlen": 2, "vector_length_max": [2, 156], "now": [2, 87, 131, 139, 151, 165, 181, 188, 194, 196, 202, 204, 206, 207, 210, 212, 216, 237], "column": [2, 80, 204, 208, 211, 212, 235], "a_col_i": 2, "deep_copi": [2, 72, 74, 75, 76, 81, 93, 98, 117, 131, 139, 147, 180, 188, 195, 204, 212, 242], "na": [2, 227, 235], "9": [2, 12, 21, 26, 27, 34, 36, 37, 39, 40, 41, 48, 66, 69, 70, 71, 78, 88, 197, 211, 221, 222, 223, 225, 227, 233, 235], "38": 2, "68": 2, "74": [2, 214], "76": 2, "83": [2, 222], "89": 2, "91": 2, "95": 2, "19": [2, 197, 227], "41": 2, "55": 2, "65": 2, "78": 2, "92": 2, "99": [2, 88, 202], "13": [2, 4, 21, 23, 24, 39, 40, 53, 56, 149, 212, 225, 233], "16": [2, 21, 77, 197, 204, 227, 235], "17": [2, 21, 84, 88, 134, 143, 149, 188, 197, 222, 227, 233, 234], "40": [2, 78], "44": [2, 233], "54": 2, "96": [2, 204], "18": [2, 21, 197, 213, 214, 227, 231, 233], "77": 2, "80": [2, 184], "82": 2, "94": 2, "14": [2, 21, 23, 88, 143, 197, 225, 227, 235], "34": [2, 53, 56, 155, 222], "35": 2, "45": 2, "46": 2, "47": 2, "52": 2, "58": 2, "6": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 76, 77, 88, 141, 143, 150, 157, 159, 161, 181, 188, 206, 208, 221, 223, 225, 227, 231, 233, 247], "25": 2, "37": 2, "51": 2, "81": 2, "3": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 82, 87, 88, 117, 132, 133, 134, 136, 138, 141, 142, 143, 150, 155, 157, 159, 161, 173, 174, 177, 179, 181, 184, 185, 186, 187, 188, 196, 198, 199, 200, 213, 214, 215, 221, 222, 223, 225, 228, 231, 233, 235, 239, 243, 247], "5": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 76, 77, 88, 95, 100, 102, 117, 131, 139, 143, 152, 154, 155, 157, 159, 161, 168, 170, 179, 181, 184, 187, 188, 199, 202, 211, 214, 221, 222, 223, 225, 226, 227, 228, 233, 245, 247], "20": [2, 78, 88, 89, 131, 139, 140, 141, 151, 184, 188, 197, 213, 219, 222, 227, 235], "33": [2, 214], "39": 2, "60": [2, 212], "97": 2, "7": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 72, 76, 77, 88, 132, 133, 134, 136, 142, 173, 188, 197, 199, 207, 211, 213, 221, 222, 223, 225, 226, 227, 228, 231, 233, 235, 247], "8": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 88, 133, 136, 154, 156, 157, 159, 161, 182, 183, 184, 188, 195, 197, 203, 207, 208, 209, 212, 221, 222, 223, 225, 227, 233, 235, 243, 247], "15": [2, 4, 21, 25, 28, 30, 35, 42, 155, 179, 187, 208, 225], "31": [2, 78], "42": [2, 131, 151, 240], "86": 2, "29": [2, 197, 227], "56": 2, "63": 2, "90": [2, 211, 231, 238], "iter": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 78, 82, 85, 87, 148, 149, 150, 152, 154, 156, 188, 202, 206, 207, 208, 209, 210, 212, 216, 228, 237, 239, 242], "minimum": [3, 72, 77, 88, 97, 104, 106, 107, 109, 116, 117, 118, 119, 120, 121, 149, 150, 197, 198, 199, 227, 231], "modifi": [3, 4, 11, 12, 13, 14, 17, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 35, 36, 40, 45, 46, 48, 49, 51, 52, 55, 56, 59, 63, 67, 69, 70, 71, 75, 101, 102, 103, 123, 149, 150, 192, 193, 195, 196, 202, 204, 221, 223, 233, 243], "sequenc": [3, 26, 61, 74, 89, 202, 207, 209], "numer": [3, 83, 141, 142, 197, 205, 207, 213, 235, 239, 244], "partit": [3, 35, 47, 216], "kokkos_stdalgorithm": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 216], "datatyp": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 75, 76, 77, 79, 123, 188, 192, 228, 238, 243], "properti": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 76, 148, 149, 150, 156, 180, 185, 186, 188, 207, 208, 211, 212, 222], "qualifi": [4, 87, 206, 216, 218, 227], "past": [4, 16, 74, 82, 86, 87], "reason": [4, 95, 132, 156, 206, 208, 209, 210, 212, 213, 218, 223, 231, 241, 244], "taken": [4, 196, 199, 233], "becaus": [4, 142, 165, 177, 204, 206, 207, 208, 210, 212, 213, 221, 231, 242], "we": [4, 39, 40, 41, 76, 84, 87, 95, 134, 142, 154, 181, 188, 194, 196, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 219, 227, 233, 237, 238, 240, 241], "chang": [4, 72, 75, 81, 134, 155, 172, 188, 196, 205, 206, 208, 210, 211, 212, 213, 216, 218, 221, 223, 228, 230, 231, 232, 233, 235, 241], "itself": [4, 76, 77, 95, 131, 139, 151, 184, 188, 195, 197, 199, 205, 207, 211, 212, 213, 233, 244, 245], "without": [4, 72, 77, 86, 87, 95, 133, 147, 149, 172, 181, 185, 186, 189, 196, 197, 198, 206, 210, 211, 212, 213, 216, 218, 221, 222, 223, 227, 239, 241, 242, 245], "dereferenc": [4, 11, 22, 30, 31, 86, 244], "must": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 75, 76, 77, 78, 81, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 129, 130, 133, 135, 136, 138, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 164, 180, 185, 186, 187, 188, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 208, 211, 212, 213, 221, 223, 231, 232, 233, 234, 235, 239, 240, 242, 245], "done": [4, 37, 54, 69, 87, 95, 139, 197, 202, 203, 210, 212, 213, 218, 231, 233, 240], "execut": [4, 11, 22, 23, 24, 30, 38, 42, 47, 48, 53, 54, 55, 56, 67, 69, 72, 75, 76, 79, 82, 83, 86, 87, 93, 94, 95, 104, 106, 107, 123, 128, 129, 130, 133, 135, 136, 137, 138, 139, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 170, 171, 174, 175, 180, 181, 186, 188, 189, 194, 195, 203, 204, 205, 206, 210, 213, 216, 218, 220, 221, 223, 226, 231, 234, 235, 239, 244, 245, 247], "rank": [4, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 77, 78, 82, 85, 87, 117, 133, 148, 149, 152, 155, 157, 159, 161, 179, 181, 184, 185, 186, 187, 188, 202, 203, 212, 213, 216, 228, 238, 239, 240], "layoutleft": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 78, 82, 98, 181, 185, 186, 188, 204, 212, 228, 239], "layoutright": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 98, 181, 185, 186, 188, 204, 208, 211, 212, 239], "layoutstrid": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 76, 98, 188, 211, 212, 238], "ke": [4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56], "view_typ": [4, 21, 25, 28, 30, 35, 42, 75, 179], "proper": [4, 86, 197, 204, 213], "content": [4, 72, 75, 105, 133, 149, 150, 166, 185, 186, 204, 206, 208, 212, 223, 240, 242, 245], "itc": 4, "read": [4, 11, 21, 22, 67, 68, 105, 131, 195, 204, 207, 208, 211, 212, 241], "iteratortyp": [4, 12, 13, 14, 19, 20, 21, 23, 24, 26, 27, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 53, 56, 59, 62, 63, 64, 69, 70], "difference_typ": [4, 19, 20, 63, 64, 84], "last": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 75, 76, 82, 136, 178, 183, 188, 202, 203, 204, 207, 211, 212, 218, 231, 235], "need": [4, 28, 29, 30, 76, 77, 84, 87, 95, 130, 131, 134, 138, 140, 142, 149, 150, 165, 180, 181, 188, 189, 196, 197, 198, 202, 203, 204, 205, 208, 210, 211, 213, 216, 218, 221, 226, 231, 232, 233, 235, 240, 242, 243], "go": [4, 86, 148, 149, 150, 152, 154, 155, 156, 196, 197, 202, 207, 211, 212, 218, 231, 233], "calcul": [4, 144, 145, 146, 156, 184, 202, 204, 212, 238, 244], "neg": [4, 18, 24, 33, 63, 64, 136, 194, 195, 210], "it1": [4, 25, 28], "it2": [4, 25, 28], "stepsa": 4, "equal": [4, 7, 12, 19, 25, 26, 27, 33, 38, 43, 44, 49, 50, 53, 54, 58, 61, 62, 65, 71, 76, 88, 93, 101, 102, 103, 133, 152, 165, 187, 188, 192, 193, 203], "stepsb": 4, "swap": [4, 59, 65, 177, 202, 212, 216], "point": [4, 25, 28, 29, 75, 76, 77, 79, 82, 87, 95, 101, 103, 105, 131, 136, 139, 142, 153, 169, 180, 188, 196, 197, 206, 207, 210, 211, 212, 221, 231, 235, 239, 240, 241], "current": [4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 74, 76, 77, 81, 87, 88, 95, 100, 101, 102, 105, 108, 131, 139, 142, 165, 170, 188, 192, 193, 197, 202, 208, 209, 210, 211, 212, 213, 220, 221, 231, 234, 235, 240], "api": [4, 55, 81, 88, 135, 136, 155, 172, 203, 215, 218, 220, 229, 239, 245], "doe": [4, 47, 75, 77, 81, 87, 92, 95, 128, 133, 138, 147, 149, 150, 169, 177, 180, 188, 196, 197, 203, 204, 207, 211, 212, 213, 216, 218, 221, 222, 223, 227, 228, 231, 234, 235], "fenc": [4, 72, 87, 90, 131, 139, 148, 149, 155, 165, 186, 188, 206, 207, 212, 213, 218, 242], "min_el": [5, 39, 41, 173], "max_el": [5, 173], "minmax_el": [5, 173], "copi": [6, 11, 16, 17, 18, 23, 24, 46, 50, 51, 54, 55, 58, 60, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 93, 95, 98, 134, 138, 139, 148, 155, 156, 165, 170, 180, 182, 183, 184, 186, 188, 198, 200, 201, 204, 206, 207, 208, 213, 222, 223, 228, 233, 235, 240, 242, 244], "copy_if": 6, "copy_n": 6, "copy_backward": 6, "move": [6, 44, 49, 52, 76, 77, 81, 134, 139, 155, 156, 182, 183, 184, 188, 196, 218, 228, 236], "move_backward": 6, "fill_n": 6, "transform": [6, 67, 68, 69, 209, 223], "generate_n": 6, "remov": [6, 52, 88, 132, 136, 141, 142, 143, 172, 196, 203, 216, 221, 231, 233], "remove_if": 6, "remove_copi": [6, 51], "remove_copy_if": 6, "replac": [6, 35, 46, 51, 52, 54, 55, 56, 70, 71, 89, 100, 101, 102, 103, 105, 108, 132, 133, 143, 197, 203, 204, 206, 208, 216, 221, 246], "replace_if": [6, 55], "replace_copi": [6, 55], "replace_copy_if": 6, "swap_rang": 6, "revers": [6, 16, 44, 58, 74, 137, 140], "reverse_copi": 6, "rotat": [6, 60, 140], "rotate_copi": 6, "shift_left": [6, 64], "shift_right": 6, "uniqu": [6, 76, 77, 131, 147, 188, 197, 203, 207, 213, 247], "unique_copi": 6, "adjacent_find": 7, "count_if": 7, "all_of": [7, 193, 210], "any_of": [7, 193, 210], "none_of": [7, 193, 210], "find": [7, 37, 39, 40, 41, 74, 81, 82, 87, 140, 195, 197, 198, 199, 206, 208, 213, 219, 220, 221, 231], "find_if": 7, "find_if_not": 7, "find_end": 7, "find_first_of": 7, "for_each": [7, 31], "for_each_n": [7, 62], "lexicographical_compar": 7, "mismatch": [7, 61, 212], "search": [7, 12, 13, 14, 19, 20, 25, 26, 27, 28, 29, 35, 36, 45, 53, 62, 70, 74, 81, 133, 203, 218, 245], "search_n": 7, "adjacent_differ": 8, "reduc": [8, 69, 72, 82, 83, 87, 95, 96, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 131, 149, 150, 155, 198, 202, 205, 207, 209, 211, 212], "exclusive_scan": [8, 34, 67], "inclusive_scan": 8, "transform_reduc": 8, "transform_exclusive_scan": [8, 68], "transform_inclusive_scan": 8, "is_partit": [9, 47], "partition_point": 9, "partition_copi": 9, "is_sort": [10, 37, 82], "is_sorted_until": 10, "executionspac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 93, 131, 139, 154, 165, 181, 202, 204, 212, 216, 241], "inputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 46, 54, 55, 67, 68], "outputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 54, 55, 67, 68], "exespac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "first_from": [11, 15, 16, 17, 18, 22, 34, 50, 51, 54, 55, 60, 66, 67, 68, 71], "last_from": [11, 15, 16, 17, 22, 34, 50, 51, 54, 55, 60, 66, 67, 68, 71], "first_dest": [11, 22, 34, 67, 68], "binaryop": [11, 22, 48], "bin_op": [11, 22, 34, 68], "string": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 87, 88, 129, 131, 133, 134, 136, 147, 148, 149, 150, 163, 164, 167, 188, 189, 197, 203, 212, 216, 246], "label": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 87, 129, 131, 139, 147, 148, 149, 150, 163, 164, 180, 184, 185, 186, 188, 189, 212, 216, 233, 235], "datatype1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "datatype2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "view_from": [11, 15, 16, 17, 18, 22, 34, 46, 50, 51, 54, 55, 60, 67, 68], "view_dest": [11, 22, 34, 50, 51, 60, 67, 68], "written": [11, 22, 34, 67, 68, 102, 131, 139, 202, 204, 207, 223, 232, 244], "second": [11, 36, 37, 38, 40, 42, 72, 74, 93, 95, 136, 147, 165, 166, 178, 187, 192, 193, 194, 195, 199, 202, 204, 206, 207, 208, 212], "comput": [11, 22, 34, 37, 59, 67, 68, 140, 149, 197, 199, 200, 201, 202, 205, 208, 209, 210, 212, 213, 214, 221, 223, 231, 234, 238, 239, 244], "differ": [11, 73, 75, 76, 80, 81, 82, 87, 88, 95, 98, 138, 152, 154, 180, 181, 196, 197, 199, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 223, 231, 233, 235, 240, 242], "adjac": 11, "pair": [11, 12, 21, 22, 26, 27, 36, 40, 41, 42, 46, 66, 69, 72, 74, 81, 92, 173, 179, 187, 199, 211, 216, 235], "write": [11, 22, 34, 58, 66, 67, 68, 84, 95, 100, 103, 108, 131, 139, 197, 198, 202, 205, 207, 208, 210, 211, 212, 220, 223, 231, 235], "them": [11, 58, 87, 131, 195, 196, 197, 202, 204, 206, 208, 209, 210, 212, 231, 240], "binari": [11, 12, 21, 22, 26, 27, 34, 36, 37, 40, 48, 61, 62, 66, 69, 70, 71, 72, 109, 123, 196, 199, 208, 212, 221], "instanc": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 75, 76, 87, 93, 95, 131, 134, 138, 139, 147, 154, 156, 165, 181, 185, 186, 188, 189, 194, 196, 199, 206, 208, 211, 212, 216, 218, 221, 222, 244], "name": [11, 15, 16, 18, 22, 23, 24, 32, 34, 47, 48, 53, 54, 66, 67, 68, 69, 72, 76, 77, 79, 87, 93, 95, 131, 133, 134, 138, 139, 148, 149, 150, 151, 155, 188, 195, 196, 197, 200, 202, 203, 206, 207, 216, 218, 220, 221, 223, 235, 237, 238, 241, 246], "implement": [11, 15, 16, 18, 22, 23, 24, 32, 34, 47, 48, 53, 54, 66, 67, 68, 69, 73, 76, 82, 85, 89, 92, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 134, 140, 142, 143, 149, 153, 158, 160, 162, 163, 164, 166, 168, 180, 187, 188, 189, 192, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 216, 220, 221, 222, 231, 232, 235, 238, 242, 245], "debug": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 88, 129, 148, 149, 150, 188, 196, 197, 202, 212, 218, 220, 234, 235, 241], "purpos": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 85, 87, 95, 138, 188, 205, 207, 209, 211, 212, 215, 220, 223, 231], "adjacent_difference_iterator_api_default": 11, "adjacent_difference_view_api_default": 11, "_from": [11, 22, 71], "repres": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 74, 76, 85, 95, 131, 136, 139, 140, 151, 152, 170, 187, 188, 189, 207, 210, 211, 212, 223, 228], "valid": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 75, 76, 77, 79, 81, 83, 84, 93, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 130, 131, 133, 134, 148, 149, 150, 152, 153, 154, 156, 187, 188, 189, 197, 202, 204, 206, 207, 208, 209, 212], "check": [11, 16, 21, 22, 23, 25, 30, 32, 36, 40, 48, 53, 54, 69, 70, 71, 81, 84, 88, 131, 133, 138, 139, 140, 154, 169, 199, 203, 204, 212, 213, 218, 221, 231, 234, 235, 239], "mode": [11, 16, 22, 23, 30, 32, 40, 48, 53, 54, 69, 196, 204, 209, 210, 216, 227, 233], "pass": [11, 12, 13, 14, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 35, 36, 39, 40, 41, 45, 46, 48, 51, 52, 55, 56, 61, 62, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 95, 131, 132, 133, 134, 136, 138, 141, 154, 187, 197, 203, 204, 205, 208, 211, 212, 213, 221, 227, 233, 234, 235, 239, 240], "callabl": [11, 22, 48, 67, 69, 137, 169, 188, 192, 193, 196, 206], "value_typ": [11, 12, 13, 14, 17, 20, 22, 28, 29, 30, 32, 33, 35, 36, 40, 45, 46, 48, 51, 52, 55, 56, 67, 69, 70, 71, 76, 82, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 149, 150, 170, 181, 188, 192, 193, 199, 201, 208, 228, 240, 242], "conform": [11, 12, 13, 14, 17, 20, 21, 22, 26, 27, 28, 29, 30, 33, 35, 36, 40, 45, 46, 48, 51, 52, 56, 67, 69, 70, 71, 216], "return_typ": [11, 22, 32, 33, 69, 245], "assign": [11, 22, 23, 24, 32, 33, 49, 52, 72, 74, 77, 78, 82, 84, 85, 87, 93, 120, 121, 123, 131, 133, 134, 139, 148, 149, 155, 156, 170, 182, 183, 184, 192, 193, 195, 203, 204, 209, 211, 212, 231, 232, 240], "consecut": [12, 70, 71, 140, 156, 212, 240], "binarypredicatetyp": [12, 21, 26, 27, 42, 61, 62], "pred": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 38, 42, 45, 46, 47, 51, 52, 55, 56, 61, 62, 70, 71], "new": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 74, 75, 79, 81, 87, 88, 89, 95, 130, 131, 133, 134, 139, 143, 151, 165, 180, 184, 185, 186, 187, 188, 189, 190, 195, 196, 199, 202, 204, 205, 206, 207, 208, 212, 213, 216, 218, 219, 222, 226, 228, 229, 231, 232, 233, 234, 241, 245], "teamhandletyp": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71], "teamhandl": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 153, 157, 158, 159, 160, 161, 162], "11": [12, 21, 26, 27, 34, 36, 37, 39, 40, 41, 48, 66, 69, 70, 71, 78, 196, 197, 208, 221, 222, 225, 227, 233, 235], "12": [12, 21, 26, 27, 34, 36, 37, 39, 40, 41, 48, 66, 69, 70, 71, 72, 181, 197, 213, 214, 225, 227, 231, 240], "region": [12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 70, 71, 77, 85, 147, 148, 149, 150, 163, 164, 189, 202, 203, 204, 206, 207, 212], "when": [12, 13, 14, 15, 16, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 70, 71, 74, 78, 81, 82, 86, 87, 88, 92, 95, 131, 136, 137, 138, 139, 149, 153, 156, 163, 164, 180, 182, 183, 184, 188, 189, 194, 195, 196, 197, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 218, 219, 221, 222, 227, 228, 231, 235, 238, 239, 241, 242, 245, 246], "forward": [12, 13, 14, 19, 20, 21, 25, 26, 27, 28, 29, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 70, 71, 74, 134, 196, 204, 209, 222, 233, 240], "adjacent_find_iterator_api_default": 12, "adjacent_find_view_api_default": 12, "g": [12, 13, 14, 19, 20, 21, 23, 25, 26, 27, 28, 29, 32, 33, 35, 36, 40, 45, 46, 49, 50, 53, 57, 58, 59, 60, 63, 70, 71, 75, 76, 79, 85, 87, 88, 93, 129, 130, 133, 135, 139, 143, 147, 151, 156, 164, 180, 185, 186, 188, 192, 193, 196, 197, 202, 203, 206, 207, 208, 209, 212, 213, 218, 221, 226, 228, 233, 234, 235, 241], "c": [12, 13, 14, 19, 20, 21, 25, 26, 27, 28, 29, 34, 35, 36, 40, 45, 46, 48, 49, 50, 57, 58, 59, 60, 63, 69, 70, 71, 72, 75, 76, 77, 83, 84, 87, 89, 92, 98, 123, 131, 134, 136, 138, 139, 140, 141, 142, 143, 148, 151, 157, 159, 161, 169, 183, 188, 189, 192, 193, 194, 197, 198, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 218, 219, 221, 223, 228, 234, 238, 239, 242, 245], "associ": [12, 13, 14, 15, 16, 17, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 40, 43, 44, 45, 46, 48, 49, 50, 52, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 76, 95, 109, 123, 131, 135, 139, 151, 155, 165, 187, 188, 189, 199, 202, 206, 207, 208, 212, 221, 223, 240, 242, 244], "consid": [12, 21, 26, 27, 87, 190, 195, 196, 202, 206, 210, 211, 212, 218, 231, 232, 244], "convert": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 36, 40, 45, 46, 51, 52, 55, 56, 70, 71, 84, 93, 95, 131, 133, 136, 154, 166, 169, 188, 192, 193, 204, 210, 238, 239], "everi": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 30, 35, 36, 40, 45, 46, 51, 52, 55, 56, 70, 71, 76, 81, 95, 155, 157, 158, 159, 160, 181, 187, 188, 195, 196, 197, 199, 202, 206, 210, 211, 212, 213, 219, 223, 231, 232, 235, 241, 245], "If": [12, 18, 21, 24, 26, 35, 63, 64, 74, 75, 76, 78, 84, 87, 88, 102, 128, 129, 130, 134, 137, 138, 139, 148, 149, 150, 156, 169, 180, 181, 186, 187, 188, 195, 196, 197, 198, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 218, 219, 221, 222, 223, 226, 231, 232, 233, 239, 240, 242, 243, 244], "found": [12, 14, 25, 28, 29, 37, 74, 78, 81, 84, 101, 102, 104, 107, 123, 156, 195, 196, 197, 206, 207, 209, 210, 231, 235], "satisfi": [13, 14, 20, 28, 35, 45, 46, 47, 82, 149, 180, 222, 232], "target": [13, 14, 19, 25, 26, 27, 43, 44, 45, 49, 50, 58, 72, 75, 88, 95, 131, 148, 188, 197, 204, 205, 207, 209, 220, 221, 226, 235], "unari": [13, 14, 17, 20, 28, 29, 35, 45, 46, 51, 52, 55, 56, 66, 67, 69, 70, 71, 95, 142], "predic": [13, 14, 17, 20, 21, 27, 28, 29, 35, 42, 45, 46, 51, 52, 55, 56, 61, 62, 70, 71, 95], "inputiter": [13, 14, 25, 28, 29, 30, 31, 35, 43, 50, 51, 57, 58, 60, 66, 71], "all_of_iterator_api_default": 13, "all_of_view_api_default": 13, "v": [13, 14, 17, 20, 30, 35, 45, 46, 51, 52, 55, 56, 67, 69, 70, 71, 77, 78, 80, 82, 138, 159, 166, 170, 185, 186, 187, 188, 204, 216, 223, 228, 242], "custompred": [13, 14, 20, 45], "your": [13, 14, 20, 36, 40, 75, 131, 196, 197, 198, 203, 208, 210, 212, 213, 215, 219, 221, 223, 226, 240], "empti": [13, 14, 26, 35, 39, 40, 41, 45, 75, 82, 216, 245], "fals": [13, 14, 21, 29, 35, 42, 45, 74, 77, 81, 102, 131, 133, 134, 135, 139, 150, 169, 180, 184, 188, 203, 210, 212, 222], "otherwis": [13, 18, 21, 24, 35, 45, 63, 64, 74, 75, 76, 77, 78, 81, 83, 84, 88, 93, 95, 102, 130, 131, 133, 156, 180, 188, 196, 203, 204, 208, 212, 213, 223, 233], "least": [14, 78, 81, 87, 88, 139, 140, 204, 206, 210, 218, 221, 223, 234], "one": [14, 39, 40, 41, 42, 75, 76, 78, 87, 95, 133, 136, 138, 139, 140, 142, 147, 155, 157, 158, 159, 160, 165, 167, 173, 174, 180, 182, 183, 185, 186, 187, 188, 192, 193, 195, 196, 197, 198, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 221, 223, 228, 231, 233, 235, 237, 238, 240, 244, 245], "any_of_iterator_api_default": 14, "any_of_view_api_default": 14, "sourc": [15, 16, 17, 18, 43, 44, 46, 50, 54, 58, 60, 65, 66, 71, 75, 76, 155, 169, 179, 188, 197, 207, 210, 213, 215, 223, 226, 229, 233, 235, 246], "destin": [15, 16, 17, 18, 46, 50, 54, 66, 71, 76, 79, 188, 204, 240], "first_to": [15, 17, 18, 50, 51, 54, 55, 60, 66, 71], "view_to": [15, 16, 17, 18, 54, 55], "copy_iterator_api_default": 15, "copy_view_api_default": 15, "anoth": [16, 17, 18, 42, 54, 55, 78, 87, 95, 140, 155, 157, 158, 159, 160, 180, 187, 195, 202, 203, 204, 209, 210, 211, 212, 235, 240, 244], "last_to": 16, "rel": [16, 49, 52, 165, 197, 209], "preserv": [16, 49, 52, 78, 87, 185, 186], "copy_backward_iterator_api_default": 16, "copy_backward_view_api_default": 16, "unarypredicatetyp": [17, 55, 56], "copy_if_iterator_api_default": 17, "copy_if_view_api_default": 17, "sizetyp": [18, 24, 31, 62], "copy_n_if_iterator_api_default": 18, "copy_n_if_view_api_default": 18, "count_iterator_api_default": 19, "count_view_api_default": 19, "prediat": 20, "count_if_iterator_api_default": 20, "count_if_view_api_default": 20, "iteratortype1": [21, 26, 27, 38, 42, 44, 61, 65, 69], "iteratortype2": [21, 26, 27, 38, 42, 44, 61, 65, 69], "first1": [21, 38, 42, 65, 69], "last1": [21, 38, 42, 65, 69], "first2": [21, 38, 42, 65, 69], "last2": [21, 38, 42], "view1": [21, 38, 42], "view2": [21, 38, 42], "binarypred": [21, 42, 70, 71], "applic": [21, 76, 77, 188, 196, 197, 198, 203, 204, 205, 207, 208, 209, 211, 212, 213, 219, 220, 221, 223, 231, 235, 238, 242, 244, 245, 247], "equal_iterator_api_default": 21, "equal_view_api_default": 21, "valuetype1": [21, 26, 27, 39, 40, 41, 42], "valuetype2": [21, 26, 27, 39, 40, 41, 42], "valuetyp": [21, 22, 26, 27, 28, 30, 34, 35, 48, 49, 50, 56, 62, 67, 68, 69, 81, 200, 201], "isequalfunctor": [21, 26, 27, 42], "corner": [21, 88, 218, 221, 229], "case": [21, 37, 39, 40, 41, 75, 76, 87, 92, 95, 149, 150, 151, 180, 181, 188, 197, 202, 203, 204, 207, 208, 210, 211, 212, 213, 216, 218, 220, 221, 231, 237, 240, 242, 243, 244], "length": [21, 149, 152, 153, 156, 157, 158, 159, 160, 161, 162, 185, 186, 188, 199, 204, 212, 243], "somehow": [21, 25, 28, 30, 35, 39, 40, 42], "creat": [21, 28, 30, 42, 72, 75, 78, 79, 81, 83, 87, 95, 98, 134, 138, 163, 164, 165, 180, 181, 184, 187, 188, 189, 194, 195, 196, 197, 199, 204, 206, 207, 216, 218, 221, 231, 232, 233, 235, 240, 244], "p": [21, 28, 30, 42, 77, 166, 185, 186, 197, 205, 212, 213, 216, 235, 239], "isequ": 21, "To": [21, 84, 95, 129, 130, 139, 148, 180, 181, 197, 198, 202, 203, 205, 206, 208, 211, 212, 213, 215, 221, 231, 232, 235, 238], "run": [21, 74, 88, 95, 136, 139, 148, 195, 196, 197, 199, 202, 204, 206, 207, 208, 209, 212, 213, 218, 221, 231, 233, 235, 241, 242], "explicitli": [21, 23, 24, 28, 30, 42, 53, 56, 76, 131, 138, 166, 188, 197, 199, 202, 203, 204, 206, 210, 211, 216, 221, 223, 234, 235], "host": [21, 25, 72, 73, 74, 75, 76, 77, 80, 81, 82, 88, 131, 133, 138, 139, 142, 169, 171, 174, 180, 181, 188, 189, 197, 202, 203, 204, 208, 209, 212, 213, 226, 231, 235, 236, 240, 241, 245], "assum": [21, 23, 24, 25, 28, 30, 42, 47, 53, 56, 75, 81, 87, 88, 95, 123, 133, 149, 150, 202, 204, 207, 208, 211, 212, 223, 237, 240], "defaulthostexecutionspac": [21, 94, 175, 203, 204], "overload": [22, 23, 24, 31, 34, 48, 53, 54, 55, 56, 61, 62, 69, 89, 90, 136, 142, 148, 149, 177, 196, 210, 211, 212, 216, 218, 244], "set": [22, 23, 24, 31, 34, 48, 53, 56, 61, 62, 69, 72, 74, 75, 76, 77, 81, 82, 83, 87, 89, 98, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 131, 133, 136, 142, 152, 154, 155, 156, 166, 170, 171, 174, 175, 178, 182, 183, 184, 188, 190, 192, 193, 194, 195, 196, 197, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 216, 219, 221, 222, 226, 227, 231, 233, 234, 235, 238, 242, 245], "init_valu": [22, 34, 67, 68, 202], "binaryoptyp": [22, 34, 67, 68], "exclus": [22, 67, 150, 155, 169, 208, 211, 221, 223, 240], "prefix": [22, 34, 67, 68, 90, 202, 203, 208, 209, 221], "sum": [22, 34, 67, 68, 72, 80, 81, 90, 109, 123, 149, 158, 160, 162, 198, 199, 200, 201, 202, 208], "result": [22, 30, 31, 34, 48, 63, 64, 66, 67, 68, 69, 74, 78, 79, 88, 95, 102, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 138, 140, 149, 150, 156, 165, 179, 188, 198, 199, 200, 201, 202, 204, 206, 207, 209, 211, 212, 223, 235, 238, 239, 245, 246], "scan": [22, 34, 67, 68, 72, 74, 150, 155, 156, 202, 207, 209, 212, 240], "combin": [22, 34, 81, 87, 104, 106, 107, 123, 139, 149, 150, 188, 199, 202, 205, 209, 212, 223, 227, 233, 245], "th": [22, 34, 67, 68, 74, 187], "exclusive_scan_iterator_api_default": 22, "exclusive_scan_view_api_default": 22, "fill_iterator_api_default": 23, "fill_view_api_default": 23, "directli": [23, 24, 39, 40, 41, 84, 95, 131, 139, 196, 197, 202, 203, 204, 209, 210, 212, 218, 234], "22": [23, 227, 235], "openmp": [23, 24, 25, 28, 30, 42, 53, 56, 72, 85, 87, 88, 94, 154, 156, 181, 197, 203, 205, 208, 209, 212, 213, 216, 220, 221, 227, 233, 234, 235, 242], "fill_n_iterator_api_default": 24, "fill_n_view_api_default": 24, "someth": [24, 53, 56, 78, 87, 147, 151, 192, 193, 195, 197, 206, 207, 231, 244], "newvalu": [24, 53, 56], "find_iterator_api_default": 25, "find_view_api_default": 25, "cbegin": [25, 35, 58, 152], "cend": [25, 35, 58, 152], "enabl": [25, 28, 30, 42, 86, 88, 138, 139, 153, 158, 160, 162, 171, 174, 197, 202, 203, 208, 209, 212, 214, 221, 226, 231, 235, 241, 243, 245], "you": [25, 26, 27, 28, 30, 42, 75, 95, 131, 134, 138, 139, 142, 143, 151, 180, 184, 195, 196, 197, 198, 199, 202, 203, 204, 206, 207, 208, 210, 211, 213, 214, 216, 219, 221, 222, 223, 226, 229, 233, 244], "occurr": [26, 61], "s_first": [26, 27, 61], "s_last": [26, 27, 61], "s_view": [26, 27, 61], "via": [26, 27, 37, 49, 52, 69, 79, 85, 86, 95, 120, 121, 126, 129, 137, 139, 148, 149, 150, 153, 154, 156, 158, 160, 162, 188, 195, 197, 200, 202, 203, 204, 208, 212, 213, 231, 232, 233, 234, 238, 240, 245], "find_end_iterator_api_default": 26, "find_end_view_api_default": 26, "want": [26, 27, 75, 84, 138, 195, 203, 206, 207, 208, 210, 218, 221, 240], "s_": [26, 27], "find_first_of_iterator_api_default": 27, "find_first_of_view_api_default": 27, "custom": [28, 29, 39, 40, 41, 76, 87, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 131, 149, 188, 202, 208, 212, 225, 231, 232, 239, 247], "predicatetyp": [28, 29, 30, 35, 46, 47], "find_if_iterator_api_default": 28, "find_if_view_api_default": 28, "operand": [28, 29, 30, 35, 48], "evalu": [28, 29, 42, 76, 131, 169, 188, 204, 208, 218, 231, 235, 239], "equalsvalu": 28, "m_valu": [28, 30], "equalsvalfunctor": 28, "find_if_not_iterator_api_default": 29, "find_if_not_view_api_default": 29, "unaryfunctortyp": [30, 31], "func": [30, 31, 137, 142], "for_each_iterator_api_default": 30, "for_each_view_api_default": 30, "signatur": [30, 148, 149, 150, 208, 239], "noth": [30, 87, 100, 108, 128, 131, 139, 151, 169, 207, 208, 212, 223], "incrementvalsfunctor": 30, "increment": [30, 37, 195, 204, 207, 212], "for_each_n_iterator_api_default": 31, "for_each_n_view_api_default": 31, "generatortyp": 32, "generate_iterator_api_default": 32, "generate_view_api_default": 32, "form": [32, 33, 95, 131, 133, 135, 149, 150, 194, 205, 207, 209, 212, 223, 242, 245], "being": [32, 33, 81, 87, 89, 95, 123, 143, 144, 145, 146, 156, 167, 187, 195, 202, 207, 210, 212, 221, 231, 246], "size": [33, 49, 52, 72, 74, 75, 76, 77, 81, 82, 87, 90, 129, 130, 139, 144, 145, 146, 152, 154, 156, 182, 183, 184, 188, 192, 193, 202, 204, 208, 209, 210, 212, 216, 239, 240, 243, 245], "ex": [33, 43, 44, 57, 65, 87, 93, 131, 203], "generate_n_iterator_api_default": 33, "generate_n_view_api_default": 33, "inclus": [34, 68, 150, 208, 211, 218, 223, 231, 234], "op": [34, 72, 79, 81, 84, 99, 123, 181, 195, 212], "first_last": [34, 67, 68], "inclusive_scan_iterator_api_default": 34, "inclusive_scan_view_api_default": 34, "appear": [35, 49, 52, 87, 140, 188, 195, 212, 223, 240], "don": [35, 72, 75, 87, 180, 188, 195, 196, 208, 218, 221, 227, 233], "is_partitioned_iterator_api_default": 35, "is_partitioned_view_api_default": 35, "isneg": 35, "zero": [35, 72, 76, 77, 78, 80, 95, 133, 139, 155, 188, 202, 211, 212, 213], "re": [35, 39, 40, 41, 87, 95, 131, 139, 151, 170, 197, 206, 208, 212, 245], "comparison": [36, 37, 39, 40, 41, 54, 72, 102, 142, 195, 198], "comparatortyp": [36, 37, 38, 39, 40, 41], "is_sorted_iterator_api_default": 36, "is_sorted_view_api_default": 36, "less": [36, 38, 39, 40, 41, 63, 64, 87, 140, 152, 165, 198, 210, 212, 227, 231, 239, 240], "than": [36, 38, 39, 40, 41, 63, 64, 74, 76, 77, 78, 87, 95, 131, 133, 138, 139, 140, 152, 154, 156, 187, 188, 195, 197, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 218, 227, 231, 239, 244], "logic": [36, 39, 40, 41, 49, 52, 70, 72, 76, 109, 111, 112, 113, 188, 195, 197, 199, 202, 207, 209, 210, 212, 245], "largest": [37, 39, 41, 79, 82, 140, 173, 209], "is_sorted_until_iterator_api_default": 37, "is_sorted_until_view_api_default": 37, "is_same_v": [37, 87], "decltyp": [37, 63, 64, 84, 143, 179, 180, 181, 187, 192, 194, 211, 222], "lexicograph": 38, "lexicographical_compare_iterator_api_default": 38, "lexicographical_compare_view_api_default": 38, "similar": [38, 61, 62, 72, 76, 78, 82, 87, 95, 188, 196, 206, 207, 210, 216, 218, 222, 235, 240], "max_element_iterator_api_default": 39, "max_element_view_api_default": 39, "sever": [39, 40, 41, 87, 89, 197, 207, 208, 220, 222, 232, 234, 235, 241], "customlessthancompar": [39, 40, 41], "put": [39, 40, 41, 196, 204, 208, 209, 231, 246], "smallest": [40, 41, 140, 173], "min_element_iterator_api_default": 40, "min_element_view_api_default": 40, "examin": [40, 47, 235], "minmax_element_iterator_api_default": 41, "minmax_element_view_api_default": 41, "itpair": 41, "mismatch_iterator_api_default": 42, "mismatch_view_api_default": 42, "exampl": [42, 75, 86, 88, 94, 95, 142, 151, 195, 197, 198, 199, 202, 204, 205, 206, 209, 211, 212, 213, 220, 221, 222, 223, 226, 235, 238, 239, 240, 241], "cpp": [42, 133, 138, 197, 216], "mismatchfunctor": 42, "mismatch_index": 42, "d_first": [43, 58], "outputiter": [43, 50, 51, 58, 60, 66, 71], "dest": [43, 44, 58, 60, 65, 66, 71, 79, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 181, 201], "move_iterator_api_default": 43, "move_view_api_default": 43, "distanc": [43, 44, 58, 65], "d_last": 44, "move_backward_iterator_api_default": 44, "move_backward_view_api_default": 44, "none_of_iterator_api_default": 45, "none_of_view_api_default": 45, "to_first_tru": 46, "view_tru": 46, "to_first_fals": 46, "view_fals": 46, "outputiteratortruetyp": 46, "outputiteratorfalsetyp": 46, "from_first": 46, "from_last": 46, "datatype3": [46, 66], "properties3": [46, 66], "view_dest_tru": 46, "view_dest_fals": 46, "partition_copy_iterator_api_default": 46, "partition_copy_view_api_default": 46, "NOT": [46, 138, 155, 157, 159, 161, 165, 208, 223, 233], "contain": [46, 49, 52, 74, 75, 81, 95, 133, 136, 148, 149, 150, 152, 155, 172, 180, 182, 183, 184, 185, 186, 188, 189, 196, 197, 199, 202, 203, 204, 206, 207, 210, 218, 220, 221, 223, 231, 235, 240, 244, 246], "locat": [47, 75, 76, 79, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 139, 188, 197, 202, 207, 209, 212, 213, 221, 235, 238, 243], "alreadi": [47, 76, 78, 81, 85, 87, 180, 181, 188, 196, 205, 208, 233, 237], "partition_point_iterator_api_default": 47, "partition_point_view_api_default": 47, "init_reduction_valu": [48, 69], "joiner": [48, 69], "reduct": [48, 69, 72, 79, 87, 90, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 149, 150, 155, 156, 199, 200, 201, 202, 207, 209, 216, 225, 242, 247], "account": [48, 68, 156, 219, 231], "join": [48, 69, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 149, 150, 198, 199, 201, 202, 207, 216, 219, 226, 231, 235, 240], "dure": [48, 86, 123, 154, 156, 187, 195, 202, 203, 204, 209, 212, 213, 231, 232, 234, 235, 237, 240, 244], "reduce_iterator_api_default": 48, "reduce_view_api_default": 48, "joinfunctor": [48, 69], "behavior": [48, 69, 75, 81, 95, 129, 130, 131, 133, 134, 150, 176, 188, 196, 206, 209, 210, 212, 213, 216, 222], "commut": [48, 69, 123], "shift": [49, 52, 63, 64, 104, 107], "remain": [49, 52, 87, 130, 207, 223, 231], "physic": [49, 52, 74, 156, 202, 209, 212], "unchang": [49, 52, 81], "remove_iterator_api_default": 49, "remove_view_api_default": 49, "omit": [50, 51, 75, 76, 128, 129, 130, 188], "those": [50, 51, 74, 75, 78, 93, 95, 101, 102, 149, 166, 188, 196, 197, 202, 204, 206, 211, 212, 223, 233, 237, 240], "remove_copy_iterator_api_default": 50, "remove_copy_view_api_default": 50, "unarypred": [51, 52], "remove_copy_if_iterator_api_default": 51, "remove_copy_if_view_api_default": 51, "remove_if_iterator_api_default": 52, "remove_if_view_api_default": 52, "old_valu": [53, 54, 104, 107], "new_valu": [53, 54, 55, 56], "replace_iterator_api_default": 53, "replace_view_api_default": 53, "self": [53, 54, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 131, 139, 218, 221], "explanatori": [53, 54, 167], "oldvalu": [53, 56], "mylabel": [53, 56], "replace_copy_iterator_api_default": 54, "replace_copy_view_api_default": 54, "replace_copy_if_iterator_api_default": 55, "replace_copy_if_view_api_default": 55, "replace_if_iterator_api_default": 56, "replace_if_view_api_default": 56, "ispositivefunctor": 56, "val": [56, 82, 100, 103, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 199, 201, 212], "reverse_iterator_api_default": 57, "reverse_view_api_default": 57, "reverse_copy_iterator_api_default": 58, "reverse_copy_view_api_default": 58, "wai": [59, 60, 75, 81, 83, 84, 87, 95, 190, 195, 196, 197, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 221, 223, 239, 240, 243, 244], "n_first": [59, 60], "n_locat": [59, 60], "rotate_iterator_api_default": 59, "rotate_view_api_default": 59, "identifi": [59, 60, 147, 155, 197, 202, 206, 213, 222, 223, 235, 237], "about": [59, 60, 85, 87, 88, 93, 131, 139, 142, 151, 165, 188, 196, 206, 207, 208, 209, 210, 212, 213, 216, 217, 231, 243], "rotate_copy_iterator_api_default": 60, "rotate_copy_view_api_default": 60, "search_iterator_api_default": 61, "search_view_api_default": 61, "search_n_iterator_api_default": 62, "search_n_view_api_default": 62, "posit": [63, 64, 74, 156, 187, 211, 245], "toward": [63, 64, 205, 207], "shift_left_iterator_api_default": 63, "shift_left_view_api_default": 63, "shift_right_iterator_api_default": 64, "shift_right_view_api_default": 64, "swap_ranges_iterator_api_default": 65, "swap_ranges_view_api_default": 65, "store": [66, 72, 75, 76, 77, 80, 81, 95, 100, 101, 102, 103, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 134, 149, 188, 195, 198, 199, 202, 207, 208, 209, 210, 212, 237, 239, 240, 243], "first_from1": 66, "last_from1": 66, "first_from2": 66, "last_from2": 66, "source1": 66, "source2": 66, "unaryoper": 66, "unary_op": [66, 67, 68], "inputiterator1": 66, "inputiterator2": 66, "binaryoper": 66, "binary_op": [66, 67, 68], "transform_iterator_api_default": 66, "transform_view_api_default": 66, "unaryoptyp": [67, 68], "except": [67, 68, 70, 81, 129, 131, 135, 136, 137, 139, 166, 196, 208, 212, 213, 221, 223, 231, 235], "transform_exclusive_scan_iterator_api_default": 67, "transform_exclusive_scan_view_api_default": 67, "unaryop": 67, "transform_inclusive_scan_iterator_api_default": 68, "transform_inclusive_scan_view_api_default": 68, "first_view": 69, "second_view": 69, "binaryjoinertyp": 69, "binarytransform": 69, "binary_transform": 69, "unarytransform": 69, "unary_transform": 69, "product": [69, 76, 77, 88, 152, 188, 199, 202, 206, 211, 212, 221, 223, 234, 239], "along": [69, 87, 211, 223, 238], "transform_reduce_iterator_api_default": 69, "transform_reduce_view_api_default": 69, "value_type_a": 69, "value_type_b": 69, "value_type_": 69, "elimin": [70, 76, 77, 188], "group": [70, 202, 207, 209, 231, 235], "unique_iterator_api_default": 70, "unique_view_api_default": 70, "unique_copy_iterator_api_default": 71, "unique_copy_view_api_default": 71, "librari": [72, 84, 87, 89, 92, 133, 140, 142, 143, 166, 169, 173, 195, 196, 197, 203, 205, 207, 212, 213, 216, 222, 231, 235, 240, 243, 244, 246, 247], "categori": [72, 190, 195, 197, 205, 207, 231, 234, 235], "descript": [72, 73, 83, 85, 88, 90, 98, 109, 123, 124, 131, 133, 195, 197, 203, 221, 233, 235], "rand": 72, "plu": [72, 124, 126, 129, 195, 202, 208, 239], "random_xorshift1024_pool": 72, "1024": [72, 77, 155, 200, 201, 202], "random_xorshift1024": 72, "sampl": [72, 200, 201], "fit": [72, 95, 202, 209, 223], "bitset": [72, 73, 81], "concurr": [72, 73, 81, 87, 131, 148, 149, 150, 165, 175, 197, 199, 207, 208, 209, 245], "dualview": [72, 73, 82, 87, 88, 190, 247], "mirror": [72, 73, 75, 78, 180, 212, 218], "dynamicview": [72, 73, 190], "dynam": [72, 76, 77, 85, 88, 95, 133, 154, 156, 185, 186, 188, 207, 212, 213, 245], "dynrankview": [72, 73, 181, 190], "determin": [72, 73, 76, 88, 152, 156, 159, 174, 187, 188, 192, 193, 197, 202, 203, 207, 208, 209, 212, 213, 221, 223, 231, 232, 234, 239, 240, 245], "runtim": [72, 73, 76, 78, 79, 85, 131, 133, 138, 156, 174, 188, 199, 202, 203, 204, 206, 209, 212, 218, 221, 231, 244], "errorreport": 72, "support": [72, 75, 78, 82, 84, 87, 88, 95, 131, 133, 134, 138, 139, 141, 142, 192, 193, 196, 197, 198, 202, 203, 204, 206, 208, 210, 212, 213, 222, 223, 234, 235, 240, 242, 247], "error": [72, 138, 142, 167, 188, 204, 207, 211, 212, 213, 222, 227, 233, 235, 244], "record": [72, 87, 231], "code": [72, 77, 87, 88, 90, 95, 131, 138, 139, 141, 155, 163, 164, 169, 181, 188, 195, 196, 197, 198, 200, 202, 206, 207, 208, 209, 211, 212, 213, 218, 220, 221, 222, 223, 225, 227, 231, 232, 234, 235, 236, 239, 240, 244, 245, 246], "offsetview": [72, 73, 87, 190, 216], "indic": [72, 76, 78, 79, 80, 81, 87, 109, 119, 120, 124, 131, 144, 145, 146, 188, 195, 199, 202, 209, 211, 212, 223, 239, 245], "scatterview": [72, 73, 190, 236, 247], "transpart": 72, "replic": [72, 195, 204, 235], "strategi": [72, 87, 95, 133, 195, 203, 206], "scatter": [72, 79, 195], "staticcrsgraph": [72, 73, 212], "resiz": [72, 75, 77, 79, 82, 98, 185, 204], "graph": [72, 80, 83, 95, 247], "semant": [72, 76, 78, 82, 95, 188, 196, 202, 204, 208, 212, 218, 220, 240], "unorderedmap": [72, 73, 212], "map": [72, 73, 76, 80, 81, 188, 202, 203, 204, 209, 212, 237, 239, 240], "optim": [72, 88, 154, 195, 197, 202, 204, 205, 206, 207, 209, 212, 213, 221, 240, 243], "insert": [72, 209, 212], "deprec": [72, 73, 77, 87, 88, 95, 100, 102, 132, 133, 136, 220, 221, 228, 231, 241, 245], "interfac": [72, 82, 87, 94, 95, 153, 158, 160, 162, 190, 196, 202, 204, 205, 207, 211, 212, 216, 221, 223, 238, 244], "abort": [72, 97, 134, 169], "util": [72, 83, 131, 166, 197, 202, 207, 235, 238, 243], "caus": [72, 138, 142, 167, 169, 188, 196, 204, 207, 212, 222, 223], "abnorm": [72, 167, 169], "program": [72, 82, 93, 95, 98, 135, 136, 139, 151, 167, 169, 203, 204, 205, 206, 210, 211, 212, 214, 221, 235, 237, 240, 245, 246], "termin": [72, 134, 135, 136, 137, 167, 169, 222, 223], "dimens": [72, 73, 75, 76, 77, 78, 79, 87, 152, 168, 182, 183, 184, 185, 186, 187, 189, 202, 204, 238, 239], "atomic_exchang": [72, 99, 101, 105, 108, 195], "exchang": [72, 101, 102, 103, 195, 236], "old": [72, 75, 79, 81, 88, 101, 103, 134, 186, 195, 208, 212, 218], "atomic_compare_exchang": [72, 99, 102, 103, 195, 216], "match": [72, 75, 76, 78, 82, 98, 148, 149, 150, 152, 166, 180, 182, 183, 188, 195, 197, 202, 212, 218, 228], "atomic_compare_exchange_strong": [72, 99, 195, 216], "atomic_load": [72, 99, 103, 108, 195], "load": [72, 76, 87, 95, 103, 133, 188, 195, 202, 203, 208, 209, 210, 226, 233, 235], "atomic_": [72, 99, 195], "anyth": [72, 95, 172, 195, 196], "atomic_fetch_": [72, 99, 195], "variou": [72, 75, 83, 195, 197, 234, 235], "_fetch": [72, 99, 195], "atomic_stor": [72, 99, 100, 103, 105, 195, 216], "band": [72, 109, 123, 199, 202], "bor": [72, 109, 123, 199, 202], "Or": [72, 109, 245], "stl": [72, 83], "compat": [72, 73, 76, 77, 78, 82, 83, 88, 93, 131, 136, 139, 149, 150, 166, 181, 188, 192, 194, 197, 203, 204, 206, 212, 222, 225, 238], "work": [72, 73, 75, 76, 79, 81, 82, 83, 85, 87, 92, 123, 131, 134, 142, 147, 148, 149, 150, 156, 166, 181, 188, 193, 195, 196, 197, 199, 202, 203, 204, 207, 208, 209, 210, 211, 212, 216, 217, 218, 222, 223, 227, 231, 233, 235, 236, 239, 240, 241, 244], "create_mirror": [72, 81, 98, 212], "relat": [72, 83, 173, 197, 202, 213, 222, 231, 240], "create_mirror_view": [72, 180, 181, 204, 212, 216, 242], "cudaspac": [72, 87, 88, 94, 188, 204, 212, 216, 222, 242], "primari": [72, 84, 95, 196, 197, 203, 227, 231, 233, 234, 235], "cudauvmspac": [72, 87, 88, 94, 204, 212, 213, 216], "unifi": [72, 87, 139, 206, 221], "page": [72, 95, 123, 131, 139, 151, 197, 212, 214, 215, 217, 221, 222, 229], "migrat": [72, 139, 222, 241], "alloc": [72, 74, 75, 76, 77, 81, 82, 87, 93, 95, 98, 127, 128, 129, 130, 131, 139, 156, 165, 180, 182, 183, 184, 186, 188, 189, 195, 197, 202, 205, 206, 207, 209, 210, 212, 213, 218, 222, 240, 241, 242, 243], "cudahostpinnedspac": [72, 94, 188, 212], "memrori": 72, "pin": [72, 139, 197], "gpu": [72, 76, 88, 92, 133, 139, 180, 188, 197, 202, 203, 204, 205, 207, 209, 210, 212, 213, 216, 222, 226, 231, 235, 240, 241, 243], "executionpolici": [72, 96, 148, 149, 150], "concept": [72, 83, 95, 96, 109, 123, 131, 139, 149, 151, 155, 182, 183, 184, 196, 198, 201, 202, 205, 207, 209, 214, 216, 247], "hpx": [72, 85, 87, 88, 94, 203, 216, 220, 221], "system": [72, 87, 95, 131, 139, 174, 196, 202, 203, 207, 209, 212, 213, 214, 223, 226, 231, 234, 235, 244], "mechan": [72, 87, 138, 151, 163, 202, 204, 205, 209, 212, 222, 223], "initargu": [72, 133, 134, 136, 216], "programmat": [72, 132, 133, 136], "how": [72, 76, 85, 123, 131, 139, 151, 152, 188, 195, 196, 197, 198, 202, 203, 204, 205, 207, 208, 209, 210, 213, 217, 219, 222, 228, 240], "initializationset": [72, 132, 134, 136, 171, 174, 175, 203, 216], "is_array_layout": [72, 87, 216], "trait": [72, 75, 76, 77, 83, 84, 89, 93, 131, 141, 142, 179, 188, 202, 222, 228, 243], "detect": [72, 83, 96, 143, 182, 183, 184, 213, 218], "model": [72, 93, 95, 96, 157, 158, 159, 160, 161, 162, 182, 183, 184, 197, 204, 205, 208, 210, 212, 214, 221, 225, 240], "layout": [72, 75, 76, 77, 78, 79, 96, 98, 180, 182, 183, 184, 185, 186, 204, 205, 207, 211], "is_execution_polici": [72, 216], "is_execution_spac": [72, 87, 131, 216], "is_memory_spac": [72, 87, 139, 216], "memoryspac": [72, 76, 93, 96, 128, 129, 130, 131, 139, 188, 212, 243], "is_memory_trait": [72, 216], "memorytrait": [72, 75, 76, 87, 96, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 188, 195, 202, 212, 216, 243], "is_reduc": [72, 216], "is_spac": [72, 131, 216], "fortran": [72, 76, 98, 182, 188, 197, 211, 212, 227, 236, 247], "arbitrari": [72, 76, 85, 98, 184, 188, 198, 201, 202, 209, 211, 212], "stride": [72, 75, 76, 77, 79, 98, 184, 204, 211, 238], "kokkos_fre": [72, 127, 129, 130, 204, 206, 241], "delloc": 72, "previous": [72, 101, 103, 105, 108, 127, 128, 130, 139, 188, 197, 198, 209, 246], "kokkos_malloc": [72, 127, 128, 130, 204, 206, 241], "kokkos_realloc": [72, 127, 128, 129, 204], "expand": [72, 95, 127, 208], "block": [72, 95, 127, 129, 147, 165, 197, 202, 204, 205, 211, 231, 242], "land": [72, 109, 110, 111, 113, 123, 199, 202, 221, 235], "built": [72, 76, 83, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 188, 197, 198, 201, 202, 203, 212, 221, 235], "lor": [72, 109, 123, 199, 202], "maxloc": [72, 109, 120, 123, 126, 199, 202], "index": [72, 74, 76, 77, 78, 81, 82, 109, 115, 117, 118, 119, 120, 124, 126, 131, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 182, 183, 187, 188, 194, 195, 199, 202, 204, 206, 208, 211], "u": [72, 166, 192, 194, 197, 223, 228], "mdrangepolici": [72, 76, 85, 87, 117, 148, 149, 188, 216, 228, 236, 247], "multidimension": [72, 76, 83, 85, 98, 152, 182, 183, 184, 188, 199, 202, 204, 211, 225, 239], "min": [72, 104, 107, 109, 115, 117, 118, 119, 120, 121, 123, 124, 126, 143, 149, 173, 195, 199, 202, 216, 246], "minloc": [72, 109, 120, 123, 199, 202], "minmax": [72, 109, 121, 123, 173, 198, 199, 202, 216], "minmaxloc": [72, 109, 120, 123, 199, 202], "openmptarget": [72, 87, 88, 94, 197, 203], "targetoffload": 72, "analogu": 72, "bulk": [72, 209], "item": [72, 85, 131, 150, 156, 202, 207, 222, 231, 240, 244], "parallelfortag": [72, 90, 156], "tag": [72, 76, 85, 87, 144, 145, 146, 149, 156, 182, 183, 184, 188, 201, 202, 210, 231, 233, 236, 240], "team_siz": [72, 155, 156, 202], "contribut": [72, 79, 149, 150, 195, 199, 202, 220, 223, 232, 237, 242], "parallelreducetag": [72, 90, 156], "parallel_scan": [72, 90, 138, 146, 147, 162, 202, 208, 209, 240, 241], "simpl": [72, 123, 131, 178, 195, 199, 202, 204, 207, 208, 209, 210, 211, 212, 213, 238, 239, 240, 244], "pre": [72, 88, 150, 165, 192, 193, 197, 221, 231, 237], "postfix": [72, 209], "depend": [72, 85, 88, 95, 138, 139, 156, 157, 161, 169, 195, 196, 197, 198, 202, 206, 207, 208, 209, 210, 213, 239, 241, 242], "parallelscantag": [72, 90], "partition_spac": [72, 94], "split": [72, 85, 138, 153, 157, 158, 159, 160, 161, 162, 165, 202, 208, 245], "exist": [72, 75, 81, 84, 87, 88, 147, 149, 155, 165, 181, 185, 186, 196, 197, 207, 209, 210, 211, 212, 216, 217, 218, 231, 232, 235, 240], "multipl": [72, 87, 88, 95, 109, 149, 150, 195, 197, 202, 204, 207, 208, 210, 212, 213, 218, 220, 221, 231, 234, 235, 240, 244], "perteam": [72, 155, 156, 157, 158, 159, 160, 162, 199, 202], "singl": [72, 95, 149, 153, 154, 157, 158, 159, 160, 162, 192, 193, 199, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 218, 239], "construct": [72, 74, 75, 76, 77, 79, 81, 82, 86, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 133, 136, 138, 139, 163, 178, 182, 183, 184, 185, 186, 188, 189, 194, 198, 202, 204, 206, 207, 208, 210, 211, 216], "per": [72, 95, 152, 156, 199, 202, 204, 208, 209, 211, 212, 221, 237, 240, 243], "perthread": [72, 156, 162, 202], "prod": [72, 109, 123, 199, 202], "rangepolici": [72, 85, 87, 131, 148, 149, 150, 151, 165, 202, 204, 208, 212, 216, 242, 244], "1d": [72, 76, 148, 149, 150, 154, 156, 188, 204, 212, 238], "realloc": [72, 75, 79, 98, 130, 186, 212], "maintain": [72, 87, 196, 218, 219, 234], "reducerconcept": [72, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 201], "cpu": [72, 88, 131, 139, 180, 195, 197, 202, 203, 209, 210, 216, 222, 227, 233, 235], "sequentialhostinit": [72, 189, 212], "view_alloc": [72, 75, 76, 79, 98, 180, 185, 186, 188, 212], "aggreg": [72, 86, 202, 221], "spaceaccess": [72, 93, 131, 139, 180, 181, 212, 216], "facil": [72, 89, 98, 140, 143, 180, 190, 221, 231, 234], "queri": [72, 75, 133, 155, 156, 203, 212, 216], "rule": [72, 77, 196], "multi": [72, 76, 148, 149, 188, 199, 205, 213], "dimension": [72, 76, 148, 149, 188, 211, 212], "arrai": [72, 75, 76, 77, 78, 79, 80, 81, 82, 95, 98, 134, 136, 149, 152, 177, 182, 183, 184, 188, 195, 199, 200, 201, 202, 204, 211, 216, 225, 235, 236, 237, 240], "crate": [72, 235], "slice": [72, 98, 179, 243, 247], "teamthreadmdrang": [72, 85], "teamvectormdrang": [72, 85, 161], "teamvectorrang": [72, 85, 161, 162], "threadvectormdrang": [72, 85], "timer": [72, 97, 147], "basic": [72, 76, 87, 142, 151, 188, 197, 204, 205, 213, 214, 241], "like": [72, 75, 76, 87, 88, 95, 98, 131, 139, 148, 151, 181, 188, 195, 196, 197, 201, 203, 205, 206, 207, 208, 210, 211, 212, 213, 218, 222, 231, 237, 244], "act": [72, 87, 205, 211, 223], "withoutiniti": [72, 180, 185, 186, 189, 212, 216], "comment": [73, 197, 218, 234], "offset": [73, 78, 202, 209, 212], "unord": [73, 81], "kokkos_bitset": 74, "safe": [74, 154, 204, 207, 208, 209, 212], "fix": [74, 81, 86, 196, 204, 212, 218, 222, 231, 232, 233, 243], "time": [74, 75, 76, 85, 87, 88, 93, 95, 131, 138, 150, 156, 178, 188, 192, 193, 195, 196, 197, 202, 207, 208, 209, 210, 211, 212, 213, 218, 221, 231, 232, 233, 235, 239, 241, 244], "paramet": [74, 75, 76, 77, 81, 85, 95, 98, 100, 101, 102, 103, 104, 105, 108, 123, 128, 129, 130, 131, 133, 134, 139, 151, 155, 157, 159, 161, 165, 189, 197, 199, 203, 208, 210, 212, 213, 216, 222, 227, 228, 235, 239, 242, 244], "constant": [74, 78, 83, 89, 131, 140, 142, 143, 168, 188, 192, 193, 208], "bit_scan_revers": 74, "1u": [74, 211], "mask": [74, 193, 194, 203, 210], "direct": [74, 142, 180, 202, 203, 210, 211, 212, 218, 222, 223, 235], "move_hint_backward": 74, "2u": 74, "hint": [74, 76, 85, 95, 138, 154, 165, 188], "bit_scan_forward_move_hint_forward": 74, "0u": 74, "scan_direct": 74, "find_any_set_near": 74, "find_any_reset_near": 74, "increas": [74, 76, 81, 87, 188, 196, 204, 212, 221], "wa": [74, 75, 81, 88, 95, 101, 102, 130, 132, 133, 134, 138, 156, 163, 176, 180, 188, 192, 193, 197, 199, 202, 203, 204, 212, 213, 216, 222, 223, 231, 233, 239, 241], "bit_scan_reverse_move_hint_forward": 74, "decreas": 74, "bit_scan_forward_move_hint_backward": 74, "bit_scan_reverse_move_hint_backward": 74, "constructor": [74, 75, 76, 77, 78, 79, 81, 82, 85, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 134, 136, 138, 148, 149, 150, 155, 156, 157, 159, 161, 170, 180, 182, 183, 184, 185, 186, 189, 200, 201, 202, 208, 211, 212, 216, 222, 228], "arg_siz": 74, "reset": [74, 75, 79, 178, 197], "clear": [74, 81, 82, 87, 196], "test": [74, 88, 101, 102, 131, 142, 147, 197, 204, 208, 212, 213, 216, 220, 221, 227, 231, 232, 233], "max_hint": 74, "happen": [74, 76, 77, 95, 101, 102, 188, 195, 202, 204, 206, 212, 231, 233, 235], "occur": [74, 92, 181, 203, 207, 213, 231, 238, 239, 241], "smaller": [74, 76, 77, 173, 187, 188, 204, 235], "find_any_unset_near": 74, "is_alloc": [74, 75, 76, 77, 79, 81, 82, 188], "rh": [74, 76, 77, 120, 121, 126, 131, 188, 192, 193, 200, 201, 228, 242], "dstdevic": 74, "srcdevic": 74, "dst": [74, 81, 87, 149, 208], "src": [74, 75, 79, 81, 87, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 131, 139, 149, 170, 180, 181, 197, 200, 201, 208, 239], "kokkos_dualview": [75, 216], "refer": [75, 76, 77, 79, 82, 87, 93, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 133, 138, 141, 142, 143, 156, 181, 187, 188, 192, 193, 194, 196, 197, 199, 201, 202, 203, 204, 205, 207, 208, 211, 213, 220, 222, 235, 244], "capabl": [75, 83, 139, 197, 202, 203, 204, 209, 210, 221, 228, 232], "well": [75, 76, 87, 93, 95, 123, 138, 147, 152, 154, 155, 164, 169, 188, 196, 197, 199, 202, 204, 205, 207, 208, 209, 211, 212, 216, 231, 233, 234, 235, 240], "flag": [75, 88, 131, 136, 188, 197, 203, 208, 213, 219, 221, 227, 233, 235], "respons": [75, 203, 204, 207, 210, 223, 232, 234], "manual": [75, 189, 197, 212, 213, 221, 233, 239], "sync": 75, "method": [75, 76, 77, 78, 79, 81, 82, 87, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 197, 201, 206, 207, 208, 210, 212, 216, 239], "synchron": [75, 82, 139, 153, 165, 181, 202, 207, 209, 242], "conveni": [75, 79, 84, 131, 163, 204, 208, 211, 221], "capac": [75, 81, 202, 207], "appropri": [75, 80, 95, 123, 197, 202, 207, 208, 209, 211, 212, 213, 218, 223, 231, 232, 235], "underli": [75, 76, 77, 78, 82, 95, 163, 165, 188, 195, 204, 205, 207, 209, 212, 243], "four": [75, 212, 221, 231, 233], "separ": [75, 87, 180, 195, 197, 203, 208, 212, 218, 223, 231, 233, 243, 244], "intend": [75, 84, 87, 89, 166, 189, 197, 202, 206, 212, 221, 226], "pleas": [75, 131, 139, 142, 143, 151, 196, 197, 206, 212, 214, 215, 222, 226, 235], "document": [75, 87, 92, 131, 139, 148, 149, 151, 192, 193, 196, 197, 206, 216, 218, 223, 231, 232, 239, 240], "suffic": 75, "most": [75, 76, 87, 95, 131, 136, 139, 140, 142, 151, 180, 184, 188, 197, 198, 199, 202, 204, 206, 207, 208, 209, 212, 213, 214, 227, 233, 235, 237, 239, 242], "m": [75, 87, 153, 154, 158, 160, 162, 188, 194, 199, 204, 211, 235, 242], "d_view": [75, 181], "execution_spac": [75, 76, 81, 87, 93, 131, 139, 154, 155, 156, 165, 181, 188, 202, 204, 208, 212, 240], "host_mirror_spac": [75, 76, 188, 216], "h_view": [75, 181], "arg1typ": [75, 82], "arg2typ": 75, "arg3typ": 75, "viewtrait": [75, 77], "data_typ": [75, 76, 77, 188, 228], "t_dev": 75, "hostmirror": [75, 76, 77, 81, 180, 188, 204, 242], "t_host": 75, "const_data_typ": [75, 76, 77, 188], "t_dev_const": 75, "t_host_const": 75, "array_layout": [75, 76, 87, 131, 181, 182, 183, 184, 185, 186, 188, 212, 228], "randomaccess": [75, 76, 188, 212], "t_dev_const_randomread": 75, "t_host_const_randomread": 75, "memoryunmanag": [75, 201, 238], "t_dev_um": 75, "unmanag": [75, 76, 79, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 184, 188, 189, 202, 204, 238, 247], "t_host_um": 75, "t_dev_const_um": 75, "t_host_const_um": 75, "t_dev_const_randomread_um": 75, "t_host_const_randomread_um": 75, "t_modified_flag": 75, "modified_flag": 75, "modified_host": 75, "modified_devic": 75, "unmodifi": 75, "n0": [75, 76, 79, 152, 157, 159, 161, 168, 179, 182, 183, 184, 185, 186, 187, 188, 211, 212, 228], "kokkos_impl_ctor_default_arg": [75, 185, 186], "n1": [75, 76, 79, 152, 157, 159, 161, 165, 168, 179, 182, 183, 184, 185, 186, 187, 188, 211, 212, 228], "n2": [75, 76, 79, 152, 157, 159, 161, 165, 179, 182, 183, 184, 185, 186, 187, 188, 212], "n3": [75, 76, 79, 157, 159, 161, 165, 182, 183, 184, 185, 186, 188, 212], "n4": [75, 76, 79, 182, 183, 184, 185, 186, 188], "n5": [75, 76, 79, 182, 183, 184, 185, 186, 188], "n6": [75, 76, 79, 182, 183, 184, 185, 186, 188], "n7": [75, 76, 79, 182, 183, 184, 185, 186, 188], "benefit": [75, 227], "nonzero": 75, "alloc_prop": [75, 79, 180, 185, 186, 188, 189], "arg_prop": [75, 79, 180, 185, 186], "avoid": [75, 129, 130, 131, 138, 196, 202, 206, 211, 212, 213, 216, 218, 221, 222, 231, 233], "specifi": [75, 76, 77, 79, 81, 82, 85, 87, 88, 93, 123, 128, 129, 131, 132, 148, 149, 152, 155, 156, 176, 179, 180, 187, 188, 197, 201, 202, 203, 204, 206, 209, 213, 221, 222, 226, 234, 235, 243], "ss": 75, "ls": [75, 155, 245], "ds": 75, "ms": [75, 131, 139], "shallow": [75, 204, 208, 212], "sd": 75, "s1": [75, 131, 139, 184], "s2": [75, 131, 139, 184], "s3": [75, 184], "arg0": 75, "arg": [75, 76, 77, 84, 134, 138, 152, 154, 156, 165, 176, 179, 187, 188, 189, 203], "d_view_": 75, "h_view_": 75, "caller": 75, "sure": [75, 150, 197, 202, 208, 212, 213, 222], "ensur": [75, 86, 135, 136, 176, 196, 197, 203, 207, 210, 212, 218, 219, 221, 231], "mark": [75, 138, 206, 208, 212, 218, 223, 231], "impl": [75, 87, 153, 156, 196, 216, 221], "if_c": 75, "is_sam": [75, 84, 93, 180, 181, 204, 211, 212], "memory_spac": [75, 76, 81, 87, 93, 128, 129, 130, 131, 139, 180, 181, 188, 189, 204, 212, 228, 241], "get_device_sid": 75, "specif": [75, 85, 87, 92, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 131, 138, 139, 147, 155, 156, 165, 181, 192, 193, 195, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 223, 231, 234, 235, 237], "afraid": [75, 218], "express": [75, 83, 87, 93, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 140, 169, 194, 197, 209, 210, 211, 213, 218, 223, 241], "That": [75, 76, 87, 88, 147, 188, 202, 203, 204, 208, 211, 212, 213, 222], "tell": [75, 95, 202, 206, 207, 208, 211, 213, 243], "what": [75, 88, 123, 131, 133, 139, 190, 192, 193, 196, 204, 207, 208, 210, 218, 228, 233, 240, 244], "els": [75, 88, 95, 102, 149, 150, 169, 212, 215, 218, 240, 245], "suppos": [75, 84, 210, 211, 240], "dual_view_typ": 75, "dv": 75, "my": [75, 87, 212], "dual": [75, 82, 221], "cudaview": 75, "host_device_typ": 75, "hostview": [75, 181], "enable_if": 75, "non_const_data_typ": [75, 76, 77, 188], "need_sync": 75, "been": [75, 87, 88, 92, 197, 202, 203, 204, 205, 207, 210, 211, 212, 218, 223, 235, 237, 244, 245], "In": [75, 76, 86, 87, 88, 93, 95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 134, 138, 140, 149, 151, 153, 158, 160, 162, 169, 181, 188, 189, 190, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 221, 223, 226, 231, 234, 235, 237, 238, 239, 240, 242, 244], "discard": [75, 79], "modif": [75, 205, 223, 242], "doesn": [75, 147, 149, 150, 180, 197, 202, 208, 213, 216, 218, 222], "know": [75, 196, 197, 198, 204, 206, 211, 213, 219], "whether": [75, 76, 77, 82, 87, 88, 101, 131, 133, 139, 151, 156, 188, 189, 199, 206, 207, 208, 211, 212, 221, 223, 228, 231, 232, 234, 240, 245], "inlin": [75, 77, 81, 84, 138, 156, 202, 204, 208, 216], "clear_sync_st": 75, "With": [75, 76, 79, 86, 87, 188, 197, 202, 207, 221, 222, 241], "referenc": [75, 76, 77, 79, 100, 101, 103, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 187, 188, 204, 212, 231], "address": [75, 76, 79, 100, 101, 102, 103, 104, 105, 106, 107, 108, 141, 188, 192, 194, 196, 197, 202, 205, 207, 209, 218, 222, 231, 235], "null": [75, 76, 77, 79, 82, 128, 130, 134, 136, 188], "pointer": [75, 76, 77, 79, 81, 82, 95, 128, 129, 130, 131, 134, 136, 155, 180, 184, 185, 186, 188, 189, 195, 204, 206, 208, 210, 216, 222, 240, 244], "span": [75, 76, 77, 82, 188], "span_is_contigu": [75, 76, 77, 181, 188], "contigu": [75, 76, 77, 85, 181, 182, 183, 188, 192, 211, 212, 240, 243], "ityp": [75, 76, 77, 158, 160, 162, 187, 188], "stride_": 75, "is_integr": [75, 158, 160, 162, 187], "r": [75, 181, 187, 188, 210, 214, 223, 228, 239, 242], "extent_int": [75, 76, 77, 188], "integr": [75, 76, 77, 88, 140, 143, 187, 188, 231, 233, 235], "kokkos_dynrankview": [76, 216], "potenti": [76, 77, 81, 88, 95, 139, 148, 149, 153, 155, 181, 188, 195, 201, 202, 205, 207, 208, 213, 221, 244], "compil": [76, 85, 87, 88, 93, 131, 138, 140, 142, 181, 188, 192, 193, 195, 196, 202, 204, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 221, 222, 223, 225, 226, 231, 234, 239, 240, 243, 244, 246], "Its": [76, 188, 204], "shared_ptr": [76, 188], "upper": [76, 152, 203, 212], "bound": [76, 77, 81, 85, 88, 202, 204, 212, 221, 235, 238], "layouttyp": [76, 77, 188], "fundament": [76, 84, 85, 95, 131, 139, 151, 188, 192, 193, 194, 205, 207, 209, 231, 240], "mandatori": [76, 134, 204], "scalartyp": [76, 188, 200, 201], "storag": [76, 80, 109, 128, 129, 130, 156, 184, 188, 207, 209, 210, 243], "come": [76, 87, 188, 195, 197, 205, 206, 208, 209, 211, 212, 213, 231, 239, 241, 244], "some": [76, 95, 129, 131, 138, 140, 141, 147, 155, 156, 157, 158, 159, 160, 165, 177, 184, 188, 197, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 222, 228, 231, 235, 237, 239, 240, 242, 244], "ones": [76, 132, 188, 196, 202, 207, 218, 244], "right": [76, 140, 152, 188, 203, 207, 208, 210, 211, 212, 218, 223, 229, 239], "left": [76, 95, 140, 152, 188, 203, 211, 212, 218, 228, 239], "laid": [76, 188, 204], "out": [76, 86, 135, 182, 183, 184, 188, 196, 197, 204, 206, 208, 210, 212, 223, 233, 239], "control": [76, 128, 129, 130, 136, 155, 163, 164, 188, 197, 202, 207, 208, 209, 210, 212, 213, 221, 222, 223, 235, 243], "finer": 76, "grain": [76, 212], "manner": [76, 92, 188], "trigger": [76, 139, 188], "textur": [76, 188, 212], "fetch": [76, 188, 212, 235], "restrict": [76, 77, 153, 185, 186, 187, 188, 204, 207, 208, 209, 212, 213, 221, 223, 235], "There": [76, 81, 87, 95, 131, 136, 139, 151, 165, 188, 190, 195, 196, 197, 204, 209, 210, 213, 231, 233, 239, 240, 242], "alias": [76, 81, 155, 188, 196, 203, 212], "scope": [76, 86, 135, 136, 163, 164, 188, 196, 206, 208, 209, 212, 222, 244], "enforc": [76, 138, 188, 202, 210, 213], "variabl": [76, 77, 79, 84, 104, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 148, 149, 155, 182, 183, 196, 197, 198, 199, 202, 208, 213, 218, 221, 222, 226, 228, 235, 242], "rank_dynam": [76, 188], "reference_type_is_lvalue_refer": [76, 77, 188], "lvalu": [76, 77, 188, 212], "scalar_array_typ": [76, 188], "properli": [76, 92, 163, 164, 188, 218, 222, 235], "specialis": [76, 188, 212], "sacado": [76, 188], "fad": [76, 188], "const_scalar_array_typ": [76, 188], "non_const_scalar_array_typ": [76, 188], "strip": [76, 188], "const_value_typ": [76, 188], "non_const_value_typ": [76, 149, 181, 188], "certain": [76, 87, 88, 131, 139, 151, 181, 188, 195, 197, 204, 206, 209, 213, 223], "compound": [76, 188], "memory_trait": [76, 188], "non_const_typ": [76, 77, 188], "const_typ": [76, 77, 188], "handl": [76, 77, 81, 95, 148, 149, 150, 153, 155, 158, 160, 162, 188, 202, 204, 206, 208, 210, 212, 218, 222, 240], "reference_typ": [76, 77, 188], "pointer_typ": [76, 77, 188], "size_typ": [76, 81, 82, 85, 87, 131, 188, 208, 212, 240], "partial": [76, 87, 149, 150, 188, 195, 208], "No": [76, 77, 172, 188], "made": [76, 77, 87, 188, 204, 207, 213, 216, 223, 231], "nullptr": [76, 134], "dt": [76, 79, 81, 188], "prop": [76, 188], "rt": [76, 77, 79], "rp": [76, 77, 79], "inttyp": [76, 77, 188, 216], "is_regular": [76, 188], "standard": [76, 77, 81, 83, 87, 89, 92, 140, 142, 143, 169, 173, 188, 196, 197, 205, 206, 208, 210, 215, 216, 221, 231, 234], "profil": [76, 77, 129, 147, 148, 149, 150, 188, 220, 247], "allocproperti": 76, "ptr": [76, 87, 100, 101, 102, 103, 105, 108, 128, 130, 139, 184, 188, 212], "wrap": [76, 188, 189, 197, 204, 212], "required_allocation_s": [76, 188], "nr": [76, 188], "wrapper": [76, 156, 163, 164, 188, 197, 213, 222], "TO": [76, 223], "BE": [76, 223], "scratchspac": [76, 188, 202], "sizeof": [76, 138, 165, 179, 187, 188, 202, 204, 206, 212, 241], "typic": [76, 139, 188, 195, 197, 202, 203, 204, 206, 208, 212, 221, 226, 235, 237, 240], "team_handl": [76, 153, 155, 158, 160, 162, 188], "i0": [76, 77, 148, 149, 157, 159, 161, 187, 188, 228], "i1": [76, 157, 159, 161, 187, 188, 228], "i2": [76, 157, 159, 161, 187, 188], "i3": [76, 157, 159, 161, 188], "i4": [76, 188], "i5": [76, 188], "i6": [76, 188], "beyond": [76, 87, 155, 188, 197, 207, 213, 239], "kokkos_debug": [76, 188, 197], "dim": [76, 77, 79, 188, 238], "architectur": [76, 77, 83, 188, 192, 193, 195, 197, 202, 205, 207, 209, 212, 213, 220, 226, 235, 239, 242, 243], "effici": [76, 77, 81, 188, 205, 211, 212], "cast": [76, 77, 188, 206, 212], "stride_0": [76, 77, 188], "stride_1": [76, 77, 188], "stride_2": [76, 77, 188], "stride_3": [76, 77, 188], "stride_4": [76, 77, 188], "stride_5": [76, 77, 188], "stride_6": [76, 77, 188], "stride_7": [76, 77, 188], "lowest": [76, 129, 143, 188], "highest": [76, 131, 188, 203, 205, 231], "due": [76, 138, 188, 204, 205, 206, 210, 212, 216, 222], "pad": [76, 180, 188, 189, 207, 209, 210, 212], "belong": [76, 188], "n8": [76, 188], "byte": [76, 129, 130, 139, 140, 156, 188, 212], "use_count": [76, 77, 188], "aim": [76, 188, 212, 231], "legal": [76, 78, 153, 155, 157, 158, 159, 160, 169, 188, 202, 208, 209, 212, 223], "intercept": [76, 188], "illeg": [76, 188, 202, 212, 222], "dsttype": [76, 188], "srctype": [76, 188], "dst_view": [76, 188], "src_view": [76, 188], "scrtype": 76, "met": [76, 188, 232, 234], "is_const": [76, 188], "memoryspaceaccess": [76, 87, 188], "furthermor": [76, 188, 195, 202, 204, 208, 209, 212, 227, 231, 232, 241], "neither": [76, 148, 149, 150, 188, 210], "nor": [76, 148, 149, 150, 188, 210, 221], "k": [76, 87, 95, 117, 131, 153, 154, 159, 162, 181, 188, 202, 211, 212], "hold": [76, 81, 163, 188, 206, 212, 222, 223, 244], "cstdio": [76, 148, 149, 150, 181, 188, 192, 193, 194, 228], "atoi": [76, 123, 148, 149, 150, 181, 188, 228], "inita": [76, 188, 228], "initb": [76, 188, 228], "const_a": [76, 188, 228], "const_b": [76, 188, 228], "setc": [76, 188, 228], "kokkos_dynamicview": 77, "parent": [77, 138, 211, 245], "array_typ": [77, 200, 201], "arg_label": 77, "min_chunk_s": 77, "max_ext": 77, "chunk": [77, 87, 139, 154, 156, 202, 208, 241], "rais": [77, 205, 216, 221], "nearest": [77, 142], "power": [77, 140, 142, 204, 205, 221, 223, 233, 235], "resize_seri": 77, "reserv": [77, 82, 203, 208, 212], "amount": [77, 87, 131, 195, 202, 208, 209, 218], "suffici": [77, 196, 208, 212, 237], "chunk_siz": [77, 87, 154, 156, 216], "outsid": [77, 95, 197, 202, 204, 207, 212, 218, 233, 246], "allocation_ext": 77, "noexcept": [77, 155, 171, 174, 175, 177, 228], "multipli": [77, 104, 107, 122, 170, 202], "alwai": [77, 87, 95, 101, 180, 192, 193, 202, 210, 212, 216, 221, 241], "until": [77, 86, 87, 88, 95, 134, 136, 155, 188, 195, 210, 221, 231, 241, 242, 245], "greater": [77, 133, 140, 152, 154, 173, 212], "initializedata": 77, "kokkos_offsetview": [78, 216], "min0": 78, "max0": 78, "min1": 78, "max1": 78, "min2": 78, "max2": 78, "somelabel": 78, "sinc": [78, 82, 87, 88, 95, 100, 102, 131, 132, 134, 136, 138, 139, 140, 141, 142, 143, 164, 167, 169, 171, 173, 174, 175, 176, 177, 178, 181, 188, 189, 195, 196, 197, 202, 204, 205, 206, 208, 210, 211, 212, 221, 228, 241, 244, 245], "ov": 78, "initializer_list": [78, 152], "instead": [78, 81, 100, 102, 131, 132, 133, 138, 139, 142, 167, 188, 202, 203, 208, 210, 212, 222, 228], "obtain": [78, 101, 103, 105, 108, 202, 204, 212, 235, 240], "begin0": 78, "end0": 78, "exactli": [78, 87, 139, 210, 212], "drop": [78, 134, 197, 204], "slicem": 78, "offsettoslic": 78, "30": 78, "offsetsubview": 78, "make_pair": [78, 166, 211], "21": [78, 197, 222, 227], "assert_eq": 78, "deep": [78, 93, 139, 181, 204, 221, 242], "sens": [78, 151, 206, 207, 210, 212, 218], "similarli": [78, 95, 206, 218], "kokkos_scatterview": [79, 216], "original_view_typ": 79, "original_value_typ": 79, "original_reference_typ": 79, "data_type_info": 79, "duplicateddatatyp": 79, "newli": [79, 129, 130, 165, 218], "internal_data_typ": 79, "internal_view_typ": 79, "internal_view": 79, "variad": 79, "pack": [79, 240], "exec_spac": [79, 181, 189], "scatteraccess": 79, "accumul": [79, 207, 208, 245], "contribute_into": 79, "reset_except": 79, "tbd": 79, "free": [79, 81, 83, 138, 139, 142, 150, 203, 206, 207, 212, 214, 223, 228, 242], "dt1": 79, "vp": 79, "dt2": 79, "ly": 79, "es": 79, "ct": 79, "dp": 79, "foo": [79, 138, 148, 149, 165, 188, 206, 208, 212, 228], "bar": [79, 138, 206, 228], "input_i": 79, "result_i": 79, "kokkos_staticcrsgraph": [80, 216], "simplifi": [80, 200], "manipul": [80, 89, 129, 130, 142, 188], "staticcrsgraphtyp": 80, "row_map": 80, "kokkos_unorderedmap": [81, 216], "design": [81, 82, 87, 95, 197, 204, 205, 207, 210, 218, 220, 223, 231, 234, 235, 240, 242, 244, 245], "ten": [81, 202], "thousand": [81, 240], "consequ": [81, 202, 208, 210], "significantli": [81, 195], "unordered_map": 81, "fail": [81, 129, 181, 206, 210, 212, 222, 233, 235, 244, 246], "exceed": 81, "rehash": 81, "would": [81, 84, 87, 95, 147, 165, 177, 181, 195, 197, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 216, 218, 222, 231, 237, 239, 244], "cach": [81, 139, 156, 195, 197, 202, 204, 207, 209, 212], "friendli": [81, 83, 84, 143, 212, 243], "pod": [81, 149, 150, 202], "plain": [81, 138, 192, 193, 212], "trivial": [81, 95, 164, 206, 212, 222], "copyabl": [81, 163, 164, 222], "capacity_hint": 81, "enough": [81, 87, 231, 233, 239], "requested_capac": 81, "lower": [81, 202], "o": [81, 197, 207], "unorderedmapinsertresult": 81, "invalid_index": 81, "valid_at": 81, "Is": [81, 218], "key_at": 81, "value_at": 81, "hashmap": 81, "create_copy_view": 81, "skei": 81, "svalu": 81, "sdevic": 81, "hasher": 81, "equalto": 81, "allocate_view": 81, "deep_copy_view": 81, "dkei": 81, "ddevic": 81, "st": [81, 245], "success": [81, 129, 130, 235], "successfulli": [81, 232], "present": [81, 87, 133, 194, 196, 203, 207, 231, 235], "did": [81, 199, 218], "valuetypeview": 81, "valuesidxtyp": 81, "lookup": [81, 206], "duplic": [81, 87, 210, 216, 218], "togeth": [81, 87, 208, 209, 218, 240], "report": [81, 131, 222, 231, 234, 235], "impli": [81, 147, 154, 165, 212, 223], "exhaust": 81, "restart": 81, "map_op_typ": 81, "value_view_typ": 81, "noop_typ": 81, "OR": [81, 111, 113, 223], "atomic_add_typ": 81, "atomic_add": [81, 106, 195], "pattern": [81, 85, 87, 93, 123, 131, 151, 153, 154, 195, 202, 212, 214, 239, 247], "umap": 81, "kokkos_vector": [82, 216], "overcom": [82, 95], "issu": [82, 83, 134, 141, 142, 155, 181, 188, 197, 202, 204, 207, 208, 210, 212, 215, 216, 218, 220, 221, 223, 227, 230, 233, 234, 235], "reli": [82, 188, 207, 210, 231], "heavili": [82, 197, 213], "grant": [82, 223], "mani": [82, 87, 88, 95, 131, 196, 197, 205, 206, 207, 208, 209, 210, 212, 213, 218, 221, 235, 243, 244], "limit": [82, 87, 95, 138, 143, 152, 156, 194, 196, 197, 202, 205, 206, 207, 210, 212, 216, 219, 222, 223, 227, 233, 234, 245], "below": [82, 87, 92, 95, 123, 133, 134, 140, 142, 143, 148, 149, 180, 188, 197, 200, 212, 213, 218, 221, 223, 226, 231, 235, 241], "synopsi": [82, 142], "push_back": 82, "const_point": 82, "const_refer": 82, "const_iter": 82, "accessor": [82, 188], "pop_back": 82, "max_siz": 82, "front": [82, 202], "back": [82, 88, 95, 195, 197, 202, 207, 209, 242], "lower_bound": 82, "theend": 82, "comp_val": 82, "device_to_host": 82, "host_to_devic": 82, "on_host": 82, "perspect": [82, 87, 190, 207], "on_devic": 82, "set_overalloc": 82, "extra": [82, 87, 88, 95, 129, 131, 210, 212, 216, 221], "buffer": [82, 139, 202, 240], "dispatch": [83, 85, 95, 138, 147, 148, 149, 150, 151, 156, 161, 162, 165, 202, 204, 207, 221, 225, 239, 244, 247], "task": [83, 85, 195, 207, 209, 216, 231, 236, 247], "common": [83, 86, 87, 89, 131, 139, 141, 143, 151, 156, 180, 181, 186, 197, 198, 199, 202, 204, 208, 209, 210, 213, 223, 240], "mathemat": [83, 89, 142, 143, 210, 235], "style": [83, 136, 163, 197, 213, 218, 228, 234], "port": [83, 206, 209, 212], "hardwar": [83, 139, 165, 195, 197, 202, 203, 205, 207, 208, 209, 221, 222, 231, 234, 235], "idiom": [83, 95], "recogn": [83, 84, 136, 190, 202, 203, 204, 210, 213], "sfina": [83, 84, 143], "macro": [83, 92, 148, 169, 197, 204, 206, 208, 212, 235, 246], "etc": [83, 138, 139, 155, 196, 197, 212, 218, 226], "kokkos_detectionidiom": [84, 216], "extens": [84, 138, 172, 197, 214, 220, 231, 234, 235], "iso": [84, 87, 192, 193, 194, 210, 212, 218], "iec": 84, "ts": [84, 155, 245], "19568": 84, "2017": [84, 233], "draft": [84, 87, 218, 231], "cplusplu": 84, "github": [84, 197, 206, 215, 220, 226, 231, 232, 233, 234], "io": 84, "v2": [84, 93, 221, 223, 235], "html": [84, 142, 165], "meta": [84, 197], "origin": [84, 103, 104, 106, 107, 130, 165, 195, 210, 211, 212, 214, 223, 233, 235, 244], "propos": [84, 192, 193, 194, 210, 218, 220, 231, 234], "www": [84, 214, 223], "open": [84, 142, 152, 154, 156, 204, 215, 220, 232, 235], "jtc1": 84, "sc22": 84, "wg21": 84, "doc": [84, 142], "paper": [84, 214], "2015": 84, "n4436": 84, "pdf": 84, "void_t": 84, "detector": 84, "exposit": 84, "metafunct": 84, "leverag": [84, 197, 213, 231], "archetyp": [84, 87], "alwaysvoid": 84, "value_t": 84, "false_typ": [84, 143], "true_typ": [84, 143, 222], "simplif": [84, 87], "detected_t": 84, "nonesuch": 84, "delet": [84, 134, 163, 184, 206, 212, 231], "is_detect": 84, "alia": [84, 131, 139, 179, 192, 193, 194, 211, 212, 241], "detected_or_t": 84, "is_detected_exact": 84, "expect": [84, 95, 101, 102, 123, 193, 196, 202, 204, 205, 208, 210, 211, 213, 231, 232], "is_detected_convert": 84, "is_convert": 84, "later": [84, 131, 188, 196, 199, 208, 210, 212, 222], "is_detected_v": 84, "is_detected_exact_v": 84, "is_detected_convertible_v": 84, "helper": [84, 88], "copy_assign_t": 84, "declval": [84, 211], "Then": [84, 197, 211, 212, 213], "easili": [84, 212, 245], "is_copy_assign": 84, "is_canonical_copy_assign": 84, "mytyp": 84, "ptrdiff_t": [84, 139, 187, 212], "diff_t": 84, "declar": [84, 142, 149, 196, 203, 206, 208, 212, 222], "our": [84, 206, 207, 209, 235, 238], "our_difference_typ": 84, "executionpolicyconcept": 85, "abstract": [85, 87, 95, 123, 131, 139, 151, 192, 193, 202, 205, 209, 210, 220], "place": [85, 87, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 130, 131, 139, 150, 151, 189, 202, 203, 204, 208, 209, 210, 218, 223, 233, 235, 240], "nestedpolici": 85, "summari": [85, 233, 235], "setter": 85, "hip": [85, 87, 88, 94, 138, 139, 165, 181, 197, 203, 206, 208, 216, 220, 221, 234, 235], "sycl": [85, 87, 88, 94, 138, 139, 142, 154, 165, 197, 203, 206, 220, 221, 227], "schedul": [85, 87, 154, 156, 202, 245], "through": [85, 95, 148, 149, 150, 155, 195, 197, 199, 202, 203, 205, 206, 207, 208, 210, 211, 212, 214, 215, 218, 222, 223, 231, 235, 237, 240], "steal": 85, "queue": [85, 165, 231, 245], "machin": [85, 197, 205, 209, 210, 213, 221, 225, 226, 233, 235], "backend": [85, 86, 87, 133, 137, 138, 139, 142, 152, 154, 157, 159, 161, 165, 171, 174, 176, 196, 197, 203, 204, 206, 208, 213, 218, 220, 226, 227, 233, 234, 241, 242], "indextyp": [85, 87, 153, 154, 156, 202], "travers": 85, "executionspaceconcept": [85, 94, 147, 180], "affect": [85, 88, 176, 197, 212, 227], "launchbound": [85, 87], "maxthread": 85, "minblock": 85, "launch": [85, 93, 95, 147, 155, 156, 202, 212, 218, 222, 235, 242, 244, 245], "worktag": [85, 149, 150, 201, 216], "someclass": 85, "detail": [86, 87, 91, 92, 93, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 131, 134, 139, 143, 148, 168, 187, 196, 197, 198, 201, 205, 208, 212, 213, 218, 221, 222, 226, 231, 232, 235], "shutdown": 86, "resourc": [86, 135, 137, 139, 154, 165, 202, 203, 206, 207, 208, 209, 220, 234, 242, 245], "destruct": [86, 87, 163, 164, 189, 206, 212], "thu": [86, 149, 153, 155, 188, 194, 197, 202, 203, 204, 206, 209, 212, 222, 231, 233, 241, 242, 245, 246], "context": [86, 87, 95, 135, 136, 157, 158, 159, 160, 161, 162, 188, 206, 222, 238, 239, 242], "automat": [86, 123, 133, 139, 197, 203, 204, 208, 210, 212, 221, 226, 234, 239, 241], "aid": 86, "mistak": 86, "live": [86, 212, 231], "my_view": [86, 134, 135, 136, 182, 183], "destructor": [86, 134, 135, 136, 155, 189, 206, 212, 228], "switch": [86, 195, 204, 233], "subsequ": [86, 95, 136, 156, 223, 240], "driven": [87, 231], "essenti": [87, 210, 235], "incept": 87, "recent": [87, 233], "readili": 87, "fact": [87, 222, 244], "hasn": 87, "realli": [87, 134, 197, 213, 218], "even": [87, 95, 130, 131, 135, 138, 139, 149, 196, 197, 201, 204, 207, 209, 211, 212, 218, 223, 237, 240, 244, 246], "agre": [87, 223, 232], "merg": [87, 218, 231, 233, 234, 235], "languag": [87, 88, 92, 131, 139, 151, 196, 205, 207, 208, 210, 211, 212, 213, 214, 238], "featur": [87, 88, 131, 139, 151, 172, 196, 197, 202, 203, 204, 208, 210, 212, 213, 215, 218, 221, 231, 232, 233, 235], "formal": [87, 93, 131, 139, 151, 190, 207], "rapid": [87, 221], "expans": 87, "demand": [87, 241], "lack": [87, 208, 209], "harden": 87, "acut": 87, "ever": [87, 131, 139, 150, 151, 202, 212], "project": [87, 88, 196, 197, 207, 213, 215, 226, 230, 232, 234, 235], "horizon": 87, "resili": [87, 220], "few": [87, 95, 131, 174, 197, 202, 212, 235], "best": [87, 192, 193, 196, 203, 212, 218, 222, 242, 245], "core": [87, 88, 195, 197, 202, 203, 205, 207, 209, 215, 218, 220, 226, 231, 234, 235, 243], "addition": [87, 93, 131, 180, 188, 199, 212], "promot": [87, 131, 139, 141, 231, 235], "plan": [87, 95, 220], "good": [87, 95, 131, 195, 196, 202, 206, 208, 209, 212, 215, 223, 243, 244], "holist": 87, "interact": [87, 166, 197, 232, 241, 244], "addit": [87, 95, 131, 142, 181, 198, 203, 205, 206, 207, 208, 210, 212, 223, 226, 231, 239, 244], "experi": [87, 205, 209, 212, 235], "garner": 87, "year": [87, 196, 214, 231, 232, 233], "particip": [87, 177, 211, 231, 234], "executor": 87, "effort": [87, 196, 197, 212, 220, 231, 235], "2011": [87, 207, 208], "sutton": 87, "stroustrup": 87, "guid": [87, 138, 151, 205, 208, 220, 226], "particular": [87, 120, 121, 126, 164, 189, 195, 197, 202, 203, 204, 208, 209, 212, 213, 218, 222, 223, 226, 227, 234, 235, 240, 244], "constraint": [87, 188, 202], "axiom": 87, "philosophi": 87, "focus": [87, 218], "balanc": [87, 95], "flexibl": [87, 131, 204], "eas": 87, "learn": [87, 131, 208], "far": [87, 95, 207, 212, 244], "though": [87, 139, 197, 246], "pure": [87, 204, 205, 206], "veri": [87, 95, 197, 207, 208, 210, 213, 240], "slightli": [87, 204, 218], "thing": [87, 131, 190, 196, 197, 204, 206, 207, 209, 210, 212, 218], "By": [87, 197, 202, 207, 208, 209, 210, 212], "minim": [87, 196, 199, 203, 208, 231], "cognit": 87, "perhap": 87, "import": [87, 197, 202, 204, 207, 208, 211, 212, 223, 231, 235, 239, 242], "subsumpt": 87, "hierarchi": [87, 131, 202, 209, 220], "branch": [87, 155, 157, 158, 159, 160, 202, 209, 215, 227, 231, 233, 234, 235], "width": [87, 210, 233], "roughli": [87, 202, 232], "speak": [87, 95, 206], "high": [87, 95, 156, 196, 202, 205, 209, 210, 212, 213, 214, 231], "major": [87, 88, 196, 204, 210, 212, 218, 220, 231, 234, 235], "visibl": [87, 131, 139], "minor": [87, 88, 196, 231], "memorylayout": 87, "taskschedul": [87, 95], "treat": [87, 139, 207, 208, 235], "kokkos_concept": 87, "enumer": [87, 196], "iterationpattern": 87, "question": [87, 205, 218, 223, 231, 232], "friend": [87, 95, 131], "rather": [87, 95, 131, 139, 203, 213], "alik": 87, "extern": [87, 95, 197, 212, 215, 216, 234, 247], "off": [87, 203, 207, 212, 221, 222, 245], "look": [87, 131, 203, 206, 208, 210, 211, 212, 222], "regular": [87, 95, 212, 231], "is_integral_v": 87, "scratch_memory_spac": [87, 131, 155, 202], "str": [87, 131, 203], "ostream": [87, 131], "ostr": [87, 131], "print_configur": [87, 131, 133], "ve": [87, 206, 226], "extrapol": 87, "progress": [87, 207, 209, 231, 232, 233], "eventu": [87, 196], "further": [87, 149, 197, 202, 206, 210, 212, 231, 235, 240, 245], "cannot": [87, 131, 132, 136, 140, 147, 177, 189, 203, 206, 210, 223, 231, 245], "constrain": [87, 209], "known": [87, 141, 142, 207, 211, 216, 218, 220, 221, 227, 233, 240], "decid": [87, 207, 208, 234, 235], "argu": 87, "around": [87, 184, 197, 204, 206, 212, 227, 237, 240, 242, 246], "wherebi": 87, "meet": [87, 93, 131, 153, 155, 180, 187, 218, 223, 231, 232, 234], "definit": [87, 123, 169, 190, 207, 208, 223, 239, 240, 244, 246], "practic": [87, 95, 131, 139, 142, 151, 165, 188, 205, 210, 212, 242, 244], "converg": [87, 205], "relev": [87, 104, 106, 107, 220, 231, 240], "site": [87, 235], "artifact": 87, "assess": [87, 232], "intent": [87, 196, 212, 218, 238], "expol": 87, "resulttyp": 87, "executionspaceof": 87, "executionpolicyof": 87, "impos": [87, 212], "kokkos_parallel": 87, "technic": [87, 212, 213, 222], "correct": [87, 90, 95, 134, 180, 197, 202, 206, 208, 211, 212, 218, 232, 235], "rvalu": 87, "wouldn": [87, 199], "breviti": 87, "parallelfor": 87, "parallelscan": 87, "parallelscanwithtot": 87, "red": 87, "executionspaceofreduct": 87, "kokkos_parallel_reduc": 87, "parallelreduc": 87, "closur": [87, 155, 202, 208], "implexecutionspaceof": 87, "exclud": [87, 196, 208, 223], "uniquetoken": 87, "add": [87, 123, 125, 148, 190, 195, 196, 197, 200, 202, 204, 207, 210, 212, 213, 218, 219, 221, 223, 231, 237, 244, 245], "uniquetokenexecutionspac": 87, "uniquetokenscop": 87, "itok": 87, "gtok": 87, "copyconstruct": 87, "defaultconstruct": 87, "concret": [87, 207], "teampolicyintern": [87, 216], "nice": [87, 210, 218], "could": [87, 156, 196, 199, 206, 207, 209, 211, 212, 231], "refactor": 87, "openmptargetspac": 87, "mem": [87, 192, 194], "dealloc": [87, 127, 128, 129, 130, 139, 188, 189, 204, 211, 212, 218, 243], "implmemoryspac": 87, "sharedallocationrecord": 87, "get_label": 87, "allocate_track": 87, "reallocate_track": 87, "deallocate_track": 87, "print_record": 87, "get_record": 87, "mem1": 87, "mem2": 87, "implrelatablememoryspac": 87, "deepcopi": [87, 93], "verifyexecutioncanaccessmemoryspac": 87, "verifi": [87, 226, 231, 235], "exec": [87, 154, 222], "think": [87, 95, 134, 206, 212, 237], "achiev": [87, 139, 202, 204, 212, 235, 239], "signific": [87, 140, 212, 242, 244], "dispar": 87, "teamthreadrangeboundariesstruct": [87, 153], "teamvectorrangeboundariesstruct": 87, "basicexecutionpolici": 87, "index_typ": [87, 151, 154, 156, 188], "cours": 87, "execution_polici": [87, 154, 178], "weren": 87, "mayb": 87, "chunkedexecutionpolici": 87, "set_chunk_s": [87, 154, 156, 216], "complic": [87, 206, 208, 212], "pretti": [87, 95, 131], "straightforward": [87, 180, 239, 240], "iteratetil": 87, "seem": [87, 213], "kokkos_openmp_parallel": 87, "were": [87, 88, 131, 141, 142, 143, 194, 206, 207, 235], "conceptu": [87, 243], "surfac": 87, "area": [87, 130], "Of": [87, 207, 221], "d": [87, 157, 161, 176, 184, 187, 196, 200, 201, 202, 206, 207, 208, 210, 211, 212, 223, 239], "still": [87, 88, 165, 195, 196, 199, 202, 206, 210, 212, 242], "shortcut": [87, 131, 151], "probabl": [87, 95, 202, 208, 210, 221], "teach": [87, 208], "advanc": [87, 131, 208, 235, 247], "ax": [87, 242], "me": 87, "why": [87, 203, 218, 222, 242], "mind": [87, 206, 212], "axi": 87, "extend": [87, 205], "up": [87, 95, 135, 138, 140, 182, 183, 184, 188, 196, 197, 202, 203, 208, 209, 212, 221, 222, 226, 235, 245], "overhead": [87, 95, 147, 208, 210, 212, 239], "describ": [87, 95, 123, 131, 139, 151, 152, 153, 154, 156, 192, 194, 198, 205, 206, 207, 209, 210, 214, 215, 221, 223, 228, 235, 242, 243, 245], "isn": [87, 95, 131, 206, 212, 222], "concern": [87, 205, 207, 240, 244], "simplest": [87, 202, 203, 240], "But": [87, 198, 202, 212, 244], "todo": 87, "annot": [88, 206, 223], "kokkos_vers": 88, "40201": 88, "kokkos_version_major": 88, "kokkos_version_minor": 88, "kokkos_version_patch": 88, "10000": [88, 208, 212], "patch": [88, 231], "denot": [88, 143, 156, 188], "40199": 88, "post": [88, 150, 231, 244], "iostream": [88, 137, 174], "static_assert": [88, 131, 181, 211, 222, 241], "30700": 88, "endif": [88, 169, 197, 204], "meant": 88, "kokkos_version_less": 88, "kokkos_version_less_equ": 88, "kokkos_version_great": 88, "kokkos_version_greater_equ": 88, "kokkos_version_equ": 88, "kokkos_version_": 88, "against": [88, 196, 197, 202, 213, 215, 223, 233, 234, 246], "saniti": 88, "illustr": [88, 197, 202, 212, 213, 238], "do_work": [88, 164], "rad": 88, "fall": [88, 195, 202, 205, 212, 234, 245], "bore": 88, "stuff": [88, 147, 174, 210], "kokkos_enable_debug": [88, 169, 221], "kokkos_enable_debug_bounds_check": [88, 221], "kokkos_enable_debug_dualview_modify_check": [88, 221], "kokkos_enable_deprecated_code_3": [88, 221], "kokkos_enable_deprecation_warn": [88, 221], "warn": [88, 133, 188, 196, 203, 212, 213, 216, 221, 227, 231, 233], "kokkos_enable_tun": [88, 221], "bind": [88, 203, 220, 221, 223, 238], "tune": [88, 197, 203, 213, 221, 239, 247], "2422": 88, "kokkos_enable_complex_align": 88, "align": [88, 129, 189, 192, 194, 210, 212, 216, 234, 243], "kokkos_enable_aggressive_vector": [88, 221], "assumpt": [88, 203], "ignor": [88, 95, 202, 210], "aggress": [88, 212, 221], "ifdef": [88, 204], "kokkos_enable_seri": [88, 197, 221], "kokkos_enable_openmp": [88, 197, 221], "kokkos_enable_openmptarget": [88, 221], "kokkos_enable_thread": [88, 197, 221], "kokkos_enable_cuda": [88, 197, 221], "kokkos_enable_hip": [88, 197, 221], "kokkos_enable_hpx": [88, 221], "kokkos_enable_sycl": [88, 197, 221], "kokkos_enable_cuda_constexpr": [88, 221], "kokkos_enable_cuda_lambda": [88, 221], "kokkos_enable_cuda_ldg_intrinsinc": 88, "ldg": 88, "intrins": [88, 123, 140, 192, 193, 198, 204, 210, 212, 238], "kokkos_enable_cuda_relocatable_device_cod": [88, 221], "relocat": [88, 138, 213, 221, 234], "kokkos_enable_cuda_uvm": [88, 221, 236], "kokkos_enable_hip_multiple_kernel_instanti": [88, 221], "instanti": [88, 196, 206, 207, 209, 210, 212, 221, 222], "improv": [88, 196, 205, 208, 209, 221, 223, 227, 232, 239], "kokkos_enable_hip_relocatable_device_cod": [88, 221], "latest": [88, 92, 196, 227], "path": [88, 133, 196, 197, 203, 221, 226, 231, 235, 240], "expos": [88, 131, 201, 202, 209, 218, 239], "kokkos_enable_cxx14": 88, "kokkos_enable_cxx17": 88, "kokkos_enable_cxx20": 88, "inform": [88, 123, 169, 196, 198, 203, 206, 207, 209, 212, 213, 217, 222, 223, 231, 232, 235, 237, 240, 243], "kokkos_enable_hwloc": [88, 197, 221], "libhwloc": [88, 197], "numa": 88, "kokkos_enable_libdl": [88, 221], "link": [88, 92, 188, 197, 213, 218, 220, 222, 223, 235, 239], "linker": [88, 197, 213], "libdl": [88, 197, 221], "kokkos_enable_libquadmath": 88, "gcc": [88, 197, 213, 222, 227, 233, 234], "quad": 88, "precis": [88, 197, 206, 238, 240, 244], "math": [88, 89, 210, 216, 220, 247], "kokkos_enable_onedpl": [88, 221], "onedpl": [88, 221, 222], "tpl": [88, 197, 213, 222], "kokkos_arch_armv80": [88, 221], "armv8": [88, 197, 221], "kokkos_arch_armv8_thunderx": [88, 221], "cavium": [88, 235], "thunderx": [88, 197, 235], "kokkos_arch_armv81": [88, 221], "kokkos_arch_armv8_thunderx2": [88, 221], "thunderx2": [88, 221], "kokkos_arch_amd_avx2": 88, "avx2": [88, 192], "zen": [88, 221], "kokkos_arch_amd_gfx906": [88, 221], "amd": [88, 231, 234], "mi50": [88, 221], "mi60": [88, 221], "kokkos_arch_amd_gfx908": [88, 221], "mi100": [88, 221], "kokkos_arch_amd_gfx90a": [88, 221], "mi200": [88, 221], "seri": [88, 205, 221, 235], "kokkos_arch_amd_gfx940": [88, 221], "mi300a": [88, 221], "kokkos_arch_amd_gfx942": [88, 221], "mi300x": [88, 221], "kokkos_arch_amd_gfx942_apu": [88, 221], "kokkos_arch_amd_gfx1030": [88, 221], "v620": [88, 221], "w6800": [88, 221], "kokkos_arch_amd_gfx1100": [88, 221], "7900xt": [88, 221], "kokkos_arch_amd_gfx1103": [88, 221], "phoenix": [88, 221], "apu": [88, 221], "kokkos_arch_amd_gpu": 88, "gfx90a": [88, 221], "mi250x": 88, "acceler": [88, 207, 208, 221, 235, 242, 244], "kokkos_arch_avx": 88, "avx": 88, "kokkos_arch_avx2": 88, "kokkos_arch_avx512xeon": 88, "skylak": [88, 221], "avx512": [88, 192], "kokkos_arch_knc": [88, 221], "intel": [88, 197, 202, 210, 226, 227, 231, 233, 234, 235], "knight": [88, 221, 235], "xeon": [88, 197, 221, 235], "phi": [88, 141, 197], "kokkos_arch_avx512m": 88, "mic": 88, "kokkos_arch_power8": [88, 221], "ibm": [88, 197, 227, 233], "power8": [88, 197, 221, 233], "kokkos_arch_power9": [88, 221], "power9": [88, 221], "kokkos_arch_intel_gen": [88, 221], "kokkos_arch_intel_dg1": [88, 221], "iri": [88, 221], "xemax": 88, "kokkos_arch_intel_gen9": [88, 221], "gen9": [88, 221], "kokkos_arch_intel_gen11": [88, 221], "gen11": [88, 221], "kokkos_arch_intel_gen12lp": [88, 221], "gen12lp": [88, 221], "kokkos_arch_intel_xehp": [88, 221], "xe": [88, 221], "hp": [88, 221], "kokkos_arch_intel_pvc": [88, 221], "pont": [88, 221], "vecchio": [88, 221], "kokkos_arch_intel_gpu": 88, "kokkos_arch_kepl": 88, "nvidia": [88, 197, 202, 209, 210, 222, 231, 234, 235, 240], "kepler": [88, 197, 221], "kokkos_arch_kepler30": [88, 221], "cc": [88, 197, 238], "kokkos_arch_kepler32": [88, 221], "kokkos_arch_kepler35": [88, 221], "kokkos_arch_kepler37": [88, 221], "kokkos_arch_maxwel": 88, "maxwel": [88, 197, 221], "kokkos_arch_maxwell50": [88, 221], "kokkos_arch_maxwell52": [88, 221], "kokkos_arch_maxwell53": [88, 221], "kokkos_arch_navi": 88, "navi": 88, "kokkos_arch_navi1030": 88, "gfx1030": [88, 221], "kokkos_arch_pasc": 88, "pascal": [88, 221], "kokkos_arch_pascal60": [88, 221], "kokkos_arch_pascal61": [88, 221], "kokkos_arch_volta": 88, "volta": [88, 221], "kokkos_arch_volta70": [88, 221], "kokkos_arch_volta72": [88, 221], "kokkos_arch_turing75": [88, 221], "ture": [88, 221], "kokkos_arch_amper": 88, "amper": [88, 221], "kokkos_arch_ampere80": [88, 221], "kokkos_arch_ampere86": [88, 221], "kokkos_arch_ada89": [88, 221], "ada": [88, 221], "kokkos_arch_hopp": 88, "hopper": [88, 221], "kokkos_arch_hopper90": [88, 221], "kokkos_arch_amd_zen": 88, "kokkos_arch_amd_zen2": 88, "zen2": 88, "kokkos_arch_amd_zen3": 88, "zen3": 88, "kokkos_arch_vega": 88, "vega": 88, "kokkos_arch_vega900": [88, 221], "mi25": [88, 221], "gfx900": [88, 221], "kokkos_arch_vega906": [88, 221], "gfx906": [88, 221], "kokkos_arch_vega908": [88, 221], "gfx908": [88, 221], "kokkos_arch_vega90a": [88, 221], "kokkos_mathematicalconst": [89, 141, 216], "backport": [89, 231], "sqrt2": [89, 141], "kokkos_mathematicalfunct": [89, 142, 216], "consist": [89, 142, 176, 197, 202, 207, 209, 210, 216, 218, 223, 234, 240], "portabl": [89, 131, 141, 195, 204, 205, 207, 208, 210, 214, 216, 222, 231, 238, 239, 241, 243, 247], "fab": [89, 142], "sqrt": [89, 142, 192, 194, 210, 222], "sin": [89, 141, 142, 192], "kokkos_numerictrait": [89, 143, 216], "ad": [89, 104, 106, 107, 143, 176, 194, 196, 197, 202, 203, 206, 210, 212, 213, 218, 222, 231, 245], "23": [89, 143, 188, 214, 219, 220, 227, 234], "numeric_limit": [89, 143], "kokkos_bitmanipul": [89, 140], "individu": [89, 95, 142, 143, 204, 213, 223, 235, 244], "compos": [90, 240], "team_size_max": [90, 156], "team_size_recommend": [90, 144, 145, 146, 156], "strive": [92, 210], "howev": [92, 95, 131, 165, 202, 204, 205, 206, 207, 208, 209, 210, 212, 223, 227, 235, 239], "deviat": 92, "approach": [92, 95, 195, 205, 207, 208, 210, 212, 244, 247], "section": [92, 163, 164, 197, 202, 204, 206, 207, 208, 212, 221, 223, 233, 235], "usag": [92, 94, 133, 135, 136, 138, 147, 148, 162, 166, 176, 192, 193, 194, 197, 204, 209, 211, 212, 213, 216, 218, 238], "guidanc": [92, 215], "relationship": [93, 95, 165, 202, 212], "entiti": [93, 95, 196, 207, 223], "msp1": 93, "msp2": 93, "retriev": [93, 95, 154, 199, 245], "v1": [93, 235], "word": [93, 131, 139, 151, 197, 210, 221], "shape": 93, "attribut": [93, 209, 210, 212, 216, 223], "intercessori": 93, "hipspac": [94, 216], "hiphostpinnedspac": 94, "hipmanagedspac": [94, 222], "sycldeviceusmspac": 94, "syclhostusmspac": 94, "syclsharedusmspac": 94, "sharedspac": [94, 189, 206, 212, 216, 236], "sharedhostpinnedspac": [94, 189, 241], "memoryspaceconcept": [94, 180], "lightweight": 95, "substanti": 95, "futur": [95, 205, 209, 212, 225, 231, 233, 245], "Not": [95, 212, 223], "too": [95, 147, 156, 206, 212, 218, 227], "small": [95, 136, 139, 208, 218, 245], "inher": 95, "plenti": 95, "scale": [95, 131, 197, 235], "easier": [95, 208, 215, 218, 241, 243], "hierarch": [95, 157, 158, 159, 160, 161, 162, 207, 208, 209, 225, 245, 247], "ordinari": [95, 208], "portion": [95, 210, 223], "haev": 95, "output": [95, 131, 137, 184, 195, 201, 209, 235, 239], "mytask": 95, "produc": [95, 205, 208, 210, 240, 242], "analog": [95, 176, 181], "task_spawn": [95, 216, 245], "host_spawn": [95, 216], "tasksingl": [95, 216, 245], "taskteam": [95, 148, 149, 150], "former": [95, 101, 102, 197, 208, 212, 235], "worker": [95, 149, 245], "spawn": [95, 245], "basicfutur": [95, 216, 245], "when_al": [95, 216, 245], "scheduler_typ": 95, "discuss": [95, 207, 210, 212, 218, 223, 231, 232], "fut": 95, "mytaskfunctor": 95, "readi": [95, 196, 212, 218], "earliest": 95, "fut2": 95, "myothertaskfunctor": 95, "my_funct": [95, 131], "sched": 95, "my_result_typ": 95, "my_task_result": 95, "ff": [95, 233], "better": [95, 195, 197, 202, 212, 213, 228, 242], "never": [95, 131, 196, 197, 210, 212, 213], "share": [95, 155, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 218, 220, 223, 231, 239, 240], "transit": [95, 221, 231], "undefin": [95, 129, 130, 133, 188, 204, 212, 222, 246], "worst": 95, "kind": [95, 207, 208, 211, 223, 235], "bug": [95, 131, 138, 196, 206, 218, 227, 231, 232, 233], "segfault": [95, 213], "hour": [95, 196], "is_nul": 95, "attempt": [95, 207, 221, 226], "poll": 95, "is_readi": [95, 245], "forbidden": 95, "anywher": 95, "abil": [95, 148, 207, 210, 238], "yet": [95, 130, 172, 190, 196, 205, 207, 210, 211, 231, 233], "extrem": [95, 206, 207, 212], "expens": [95, 211], "sledgehamm": 95, "sparingli": 95, "alon": [95, 197, 223], "pend": 95, "decis": [95, 202, 218, 231, 240], "piec": 95, "help": [95, 138, 200, 203, 205, 206, 208, 212, 213, 222], "cost": [95, 195, 205, 211, 212], "tradit": [95, 139], "reus": [95, 202, 244], "successor": 95, "respawn": [95, 216, 245], "future_typ": [95, 245], "got": 95, "redund": [95, 138, 216, 240], "lead": [95, 131, 196, 202, 206, 212, 213, 231, 241], "lazi": 95, "third": [95, 197, 202, 204, 207, 211, 213, 222, 223, 231, 239], "serv": [95, 131, 231], "observ": [95, 147, 206], "effect": [95, 131, 147, 188, 196, 197, 202, 206, 208, 209, 210, 217, 244], "taskprior": [95, 216], "low": [95, 195, 205, 208, 210, 212, 222], "boolean": [96, 131, 182, 183, 184, 203, 208, 210], "kokkos_assert": [97, 196], "kokkos_swap": [97, 216], "device_id": [97, 132, 133, 174, 175], "num_devic": [97, 171, 175, 216], "num_thread": [97, 132, 133, 171, 174, 203], "critic": [98, 207, 231], "_view": 98, "awar": [98, 188, 202, 207, 212, 214, 221, 239], "bundl": [98, 189], "loos": [98, 180, 190], "behav": [98, 181, 190, 210, 211, 212], "atomic_assign": [99, 216], "kokkos_atom": [100, 101, 102, 103, 105, 108, 216], "obj": [100, 101, 102, 103, 105, 108], "type_identity_t": [100, 101, 102, 103, 108], "whose": [100, 105, 108, 166, 196, 208, 211, 212, 239, 243], "regardless": [101, 134, 207], "bitwis": [101, 102, 110, 111, 140, 212], "held": [101, 103, 105, 108, 231], "was_exchang": 102, "prefer": [102, 131, 196, 203, 212, 213, 221, 222, 223, 246], "ptr_to_valu": [104, 106, 107], "update_valu": [104, 106, 107], "previou": [104, 136, 141, 142, 156, 180, 186, 202, 216, 233], "atomic_fetch_add": [104, 106, 195, 202], "tmp": [104, 202, 239], "atomic_fetch_and": 104, "atomic_fetch_div": 104, "divid": [104, 107, 148, 149, 150, 170, 200, 201, 237, 242], "atomic_fetch_lshift": 104, "atomic_fetch_max": 104, "atomic_fetch_min": 104, "atomic_fetch_mul": 104, "atomic_fetch_mod": 104, "atomic_fetch_or": 104, "atomic_fetch_rshift": 104, "atomic_fetch_sub": [104, 106], "subtract": [104, 106, 107], "atomic_fetch_xor": 104, "atomic_and": 106, "atomic_decr": 106, "atomic_incr": [106, 195, 216], "atomic_max": 106, "atomic_min": 106, "atomic_or": 106, "atomic_sub": 106, "atomic_add_fetch": 107, "atomic_and_fetch": 107, "atomic_div_fetch": 107, "atomic_lshift_fetch": 107, "atomic_max_fetch": 107, "atomic_min_fetch": 107, "atomic_mul_fetch": 107, "atomic_mod_fetch": 107, "atomic_or_fetch": 107, "atomic_rshift_fetch": 107, "atomic_sub_fetch": 107, "atomic_xor_fetch": 107, "conjunct": [109, 138, 153, 189, 195, 197, 202, 231], "AND": [110, 112, 223], "remove_cv": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125], "result_view_typ": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 201], "value_": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 154, 201], "local": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 133, 138, 139, 149, 150, 197, 202, 203, 207, 208, 209, 211, 212, 222, 233, 235, 241], "reduction_ident": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 149, 150, 198, 200, 208], "resid": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 139, 206, 209, 241], "customtyp": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125], "_min": [114, 115, 118, 119], "vallocscalar": [115, 117, 124, 202], "loc": [115, 117, 126, 199], "_max": [115, 116, 117, 118, 119], "idx3d_t": 117, "minloc_t": 117, "minlocval_t": 117, "lf": [117, 149, 199], "minmaxscalar": [118, 124, 202], "min_val": [118, 119, 120, 121, 199], "max_val": [118, 119, 120, 121, 199], "minmaxlocscalar": [119, 124, 202], "min_loc": [119, 120, 199], "max_loc": [119, 120, 199], "minvalu": [120, 121], "maxvalu": [120, 121], "hypothet": 123, "brief": [123, 228, 231], "build": [123, 131, 181, 188, 196, 202, 203, 205, 208, 215, 220, 221, 233, 235, 247], "callback": 123, "monoid": 123, "val1": 123, "val2": 123, "ident": [123, 131, 149, 150, 154, 156, 180, 200, 202, 203, 207, 208, 212, 237], "el": [123, 221], "under": [123, 181, 196, 197, 208, 212, 215, 223, 231, 235], "reducesum": 123, "lval": 123, "l": [123, 138, 142, 159, 207, 233], "resultvalu": 126, "resultindex": 126, "shrink": [127, 185, 186], "throw": [128, 129, 130, 156, 204, 212, 222], "runtime_error": 128, "failur": [128, 129, 130, 156, 188, 223, 233, 234], "uniniti": [129, 152, 154, 156, 180, 185, 186, 212], "metadata": 129, "succe": 129, "suitabl": [129, 196, 208, 218, 239], "rawmemoryallocationfailur": [129, 130], "thrown": [129, 137], "memadvis": [129, 130, 188], "tool": [129, 131, 133, 148, 149, 150, 196, 203, 220, 221, 247], "kokkosp": 129, "On": [129, 130, 195, 197, 202, 206, 211, 221], "leak": [129, 130, 212], "freed": [130, 202, 212], "new_siz": 130, "invalid": [130, 212, 216], "rare": [131, 139], "offload": [131, 221], "talk": [131, 139, 151], "theoret": [131, 139, 151], "treatment": [131, 139, 151], "disclaim": [131, 139, 151, 223], "term": [131, 139, 151, 207, 212, 215, 223, 231, 244], "anyon": [131, 139, 151, 215], "who": [131, 139, 151, 205, 212, 231, 232, 234, 240, 243], "knew": [131, 139, 151], "confus": [131, 139, 151, 212], "often": [131, 138, 139, 151, 188, 189, 195, 202, 204, 205, 206, 207, 208, 210, 212, 235, 240], "shini": [131, 139, 151], "surpris": 131, "answer": [131, 202, 212], "ll": [131, 206, 212], "nowher": 131, "intermedi": [131, 208], "incompat": [131, 197, 221], "explicit": [131, 142, 148, 154, 182, 183, 184, 188, 202, 208, 209, 216, 222, 231], "simpli": [131, 138, 180, 197, 202, 204, 206, 210, 213, 238, 239, 240, 244], "mental": [131, 212], "exercis": [131, 223, 235], "translat": [131, 223], "tend": [131, 195, 209], "verbos": 131, "much": [131, 148, 156, 196, 201, 205, 207, 208, 210, 212, 218], "risk": [131, 196, 218, 223], "lose": 131, "caution": [131, 197], "optiopn": 131, "event": [131, 139, 153, 202, 223, 235], "unspecifi": [131, 168, 188, 209], "care": [131, 196, 210, 212], "print": [131, 133, 138, 167, 176, 184, 203, 221], "arraylayout": 131, "recommend": [131, 156, 202, 206, 208, 210, 212, 227, 235], "scratchmemoryspac": [131, 216], "ex2": 131, "ex1": 131, "usabl": [131, 140, 212, 216], "shorthand": [131, 139], "lh": [131, 192, 193], "sign": [131, 188, 203, 212, 226], "typetrait": [131, 139], "num_numa": 132, "ndevic": 132, "skip_devic": 132, "disable_warn": [132, 133], "favor": [132, 206], "One": [132, 156, 195, 197, 199, 202, 204, 206, 210, 212, 239, 240, 244], "distinguish": [132, 143, 208], "kokkoscor": 133, "set_num_thread": [133, 134, 136, 203], "set_device_id": [133, 203], "set_disable_warn": [133, 136], "introduc": [133, 188, 202, 206, 208, 209, 218, 234, 241], "unset": 133, "let": [133, 155, 197, 202, 204, 206, 207, 208, 211, 212, 240], "tabl": [133, 197, 203, 206, 212, 235], "set_parameter_nam": 133, "parameter_typ": 133, "parameter_nam": 133, "has_parameter_nam": 133, "get_parameter_nam": 133, "summar": 133, "id": [133, 163, 171, 174, 175, 202, 203, 204], "minu": 133, "map_device_id_bi": 133, "mpi_rank": [133, 203], "round": [133, 142, 203, 207], "robin": [133, 203], "mpi": [133, 135, 136, 195, 197, 203, 205, 211, 213, 221, 222, 236, 243, 247], "disabl": [133, 197, 203, 221, 222], "messag": [133, 203, 205, 211, 231, 233, 235], "configur": [133, 138, 203, 210, 219, 221, 223, 231, 233, 234, 235, 241], "tune_intern": 133, "autotun": [133, 203], "heurist": [133, 203], "tools_lib": 133, "full": [133, 190, 192, 195, 203, 204, 206, 209, 210], "ld_library_path": [133, 203], "tools_help": 133, "command": [133, 134, 136, 197, 213, 235], "line": [133, 134, 136, 139, 195, 197, 212, 218, 234, 246], "tools_arg": 133, "set_print_configur": 133, "set_map_device_id_bi": [133, 134, 136], "environ": [133, 135, 136, 137, 139, 171, 174, 175, 197, 204, 208, 212, 213, 222, 226, 233, 235], "raii": [134, 163, 164], "is_inti": 134, "is_fin": [134, 135, 136, 150, 169], "lifetim": [134, 202], "charact": [134, 223], "uncondition": [134, 216], "precondit": 134, "is_initi": [134, 135, 136, 169], "unique_ptr": 134, "make_opt": 134, "nullopt": 134, "clean": [135, 233], "destroi": [135, 163, 189, 206, 212, 228], "ill": 135, "mpi_fin": [135, 203], "push_finalize_hook": 135, "regist": [135, 137, 176, 194, 195, 202, 210, 219], "invoc": 135, "erron": 136, "pars": [136, 197, 203], "whenev": [136, 206, 212], "seen": [136, 196, 205, 235], "decrement": [136, 188, 195, 212], "implicitli": [136, 180, 188], "multibyt": 136, "backward": [136, 192, 194, 225], "mpi_init": [136, 203], "enter": [137, 204, 205, 212, 245], "exit": [137, 164, 203], "my_hook": 137, "cruel": 137, "world": [137, 176], "goodby": 137, "kokkos_macro": [138, 216], "deal": [138, 180, 206, 211, 246, 247], "fullfil": 138, "__host__": [138, 204, 222], "__device__": [138, 142, 204, 222], "markup": [138, 208], "primarili": [138, 203, 231, 232], "hurt": [138, 199], "bloat": 138, "excess": 138, "sycl_extern": 138, "unit": [138, 139, 197, 202, 204, 205, 207, 232], "count_even": 138, "lcount": 138, "scope_guard": 138, "captur": [138, 148, 202, 208, 212, 218, 238, 244], "claus": [138, 202, 208, 215, 244], "syntax": [138, 202, 208, 211, 212, 221], "print_data": 138, "data_copi": 138, "deduct": 138, "2f": 138, "side": [139, 147, 169, 188, 202, 208, 209, 211, 232], "virtual": [139, 189, 212, 225], "xnack": 139, "movement": 139, "os": 139, "driver": [139, 235, 241], "moment": [139, 197, 212], "preprocessor": [139, 197, 213, 246], "kokkos_has_shared_spac": 139, "has_shared_spac": [139, 241], "stai": [139, 150], "nevertheless": [139, 202, 206, 207, 212, 221], "kokkos_has_shared_host_pinned_spac": 139, "has_shared_host_pinned_spac": 139, "bit_cast": 140, "byteswap": 140, "has_single_bit": 140, "bit_ceil": 140, "bit_floor": 140, "bit_width": 140, "rotl": 140, "rotr": 140, "countl_zero": 140, "countl_on": 140, "countr_zero": 140, "countr_on": 140, "popcount": 140, "reinterpret": 140, "represent": [140, 210, 212], "counterpart": 140, "_builtin": 140, "suffix": [140, 142], "magic": 140, "log2": [141, 142], "log10": [141, 142, 192], "inv_pi": 141, "inv_sqrtpi": 141, "ln2": 141, "ln10": 141, "sqrt3": 141, "inv_sqrt3": 141, "egamma": 141, "toolchain": [141, 197, 222], "henc": [141, 206, 208, 212, 222], "pi_v": 141, "motiv": [142, 205, 210, 218, 243], "borrow": 142, "llvm": [142, 223], "compilecudawithllvm": 142, "clang": [142, 197, 213, 227, 233, 234, 247], "ok": [142, 157, 159, 161, 188, 212, 222], "everyth": [142, 210, 212, 218], "nvcc": [142, 197, 227, 233], "overrid": [142, 197, 206, 213], "sinf": 142, "goal": [142, 202, 204, 205, 218, 231, 235, 239, 243], "cmath": 142, "sqrtf": 142, "sqrtl": 142, "integraltyp": 142, "arithmet": [142, 143, 165], "reader": [142, 196, 197, 205, 207], "cpprefer": 142, "com": [142, 214, 219, 220, 222, 226, 232, 233, 234], "fmod": 142, "remaind": 142, "remquo": 142, "fma": [142, 192], "fmax": 142, "fmin": 142, "fdim": 142, "nan": 142, "exp": [142, 192], "exp2": [142, 192], "expm1": 142, "log": [142, 192, 233], "log1p": 142, "exponenti": 142, "pow": [142, 192], "cbrt": [142, 192], "hypot": [142, 192], "co": [142, 192, 196, 231], "tan": [142, 192], "asin": [142, 192], "aco": [142, 192], "atan": [142, 192], "atan2": [142, 192], "trigonometr": 142, "sinh": [142, 192], "cosh": [142, 192], "tanh": [142, 192], "asinh": [142, 192], "acosh": [142, 192], "atanh": [142, 192], "hyperbol": 142, "erf": [142, 192], "erfc": [142, 192], "tgamma": [142, 192], "lgamma": [142, 192], "gamma": 142, "ceil": [142, 192], "floor": [142, 192], "trunc": [142, 192], "lround": 142, "llround": 142, "nearbyint": 142, "rint": 142, "lrint": 142, "llrint": 142, "frexp": 142, "ldexp": 142, "modf": 142, "scalbn": 142, "scalbln": 142, "ilog": 142, "logb": 142, "nextaft": 142, "nexttoward": 142, "copysign": [142, 192], "fpclassifi": 142, "isfinit": 142, "isinf": 142, "isnan": 142, "isnorm": 142, "signbit": 142, "isgreat": 142, "isgreaterequ": 142, "isless": 142, "islessequ": 142, "islessgreat": 142, "isunord": 142, "classif": 142, "4767": 142, "feel": [142, 214], "keep": [142, 206, 211, 212, 218, 243], "track": [142, 218, 223, 231, 232], "bewar": [142, 206], "unqualifi": [142, 222], "qualif": [142, 222], "p1841": 143, "break": [143, 188, 196, 213], "monolith": 143, "apart": [143, 195, 196, 212], "infin": 143, "finite_min": 143, "finite_max": 143, "epsilon": 143, "round_error": 143, "norm_min": 143, "denorm_min": 143, "reciprocal_overflow_threshold": 143, "quiet_nan": 143, "signaling_nan": 143, "characterist": [143, 207, 209, 212, 235, 245], "digit": 143, "digits10": 143, "max_digits10": 143, "radix": 143, "min_expon": 143, "min_exponent10": 143, "max_expon": 143, "max_exponent10": 143, "finite_min_v": 143, "floatingpoint": 143, "norm_min_v": 143, "finite_max_v": 143, "epsilon_v": 143, "round_error_v": 143, "infinity_v": 143, "quiet_nan_v": 143, "signaling_nan_v": 143, "denorm_min_v": 143, "digits_v": 143, "digits10_v": 143, "max_digits10_v": 143, "radix_v": 143, "min_exponent_v": 143, "min_exponent10_v": 143, "max_exponent_v": 143, "max_exponent10_v": 143, "presenc": [143, 222], "absenc": 143, "has_infin": 143, "enable_if_t": 143, "legacy_std_numeric_limits_infin": 143, "kokkos_execpolici": [144, 145, 146], "policytyp": [144, 145, 146], "recommended_team_s": [144, 145, 146], "outstand": [147, 181, 207, 223], "exec1": 147, "exec2": 147, "touch": [147, 212, 218], "wait": [147, 155, 165, 202, 208, 216, 245], "finish": [147, 148, 181, 195, 208, 212], "asynchron": [148, 149, 181, 207, 208, 212, 221, 222, 242, 247], "calle": 148, "execpolici": [148, 149, 150], "functortyp": [148, 149, 150, 156], "hook": [148, 149, 150, 203], "integertyp": [148, 149, 150], "work_tag": [148, 149, 150, 154, 156], "iN": [148, 149], "loop1": [148, 149, 150], "greet": 148, "taga": 148, "implicit": [148, 153, 158, 160, 162, 188, 202, 208, 238, 242], "tagb": 148, "thread_rank": 148, "loop2": [148, 149], "deduc": [149, 152, 154, 179, 206, 211, 243], "reducerargu": 149, "reducerargumentnonconst": 149, "fulfil": [149, 200, 201], "handletyp": [149, 150], "reducervaluetyp": 149, "value_count": [149, 208], "overwritten": [149, 150, 155, 212], "neutral": [149, 150], "lsum": [149, 153, 158, 160, 162, 202], "lmin": [149, 199], "tagmax": 149, "tagmin": 149, "lmax": 149, "team_rank": [149, 155, 202, 204], "returntyp": 150, "return_valu": 150, "postfix_sum": 150, "prefix_sum": 150, "partial_sum": 150, "li": 150, "domin": [151, 205], "elsewher": 151, "parallel_pattern": 151, "hand": [151, 195, 202, 206, 210, 221], "wavi": 151, "beginn": [151, 226], "tile": [152, 212, 239], "interv": [152, 154, 156], "outer": [152, 202, 212, 239], "inner": [152, 202, 212], "ot": 152, "IT": 152, "tt": 152, "de": [152, 154, 223, 231], "someexecutionspac": [152, 154], "se": [152, 154], "pl0": 152, "pl1": 152, "pl4": 152, "pl5": 152, "ctile": 152, "pc0": 152, "pc1": 152, "pc2": 152, "pc3": 152, "pc4": 152, "pc5": 152, "abegin": 152, "aend": 152, "atil": 152, "pa0": 152, "pa1": 152, "pa2": 152, "pa3": 152, "pa4": 152, "pa5": 152, "tile_typ": 152, "tile_size_recommend": 152, "array_index_typ": 152, "max_total_tile_s": 152, "policy_1": [152, 154, 156, 202], "policy_2": [152, 154, 156, 202], "t0": 152, "t1": [152, 166, 170], "t2": [152, 166, 170, 177], "teammembertyp": [153, 158, 160, 162], "threadvectorrangeboundariesstruct": 153, "threadsinglestruct": 153, "vectorsinglestruct": 153, "team_barri": [153, 155, 157, 158, 159, 160, 161, 162, 202], "encount": [153, 184, 222, 245], "thread_sum": 153, "team_sum": [153, 158, 160, 162, 202], "a_rowsum": [153, 157, 158, 159, 160, 162], "chunksiz": [154, 216], "policytrait": 154, "inherit": [154, 181, 235], "schedule_typ": [154, 156], "iteration_pattern": [154, 156], "launch_bound": [154, 156], "work_begin": 154, "work_end": 154, "work_spac": 154, "discret": [154, 165, 199, 239], "chunk_size_": 154, "workgroup": 154, "6754": 154, "convers": [154, 170, 204, 210, 223, 231, 238, 244], "cs": [154, 208], "rp0": 154, "rp1": 154, "rp2": 154, "rp3": 154, "rp4": 154, "rp5": 154, "rp6": 154, "policy_3": [154, 156, 202], "policy_4": [154, 156], "policy_6": 154, "policy_7": 154, "teamtask": 155, "subject": [155, 172, 196, 212, 223], "leagu": [155, 156, 202, 209, 245], "league_s": [155, 156, 202], "workitem": 155, "team_shmem": [155, 202], "team_scratch": [155, 202], "thread_scratch": 155, "lexic": [155, 196], "arriv": [155, 202], "team_broadcast": 155, "source_team_rank": 155, "var": 155, "broadcast": [155, 202], "reducertyp": 155, "team_reduc": 155, "across": [155, 176, 205, 207, 209, 210, 218, 220], "team_scan": 155, "policy_typ": 155, "set_scratch_s": [155, 156, 202], "4096": 155, "tid": 155, "lid": 155, "scratch_memory_typ": 155, "vector_length": [156, 216], "auto_t": 156, "lazili": 156, "perteamvalu": 156, "per_team": 156, "perthreadvalu": 156, "per_thread": 156, "closest": 156, "bandwidth": [156, 202, 209, 210, 212], "twice": [156, 212], "overwrit": [156, 197, 208], "scratch_size_max": 156, "maxim": [156, 204], "scratch_siz": 156, "team_size_": 156, "team_scratch_s": 156, "thread_scratch_s": 156, "policy_5": 156, "extent_1": [157, 159, 161], "extent_2": [157, 159, 161, 212], "extent_i": [157, 159, 161], "violat": [157, 159, 161, 202, 206, 208, 212], "num": [157, 159, 161, 203, 235], "leaguerank": [157, 159, 161], "teamsum": [157, 159, 161], "threadsum": [157, 161, 162], "leaguesum": [157, 159], "itype1": [158, 160, 162], "itype2": [158, 160, 162], "teamtyp": 159, "vectorsum": [159, 161], "tsum": 162, "kokkos_profiling_profilesect": [163, 216], "stop": 163, "leav": [163, 204, 212, 242], "sectionnam": 163, "createprofilesect": 163, "sectionid": 163, "destroyprofilesect": 163, "startsect": 163, "stopsect": 163, "scopedregion": 163, "ownership": [163, 164, 223], "kokkos_profiling_scopedregion": 164, "push": [164, 204, 227, 233], "pop": 164, "flow": [164, 235], "earli": [164, 207, 234], "regionnam": 164, "pushregion": 164, "popregion": 164, "do_work_v1": 164, "myapp": 164, "cond": 164, "rememb": [164, 206, 212, 235], "do_work_v2": 164, "profilingsect": [164, 216], "weight": 165, "fraction": 165, "is_arithmetic_v": 165, "n_partit": 165, "3rd": 165, "stream": [165, 181, 209, 212, 216, 221, 222, 247], "otherparam": 165, "param": [165, 228], "f1": [165, 245], "f2": [165, 245], "functor1": 165, "functor2": 165, "f3": 165, "functor3": 165, "kokkos_pair": [166, 216], "fulli": [166, 188, 206, 240], "std_pair": 166, "int_float": 166, "converted_std_pair": 166, "converted_kokkos_pair": 166, "to_std_pair": 166, "first_typ": 166, "second_typ": 166, "kokkos_defaulted_funct": [166, 218], "kokkos_forceinline_funct": [166, 200], "wise": [166, 182, 183, 184], "msg": 167, "kokkos_abort": 167, "ndebug": 169, "assert": [169, 187, 210, 222, 223], "diagnost": 169, "text": [169, 223], "predefin": [169, 202], "__file__": 169, "__line__": 169, "imag": 170, "real": [170, 238], "imaginari": 170, "im": 170, "realtyp": 170, "nodiscard": [171, 174, 175], "announc": [172, 231], "clamp": [173, 216], "boundari": [173, 211], "kokkos_clamp": [173, 196], "kokkos_minmax": [173, 196], "cerr": 174, "kokkos_printf": 176, "format": [176, 204, 212, 234], "stdout": 176, "hello": [176, 206], "is_nothrow_move_constructible_v": 177, "is_nothrow_move_assignable_v": 177, "resolut": [177, 200, 231, 232, 244], "unless": [177, 196, 197, 208, 210, 212, 221, 223, 246], "is_move_constructible_v": 177, "is_move_assignable_v": 177, "swappabl": 177, "yield": [177, 188, 246], "ambigu": [177, 216, 222], "situat": [177, 189, 195, 198, 207, 210, 231, 244], "adl": [177, 216], "measur": [178, 207], "time1": 178, "time2": 178, "impl_detail": [179, 187], "view_arg": 179, "subviewhold": 179, "a_view": 180, "sole": [180, 196, 205, 223], "host_mirror": 180, "host_mirror_view": 180, "memory_space_inst": 180, "mirror_view": 180, "implmirrortyp": 180, "conduct": [180, 231, 234], "circumst": [181, 231], "viewdest": 181, "viewsrc": [181, 188, 228], "copy_spac": 181, "submit": [181, 202, 223, 235], "necessarili": [181, 202, 204, 209, 212, 223], "cudamemcpyasync": 181, "d_a": [181, 204], "d_a_2": 181, "d_a_5": 181, "h_a": [181, 204, 242], "h_a_2": 181, "d_a_2_5": 181, "deviceview": 181, "temporari": [181, 199, 209, 212, 222], "h_view_tmp": 181, "lai": [182, 183, 184], "convent": [182, 183, 209, 212, 221], "signifi": [182, 183, 184], "is_extent_construct": [182, 183, 184], "full_mesh": 184, "mesh": [184, 237], "mesh_subcompon": 184, "z": [184, 192, 210, 226], "frequent": 184, "noncontigu": [184, 212], "array_layout_max_rank": 184, "s0": 184, "s4": 184, "s5": 184, "s6": 184, "s7": 184, "order_dimens": 184, "itypeord": 184, "itypedimen": 184, "dimen": 184, "3d": [184, 204, 238], "grow": [185, 186, 205], "subext": 186, "191": 187, "subset": [187, 194, 195, 197, 211, 235], "arg_r": 187, "remove_const_t": [187, 211], "s3415": 187, "star": 188, "bracket": 188, "2d": [188, 199, 204, 238], "5d": 188, "Their": [188, 243], "integral_const": [188, 192, 193], "nullari": 188, "encourag": [188, 197, 202, 213, 215, 234], "akin": [188, 239], "_dynam": 188, "msvc": [188, 197, 227], "is_manag": 188, "natural_mdspan_typ": 188, "md": [188, 233], "Be": [188, 208], "upgrad": 188, "array_layout_from_map": 188, "elementtyp": 188, "extentstyp": 188, "accessortyp": 188, "see_below": 188, "i7": 188, "is_assign": 188, "assign_data": 188, "arg_data": 188, "anywai": [188, 204], "otherelementtyp": 188, "otherext": 188, "otherlayoutpolici": 188, "otheraccessor": 188, "otheraccessortyp": 188, "default_accessor": 188, "to_mdspan": 188, "other_accessor": 188, "data_handle_typ": 188, "viewdst": [188, 228], "dynamic_rank": 188, "a1": [188, 212, 245], "a2": [188, 221, 245], "a3": [188, 245], "a4": 188, "a5": 188, "a6": 188, "a7": 188, "a8": 188, "a9": 188, "a10": [188, 221], "a11": 188, "a12": 188, "a13": 188, "dictat": 188, "extents_typ": 188, "static_ext": 188, "dynamic_ext": 188, "layout_typ": 188, "layout_left_pad": 188, "layout_right_pad": 188, "layout_strid": 188, "accessor_typ": 188, "viewstr": 189, "view_wrap": 189, "pointer_to_wrapping_memori": 189, "bypass": 189, "01": [189, 212], "allowpad": 189, "unspel": 189, "raw": [189, 202, 208, 216, 222], "viabl": 189, "notabl": 190, "simd_mask": [191, 192, 194, 210], "where_express": 191, "kokkos_simd": [192, 193, 194, 210], "abi": [192, 193, 194, 210], "simd_abi": [192, 193], "fallback": [192, 193], "nativ": [192, 193, 212, 221], "extract": [192, 193, 204, 239], "mask_typ": [192, 193, 210], "abi_typ": [192, 193], "copy_from": [192, 194, 210], "simd_flag": [192, 194], "copy_to": [192, 194, 210], "simd_flag_default": [192, 194], "simd_flag_align": [192, 194], "element_aligned_tag": [192, 194, 210], "vector_aligned_tag": [192, 194], "mag": 192, "sgn": 192, "native_simd": [192, 194, 210], "simd_alignment_vector_align": 192, "simd_typ": [192, 193, 194, 210], "zu": 192, "simd": [193, 216, 220, 221, 225, 247], "iff": 193, "native_simd_mask": [193, 210], "basi": [194, 197, 223, 239], "const_where_express": 194, "scatter_to": 194, "gather_from": 194, "safer": 194, "domain": [194, 214], "chapter": [195, 197, 202, 204, 207, 208, 209, 211, 212, 235], "understand": [195, 197, 204, 206, 207, 211, 212, 221], "resolv": [195, 218, 231], "histogram": 195, "create_histogram": 195, "try": [195, 203, 207, 212, 213, 215, 218, 231], "lost": 195, "race": [195, 204, 207, 237], "particl": [195, 243, 244], "neighbour": 195, "forc": [195, 197, 202, 207, 209, 210, 244], "compute_forc": 195, "forceloop": 195, "neighbor": [195, 244], "particle_id": 195, "neighbour_id": 195, "some_contribut": 195, "colour": 195, "ii": [195, 204, 223, 238], "iii": [195, 223], "disadvantag": 195, "transfer": [195, 212, 223], "uninterrupt": 195, "cycl": [195, 197, 231, 232, 235], "hinder": 195, "throughput": [195, 205], "createhistogram": 195, "scheme": 195, "find_indic": 195, "findindic": 195, "div": 195, "lshift": 195, "mod": 195, "mul": 195, "rshift": 195, "sub": [195, 211, 218], "xor": 195, "histogram_atom": 195, "transpar": 195, "clever": 196, "constitut": [196, 202, 223, 235], "tension": 196, "freedom": 196, "frustrat": [196, 210], "pain": 196, "deliber": [196, 223], "accident": [196, 218, 231], "breakag": [196, 231], "kokkos_": [196, 221], "chanc": 196, "inadvert": 196, "broken": 196, "kokkos_impl_": 196, "notic": [196, 206, 221, 223, 240, 241], "period": [196, 231], "hous": 196, "prime": 196, "incomplet": 196, "newer": [196, 197, 227], "particularli": [196, 239], "problemat": [196, 246], "obei": 196, "interfer": [196, 207], "collis": [196, 207], "prefac": 196, "myproject_": 196, "disambigu": 196, "cap": 196, "usual": [196, 197, 204, 207, 208, 212, 233], "syntact": 196, "revis": [196, 223, 231], "behind": [196, 210, 238, 242], "publish": 196, "drive": [196, 210], "advantag": [196, 210, 242, 244], "workaround": [196, 233], "older": [196, 221, 231], "recompil": 196, "occasion": [196, 227], "overal": [196, 212, 235, 242], "migratori": 196, "evolutionari": 196, "ideal": [196, 231], "wrong": [196, 211, 212], "wast": [196, 212], "continu": [196, 197, 204, 205, 213, 231, 235, 240], "subdirectori": [196, 197], "union": [196, 223], "fashion": [196, 211], "invok": [196, 207, 212, 221], "explain": [197, 202, 206, 207, 212, 218], "embed": [197, 205, 223], "mix": [197, 204, 207, 212, 213, 227], "advic": [197, 222], "mainli": [197, 212], "directori": [197, 223, 226, 231, 233, 235], "protect": [197, 202, 204, 205, 207, 210, 246], "prevent": [197, 202, 204, 212, 222, 237], "kokkoscore_config": 197, "h": [197, 214, 222, 236, 242], "mention": [197, 235], "compliant": [197, 206], "date": [197, 221, 223, 231, 233], "nightli": [197, 235], "readm": [197, 215, 233, 235], "repositori": [197, 231, 233, 234], "At": [197, 203, 206, 208, 210, 212, 221, 231, 235], "88": [197, 227], "nvc": [197, 227, 234], "rocm": [197, 206, 226, 227], "xl": [197, 227, 233], "fujitsu": [197, 227], "arm": [197, 227], "linkag": [197, 227], "fopenmp": 197, "hwloc": [197, 203, 221, 235], "As": [197, 198, 202, 205, 206, 207, 208, 210, 213, 223, 235, 240], "robust": [197, 213, 231], "strongli": [197, 212, 213], "cmakelist": [197, 213], "txt": [197, 203, 213, 223], "find_packag": [197, 213, 221], "target_link_librari": [197, 213], "mytarget": [197, 213], "processor": [197, 202, 205, 207, 209, 235], "dkokkos_root": [197, 213, 226], "lib64": 197, "especi": [197, 206, 207, 208, 210, 222, 232, 235, 241], "nvcc_wrapper": 197, "dcmake_cxx_compil": [197, 213, 226], "bin": [197, 222], "cmake_cxx_flag": 197, "propag": [197, 213], "add_subdirectori": [197, 213], "dir": [197, 221], "include_directori": 197, "kokkos_include_dirs_ret": 197, "arch": 197, "mkdir": [197, 233], "cd": [197, 226, 233], "srcdir": [197, 213], "dcmake_install_prefix": [197, 213, 226], "my_install_fold": 197, "dkokkos_enable_openmp": [197, 213, 226], "parti": [197, 204, 207, 213, 222, 223], "altern": [197, 204, 210, 213, 221, 235], "download": [197, 213, 235], "env": [197, 213], "folder": [197, 213], "setup": [197, 213, 221, 235, 242], "sh": [197, 213, 235], "variant": [197, 208, 212, 213, 231], "deactiv": [197, 213], "chosen": [197, 213], "exact": [197, 213], "info": [197, 213, 220, 221], "hash": [197, 212, 213], "human": [197, 213], "readabl": [197, 210, 213, 223], "spec": [197, 213], "dii": 197, "wish": [197, 203], "downstream": [197, 213, 219], "almost": [197, 205, 210, 237], "myproject": 197, "myvers": 197, "idiosyncrasi": 197, "annoi": 197, "dspack_workaround": 197, "spack_workaround": 197, "spack_cxx": 197, "cmake_cxx_compil": 197, "cxx": [197, 238], "technolog": [197, 205, 223], "orient": [197, 244], "softwar": [197, 205, 210, 223, 231, 234], "framework": [197, 207, 214], "solut": [197, 205, 206, 210, 223, 231, 235, 239], "larg": [197, 210, 212, 213, 218, 221, 239, 245], "multiphys": 197, "scientif": [197, 205, 212], "problem": [197, 204, 205, 218, 232, 235, 241], "organ": [197, 219, 221, 231, 232, 244], "stand": 197, "trilinos_enable_kokko": 197, "tpetra": 197, "infer": [197, 211], "trilinos_enable_openmp": 197, "ON": [197, 213, 221, 223, 226], "autogener": 197, "cmake_c_compil": 197, "cmake_fortran_compil": 197, "kokkos_arch_": [197, 221], "archcod": 197, "kokkos_arch_hsw": [197, 221], "haswel": [197, 221, 235], "uvm": [197, 204, 209, 212, 240], "export": 197, "cuda_launch_block": [197, 213], "cuda_managed_force_device_alloc": [197, 213], "aris": [197, 223], "stabil": 197, "symbol": 197, "ln": 197, "kokkos_source_dir_overrid": 197, "kokkoskernel": 197, "kokkoskernels_source_dir_overrid": 197, "script": [197, 213, 233, 234], "ompi_cxx": 197, "openmpi": [197, 203], "digest": 197, "matter": [197, 207, 218], "kokkos_link_depend": 197, "kokkos_cpp_depend": 197, "kokkos_cppflag": 197, "kokkos_cxxflag": 197, "kokkos_ldflag": 197, "kokkos_lib": 197, "tutori": [197, 205, 220], "kokkos_path": [197, 233], "IN": [197, 223], "root": [197, 210, 221, 226], "cuda_path": 197, "toolkit": [197, 221, 233], "kokkos_devic": 197, "kokkos_arch": [197, 210], "knl": [197, 233], "knc": 197, "snb": 197, "hsw": 197, "bdw": 197, "kepler30": 197, "kepler35": 197, "kepler37": 197, "maxwell50": 197, "pascal60": 197, "pascal61": 197, "armv81": 197, "kokkos_use_tpl": 197, "kokkos_opt": 197, "aggressive_vector": 197, "kokkos_cuda_opt": [197, 208], "force_uvm": 197, "use_ldg": 197, "rdc": [197, 221], "enable_lambda": [197, 208], "hwloc_path": 197, "ye": [197, 203], "kokkos_cxx_standard": 197, "lib": [197, 203], "cxxflag": [197, 235], "emb": 197, "metaprogram": [197, 212], "shortcom": 197, "prepend": 197, "xcompil": 197, "shell": [197, 213, 235], "analyz": [197, 235], "correctli": [197, 208, 213, 218], "ccbin": 197, "edit": [197, 207, 229, 231, 233, 235], "nvcc_wrapper_default_compil": 197, "peopl": [197, 206, 219], "modul": [197, 209, 226, 233, 235, 238, 247], "icpc": 197, "pgc": 197, "attach": [197, 203, 223, 230, 235, 245], "degrad": [197, 206], "accommod": 198, "click": [198, 229], "head": [198, 245], "summat": 199, "parabl": 199, "minreduc": 199, "min_reduc": 199, "minloc_typ": 199, "minlocreduc": 199, "lminloc": 199, "reducer_typ": 199, "team_typ": 199, "team_minmaxloc": 199, "row_minmaxloc": 199, "thread_minmaxloc": 199, "gui": [199, 208, 247], "team_minmax": 199, "the_arrai": 200, "tr": [200, 201], "upd": [200, 201], "ndx": [200, 201], "myarrai": 201, "summyarrai": 201, "references_scalar": 201, "arraysumresult": 201, "exploit": [202, 239], "parallel_": [202, 209, 212, 216], "node": [202, 205, 209, 220, 235, 236, 245], "modern": [202, 213], "character": [202, 209], "higher": [202, 205, 221], "orthogon": [202, 207], "heterogen": [202, 203, 209, 235, 243], "cluster": [202, 240], "multicor": [202, 205, 207, 209], "hyper": 202, "instruct": [202, 210, 215, 221], "socket": [202, 213], "network": [202, 235], "llc": [202, 223], "l1": 202, "l2": 202, "sm": 202, "warp": [202, 204, 212], "wave": 202, "collabor": [202, 205], "close": [202, 208, 210, 215, 231], "adapt": [202, 206, 209], "suggest": [202, 235], "tightli": [202, 239, 247], "gather": 202, "choic": [202, 204, 207, 212, 213], "sometim": [202, 212, 213, 232, 233], "flat": [202, 245], "grid": [202, 204, 211], "inter": [202, 207], "guess": 202, "n_workset": 202, "choos": [202, 203, 208, 209, 212, 218, 221, 223], "sometag": 202, "action": [202, 231, 232, 234, 235], "team_memb": [202, 245], "coordin": [202, 218], "everyon": 202, "consum": 202, "indirect": [202, 223], "workset": 202, "recycl": 202, "cell": [202, 239], "team_shmem_s": 202, "double_s": 202, "team_shared_a": 202, "get_shmem": 202, "team_shared_b": 202, "160": 202, "kilobyt": 202, "gigabyt": 202, "mostli": [202, 204, 218], "shared_int_2d": 202, "shared_s": 202, "shmem_siz": 202, "layer": [202, 204, 205, 210, 222, 238], "teamthreadloop": 202, "threadvectorloop": 202, "consciou": [202, 218], "difficult": [202, 210, 239], "catch": [202, 212, 218, 231, 234], "loop_count": 202, "emploi": [202, 205, 207], "prepar": [202, 223, 233], "stage": 202, "innermost": 202, "compris": [202, 207], "workset_s": 202, "vectoriz": 202, "decor": 202, "pragma": [202, 204, 208], "ivdep": 202, "repetit": [202, 210], "bodi": [202, 212, 227, 245], "shared_arrai": 202, "somefunct": [202, 204], "global_arrai": 202, "my_offset": 202, "inner_lsum": 202, "inner_": 202, "_finalize_": 203, "subpackag": [203, 212], "alphabet": [203, 220], "interpret": 203, "openacc": [203, 205, 221, 227], "sup": 203, "quot": [203, 210], "whitespac": 203, "delimit": [203, 212], "insensit": 203, "promis": [203, 207, 208, 209], "conflict": [203, 212, 218, 221, 223], "mvapich": 203, "slurm": 203, "deriv": [203, 205, 206, 223], "mpich": [203, 221], "dash": 203, "underscor": 203, "kokkos_num_thread": 203, "set_xxx": 203, "xxx": 203, "has_xxx": 203, "get_xxx": 203, "setting": 203, "shut": 203, "down": [203, 206, 241], "atexit": 203, "mpi_comm_self": 203, "adopt": [204, 209], "facilit": 204, "lift": 204, "inde": [204, 212, 244], "cumbersom": 204, "__cuda_arch__": 204, "blockidx": 204, "threadidx": 204, "blockdim": 204, "omp_set_num_thread": 204, "bookkeep": 204, "ask": [204, 207, 209, 212, 218, 231, 234], "princip": 204, "insur": 204, "app": 204, "placement": [204, 206], "150": 204, "2d_arrai": 204, "200": [204, 212, 218], "scenario": [204, 209, 210, 226], "receiv": [204, 223, 235], "straight": 204, "mykokkosfunct": 204, "host_spac": 204, "t_1d_device_view": 204, "t_2d_device_view": 204, "d_b": 204, "h_b": 204, "t_team": 204, "t_1d_view": 204, "t_3d_view": 204, "had": [204, 244], "whatev": 204, "a_old": 204, "unfortun": [204, 206, 244], "unrestrict": 204, "bring": [204, 208, 218, 238], "massiv": 204, "penalti": [204, 212], "1000": [204, 208, 212, 218], "uneven": 204, "polymorph": [204, 209, 212, 214], "bla": [204, 212, 247], "matric": [204, 212], "dot": 204, "cubla": 204, "kokkos_have_cuda": 204, "call_cublas_dot": 204, "ptr_on_devic": 204, "extent_0": [204, 212], "cbla": 204, "call_cblas_dot": 204, "field": [205, 206, 231, 233, 239, 243], "hpc": [205, 220, 221, 231, 244], "verg": 205, "era": [205, 214], "angl": 205, "rate": 205, "flop": 205, "poor": 205, "workload": 205, "challeng": 205, "energi": 205, "mid": 205, "1990": [205, 208], "enjoi": 205, "seemingli": 205, "homogen": [205, 207, 235, 243], "decad": 205, "commun": [205, 211, 218, 222, 223, 231, 232, 240, 242], "realiz": 205, "review": [205, 217, 231, 234, 235], "broad": 205, "latenc": [205, 207, 212], "medium": [205, 223], "graphic": [205, 207, 221], "gp": 205, "toler": 205, "degre": [205, 209], "divers": 205, "interest": [205, 210, 228, 231], "heritag": 205, "offer": [205, 221, 223], "guidelin": [205, 222], "todai": [205, 207], "cilk": 205, "tbb": 205, "linux": 205, "contemporari": [205, 207], "opencl": 205, "Such": [205, 238, 239], "varieti": [205, 235, 243], "pose": 205, "reminisc": 205, "becam": 205, "invest": [205, 212], "seek": [205, 218], "isol": 205, "fluctuat": 205, "coverag": 205, "supplementari": 205, "gradual": 205, "idea": [206, 212, 218], "odditi": 206, "face": [206, 211], "2020": 206, "subtl": 206, "cleanup": [206, 233], "disclos": 206, "glanc": 206, "fine": [206, 212], "crash": [206, 222], "nomin": 206, "among": [206, 235], "okai": 206, "amongst": 206, "hidden": [206, 212], "derefer": 206, "credit": 206, "articl": [206, 214], "pablo": 206, "aria": [206, 234], "faithfulli": 206, "happili": 206, "anymor": [206, 231], "therefor": [206, 212, 222, 246], "techniqu": 206, "deviceinstancememori": 206, "deviceinst": 206, "mykernel": 206, "distinct": [206, 207], "ugli": 206, "repo": [206, 220], "setafield": 206, "somehostvalu": 206, "despit": 206, "resort": 206, "myloop": 206, "kokkos_class_lambda": 206, "derivedptr": 206, "make_uniqu": 206, "oh": 206, "strictli": 206, "spell": [206, 241], "educ": 206, "slack": [206, 218, 219, 220, 226, 231, 232, 234], "aspect": [207, 209, 210, 235], "programm": [207, 208, 210, 212, 240], "exascal": [207, 214], "consult": [207, 212], "ang": 207, "elect": 207, "show": [207, 208, 209, 212, 233], "die": [207, 209], "reachabl": 207, "et": [207, 231], "al": [207, 214], "proxi": [207, 216], "sandia": [207, 223, 235], "nation": [207, 223], "laboratori": 207, "lawrenc": 207, "berkelei": 207, "consider": 207, "finit": [207, 237, 239], "packag": [207, 214, 222, 231, 233, 234, 239], "slower": [207, 212], "dram": 207, "volatil": [207, 209, 212, 216], "routin": [207, 218, 238, 239], "gain": 207, "topic": [207, 208, 231], "coher": [207, 212], "hennessi": 207, "paterson": 207, "weak": 207, "therebi": 207, "fifth": [207, 211], "quantit": 207, "morgan": 207, "kaufmann": 207, "tempt": 207, "author": [207, 214, 218, 223], "background": 207, "scientist": 207, "stick": 207, "proof": 207, "forbid": [207, 212], "implic": [207, 221], "filesystem": 207, "overlap": [207, 236], "reproduc": [207, 223, 232], "awai": [207, 210, 211], "wonder": 207, "great": 207, "unnecessari": [208, 212, 218], "harmless": [208, 223], "anonym": 208, "suppli": 208, "outermost": 208, "turn": [208, 210, 212], "surround": 208, "stack": [208, 212, 231, 234], "secondli": 208, "circumvent": 208, "harder": 208, "interoper": [208, 210, 225, 238, 247], "omp": [208, 235], "prior": [208, 212, 213, 222, 231, 232, 238, 242], "faster": [208, 218], "trip": 208, "fewer": 208, "encapsul": [208, 209, 211], "semir": 208, "maxplu": 208, "x_": 208, "inf": 208, "columnsum": 208, "convinc": 208, "numrow": 208, "numcol": 208, "sequenti": [208, 212, 221, 239], "blelloch": 208, "book": 208, "hi": [208, 232], "phd": 208, "dissert": [208, 210], "val_i": 208, "mit": 208, "press": 208, "necess": 208, "unus": [208, 216, 244], "differenti": 208, "bartag": 208, "rabtag": 208, "foobar": [208, 228], "formul": 209, "vari": [209, 212], "figur": 209, "hybrid": 209, "pim": 209, "principl": [209, 212], "remot": [209, 220, 235, 247], "send": 209, "undetermin": 209, "prescript": 209, "primit": 209, "spin": 209, "dead": 209, "persist": 209, "diverg": 209, "inspir": 209, "vocabulari": [209, 235], "comfort": [209, 218], "reflect": [209, 212], "rewrit": 209, "unoptim": 209, "optimis": 209, "histori": [210, 235], "struggl": 210, "blog": [210, 222], "insight": 210, "drawback": [210, 244], "stanford": 210, "tim": 210, "folei": 210, "heart": 210, "black": 210, "box": 210, "matthia": 210, "kretz": 210, "deliv": 210, "vendor": [210, 231, 247], "fairli": 210, "pictur": 210, "clearli": [210, 218, 223], "odd": 210, "quirk": 210, "tag_typ": 210, "sx": 210, "sy": 210, "sz": 210, "sr": 210, "squar": 210, "emit": [210, 211], "4x": 210, "speedup": [210, 242], "skip": [210, 212, 222], "troublesom": 210, "pitfal": [210, 212], "evenli": 210, "divis": 210, "cleaner": 210, "wide": [210, 212, 231, 235], "reach": [210, 212, 219], "throughout": 210, "slight": 210, "quadratic_formula": 210, "x1": 210, "x2": 210, "discrimin": 210, "sqrt_discrimin": 210, "classic": [210, 227], "familiar": [210, 212, 226, 231], "quadrat": 210, "formula": 210, "liter": 210, "naiv": 210, "mimic": 210, "roadmap": [210, 231], "regard": [210, 223], "very_expensive_funct": 210, "statement": [210, 223], "spend": [210, 212], "lot": [210, 212, 233], "pick": [211, 212, 231], "notat": 211, "vice": 211, "versa": 211, "cross": [211, 221, 223, 234], "plane": 211, "cube": 211, "n_0": 211, "n_1": 211, "n_": 211, "a_0": 211, "a_1": 211, "a_": 211, "a_j": 211, "n_j": 211, "handi": 211, "matlab": 211, "python": [211, 220, 233, 235, 247], "colon": 211, "fourth": 211, "elabor": [211, 223], "a_sub": 211, "won": [211, 212, 218], "cheaper": 211, "keyword": [211, 213, 216, 220], "easiest": [211, 213, 221], "said": 211, "dens": [211, 220, 247], "inconveni": 211, "my_view_typ": 211, "my_subview_typ": 211, "my_subview_type_deduc": 211, "fast": [212, 233], "intim": 212, "factor": 212, "coder": 212, "tie": 212, "hard": 212, "evolv": 212, "reliev": 212, "burden": [212, 231], "ty": 212, "expert": 212, "easi": [212, 213], "ellips": 212, "asterisk": 212, "typecast": 212, "a_ptr": 212, "malloc": 212, "a0": 212, "arbitrarili": 212, "unprotect": 212, "badli": 212, "advis": [212, 223], "deconstructor": 212, "disallow": 212, "indirectli": 212, "novic": 212, "THE": [212, 223, 233], "FOR": [212, 223], "IS": [212, 223], "NO": [212, 223], "rag": 212, "reorgan": 212, "v_outer": 212, "assigne": 212, "wors": 212, "yourself": [212, 233], "rid": 212, "sharedsapc": 212, "inner_view_typ": 212, "outer_view_typ": 212, "numout": 212, "numinn": 212, "to_str": 212, "device_out": 212, "nonown": 212, "dispos": 212, "a_nonconst": 212, "nonconst": 212, "a_const": 212, "readonlyfunct": 212, "skew": 212, "parenthes": 212, "enclos": 212, "comma": 212, "a_ijk": 212, "rest": [212, 218], "slow": 212, "leftmost": 212, "exempt": 212, "unwind": 212, "incorrect": 212, "100x50x4": 212, "50": [212, 223], "200x50x4": 212, "300x60x4": 212, "300": 212, "java": 212, "s_1": 212, "s_2": 212, "s_3": 212, "dim1": 212, "extent_n": 212, "conserv": 212, "benefici": [212, 223], "heavi": 212, "stringent": 212, "overflow": 212, "lapack": [212, 247], "lda": 212, "morton": 212, "thereof": [212, 223], "viewmap": 212, "renam": 212, "coalesc": 212, "callbla": 212, "callsomeblasfunct": 212, "invalid_argu": 212, "100000": 212, "biject": 212, "accessspac": 212, "affin": 212, "memcopi": 212, "firstli": 212, "discourag": [212, 222], "circumv": 212, "defeat": 212, "legaci": [212, 222, 225], "legacyfunct": 212, "x_raw": 212, "len": 212, "myfunct": 212, "somelibraryfunct": 212, "reference_type_is_lvalu": 212, "sometrait": 212, "someothertrait": 212, "ca": 212, "a_atom": 212, "irregularli": 212, "a_ra": 212, "shorter": 212, "fault": 212, "prolifer": 212, "csr": 212, "spmatvec": 212, "ind": 212, "x_ra": 212, "y_i": 212, "accordingli": 212, "x_view": 212, "functionthattakeskokkosview": 212, "safest": 212, "tree": [213, 223, 233, 245], "exceedingli": 213, "devil": 213, "kokkos_install_prefix": 213, "compiler_used_to_build_kokko": 213, "cmake_polici": 213, "cmp0074": 213, "cmake_build_instal": 213, "cmake_build_in_tre": 213, "kokkos_install_fold": 213, "craype_link_typ": 213, "miss": 213, "benchmark": [213, 221, 235], "bytes_and_flop": 213, "nvlink": [213, 240], "displai": [213, 223], "dev": [213, 233, 235], "9485033": 214, "trott": [214, 223], "christian": [214, 223, 231], "lebrun": [214, 223], "grandi\u00e9": 214, "damien": [214, 223, 231], "arndt": 214, "daniel": 214, "ciesko": 214, "jan": 214, "dang": 214, "vinh": 214, "ellingwood": 214, "nathan": 214, "gayatri": 214, "rahulkumar": 214, "harvei": 214, "evan": 214, "hollman": 214, "daisi": 214, "ibanez": 214, "dan": 214, "liber": 214, "nevin": 214, "madsen": 214, "jonathan": 214, "mile": 214, "jeff": 214, "poliakoff": 214, "david": 214, "powel": 214, "ami": 214, "rajamanickam": 214, "sivasankaran": 214, "simberg": 214, "mikael": 214, "sunderland": 214, "turcksin": 214, "bruno": 214, "wilk": 214, "jeremiah": 214, "journal": 214, "ieee": 214, "transact": 214, "titl": [214, 218, 223], "2022": [214, 223, 227], "volum": 214, "805": 214, "817": 214, "doi": 214, "1109": 214, "tpd": 214, "2021": [214, 227], "3097283": 214, "ecosystem": [214, 220], "9502936": 214, "berger": 214, "vergiat": 214, "luc": 214, "grandi": [214, 223], "nader": 214, "gligor": 214, "milo": 214, "shipman": 214, "galen": 214, "womeldorff": 214, "geoff": 214, "scienc": [214, 234], "comprehens": [214, 218, 227, 233], "mcse": 214, "3098509": 214, "carteredwards20143202": 214, "manycor": 214, "3202": 214, "3216": 214, "issn": 214, "0743": 214, "7315": 214, "1016": 214, "jpdc": 214, "07": [214, 233], "003": 214, "url": 214, "sciencedirect": 214, "pii": 214, "s0743731514001257": 214, "carter": 214, "edward": 214, "pull": [215, 218, 231, 233, 235, 245], "licens": [215, 219, 220], "bsd": 215, "commerci": [215, 223], "req": 215, "is_asynchron": 216, "atomic_query_vers": 216, "atoimc_inc": 216, "atomic_decremn": 216, "atomic_dec": 216, "is_layouttil": 216, "layout_iterate_type_selector": 216, "instance_mod": 216, "unique_any_send": 216, "sender": 216, "newinst": 216, "ahould": 216, "in_parallel": 216, "kokkos_if_on_host": 216, "kokkos_if_on_devic": 216, "partli": [216, 222], "inconsist": 216, "device_arch": 216, "uniform": 216, "detect_device_count": 216, "detect_device_arch": 216, "set_num_devic": 216, "has_num_devic": 216, "get_num_devic": 216, "superflu": 216, "set_skip_devic": 216, "has_skip_devic": 216, "get_skip_devic": 216, "kokkos_visible_devic": 216, "cudastream_t": 216, "manage_stream": 216, "cudastream": 216, "hipstream_t": 216, "hipstream": 216, "allocationmechan": 216, "hostspoac": 216, "undocu": 216, "activeexecutionmemoryspac": 216, "host_execution_spac": 216, "host_memory_spac": 216, "kokkos_restrict_execution_to_": 216, "data_spac": 216, "hip_safe_cal": 216, "create_inst": 216, "partition_mast": 216, "num_partit": 216, "partition_s": 216, "kokkos_openmp_inst": 216, "access_error": 216, "kokkos_hip_spac": 216, "hip_internal_safe_call_deprec": 216, "kokkos_hip_error": 216, "kokkos_openmp": 216, "openmpintern": 216, "validate_partit": 216, "getnam": 216, "getsectionid": 216, "kokkos_hip_parallel_team": 216, "kokkos_sycl_parallel_team": 216, "kokkos_openmptarget_exec": 216, "kokkos_cuda_parallel_team": 216, "kokkos_cudaspac": 216, "number_of_alloc": 216, "kokkos_hpx": 216, "masterlock": 216, "kokkos_attribute_nodiscard": 216, "amathfunct": 216, "is_reducer_typ": 216, "index_list_typ": 216, "always_use_kokkos_sort": 216, "finalize_al": 216, "withoutinitializing_t": 216, "wi": 216, "kokkos_thread_loc": 216, "thread_loc": 216, "is_view": 216, "cuda_internal_safe_call_deprec": 216, "cuda_safe_cal": 216, "trail": 216, "kokkosviewlabel": 216, "kokkos_arrai": 216, "kokkos_complex": 216, "kokkos_half": 216, "kokkos_tim": 216, "kokkos_sort": 216, "kokkos_bit": 216, "kokkos_errorreport": 216, "prospect": [217, 223], "pr": 217, "submitt": 218, "criteria": 218, "meaning": 218, "changelog": [218, 231, 233], "imo": 218, "person": [218, 231, 235], "five": 218, "bugfix": 218, "intuit": 218, "async": 218, "tangl": 218, "granular": 218, "unnecessarili": 218, "feedback": [218, 230, 231, 234], "respond": 218, "quickli": 218, "stall": 218, "bunch": 218, "feasibl": 218, "ci": 218, "happi": 218, "video": [218, 220], "contact": [218, 219, 223], "clarif": 218, "zone": 218, "quorum": 218, "audienc": [218, 231], "channel": [219, 226, 231, 232, 234], "kokkosteam": [219, 220, 232], "email": 219, "whitelist": 219, "workspac": [219, 235], "invit": [219, 231, 234], "cmake": [219, 220, 222, 226, 227, 241], "dcmake_cxx_standard": 219, "batch": [220, 247], "pykokko": 220, "checkpoint": 220, "mdspan": 220, "p0009": 220, "stdbla": 220, "p1673": 220, "quick": 220, "instal": [220, 221, 235, 240], "lectur": 220, "slide": 220, "faq": 220, "cite": 220, "sensit": 221, "recal": 221, "dkeyword_nam": 221, "ccmake": 221, "dkokkos_enable_": 221, "dkokkos_enable_cuda": [221, 226], "mutual": 221, "kokkos_enable_openacc": 221, "kokkos_enable_benchmark": 221, "kokkos_enable_exampl": 221, "kokkos_enable_test": 221, "kokkos_enable_deprecated_code_4": [221, 241], "relax": 221, "um": 221, "kokkos_enable_impl_cuda_malloc_async": 221, "cudamallocasync": [221, 222], "ucx": [221, 222], "crai": 221, "kokkos_enable_sycl_relocatable_device_cod": 221, "kokkos_enable_atomics_bypass": 221, "kokkos_enable_impl_hpx_async_dispatch": 221, "kokkos_enable_compiler_warn": 221, "kokkos_enable_header_self_containment_test": 221, "kokkos_enable_large_mem_test": 221, "kokkos_enable_rocthrust": 221, "rocthrust": 221, "kokkos_cuda_dir": 221, "cuda_root": [221, 226], "kokkos_hwloc_dir": 221, "hwloc_root": 221, "kokkos_libdl_dir": 221, "libdl_root": 221, "hpx_dir": 221, "hpx_root": 221, "config": [221, 233, 235], "kokkos_arch_n": 221, "march": 221, "kokkos_arch_zen4": 221, "amd64": 221, "epyc": 221, "genoa": 221, "llnl": 221, "capitan": 221, "kokkos_arch_zen3": 221, "7713": 221, "ornl": [221, 223, 234], "frontier": [221, 245], "kokkos_arch_zen2": 221, "7742": 221, "noaa": 221, "kokkos_arch_zen": 221, "anl": [221, 234], "selen": 221, "kokkos_arch_amdavx": 221, "bulloz": 221, "kokkos_arch_armv9_grac": 221, "armv9": 221, "a64": 221, "neovers": 221, "gh200": 221, "csc": 221, "alp": 221, "kokkos_arch_a64fx": 221, "a64fx": 221, "fugaku": 221, "snl": [221, 234], "astra": 221, "cea": 221, "bullsequana": 221, "a32": 221, "isa": 221, "summit": 221, "sierra": [221, 234], "kokkos_arch_spr": 221, "sapphir": 221, "x86": [221, 233, 235], "9470c": 221, "aurora": 221, "lanl": 221, "crossroad": 221, "kokkos_arch_skx": 221, "6130": 221, "osu": 221, "pete": 221, "2680v3": 221, "nasa": 221, "pleiad": 221, "kokkos_arch_bdw": 221, "broadwel": 221, "2680v4": 221, "kokkos_arch_knl": 221, "31s1p": 221, "tianh": 221, "kokkos_arch_snb": 221, "sandi": 221, "bridg": 221, "kokkos_arch_riscv_rva22v": 221, "rva22v": 221, "spacemit": 221, "k1": 221, "kokkos_arch_riscv_sg2042": 221, "sg2042": 221, "milk": 221, "pioneer": 221, "eponym": 221, "microarchitectur": [221, 226], "compute_cap": 221, "autodetect": [221, 226], "h100": 221, "lovelac": 221, "l4": 221, "l40": 221, "a40": 221, "a16": 221, "a100": 221, "a30": 221, "t4": 221, "v100": 221, "p40": 221, "p4": 221, "p100": [221, 235], "m60": 221, "m40": 221, "k80": [221, 235], "k40": [221, 235], "k20": 221, "k10": 221, "amd_": 221, "kokkos_arch_amd_": 221, "architecture_flag": 221, "gfx942": 221, "gfx940": 221, "gfx1103": 221, "ryzen": 221, "8000g": 221, "gfx1100": 221, "center": 221, "1550": 221, "dg1": 221, "uhd": 221, "770": 221, "hd": 221, "510": 221, "pro": 221, "580": 221, "wherea": 221, "ahead": [221, 231], "jit": 221, "aot": 221, "cudarawmemoryallocationfailur": 222, "dkokkos_enable_impl_cuda_malloc_async": 222, "explan": 222, "cudamempool_t": 222, "interprocess": 222, "ipc": 222, "tweak": 222, "interprocess_communication_support": 222, "library_compos": 222, "glibc": 222, "librt": 222, "stub": 222, "7512": 222, "hsa_xnack": 222, "is_device_copy": 222, "mycompar": 222, "my_compar": 222, "usr": 222, "2572": 222, "is_device_copyable_v": 222, "oneapi": [222, 226], "dpl": 222, "pstl": 222, "hetero": 222, "dpcpp": 222, "parallel_backend_sycl": 222, "1816": 222, "isdeprecateddevicecopy": 222, "fieldt": 222, "2573": 222, "2605": 222, "checkfieldsaredevicecopy": 222, "1578": 222, "funct": 222, "__builtin_num_field": 222, "2613": 222, "checkdevicecopy": 222, "kerneltyp": 222, "handler": 222, "1652": 222, "roundedrangekernel": 222, "1694": 222, "unpack": 222, "ext": 222, "1697": 222, "kernelnam": 222, "propertiest": 222, "1293": 222, "kernel_parallel_for_wrapp": 222, "kname": 222, "transformedargtyp": 222, "2332": 222, "backtrac": 222, "ftemplat": 222, "parallel_for_lambda_impl": 222, "do_math": 222, "sqrt5": 222, "highli": 222, "z1": 222, "z2": 222, "z3": 222, "copyright": 223, "ntess": 223, "contract": [223, 242], "na0003525": 223, "govern": 223, "retain": 223, "apach": 223, "januari": 223, "2004": 223, "reproduct": [223, 234], "shall": [223, 232], "licensor": 223, "owner": [223, 233, 235, 240], "fifti": 223, "percent": 223, "permiss": [223, 233, 235], "media": 223, "authorship": 223, "appendix": 223, "editori": 223, "mere": 223, "intention": 223, "behalf": 223, "electron": 223, "verbal": 223, "sent": [223, 240], "mail": 223, "conspicu": 223, "contributor": [223, 226], "whom": 223, "incorpor": 223, "herebi": 223, "perpetu": 223, "worldwid": 223, "charg": 223, "royalti": 223, "irrevoc": 223, "publicli": [223, 234], "sublicens": 223, "patent": 223, "sell": 223, "claim": 223, "infring": 223, "institut": [223, 234], "litig": 223, "counterclaim": 223, "lawsuit": 223, "alleg": 223, "contributori": 223, "redistribut": 223, "recipi": 223, "carri": [223, 243], "promin": 223, "trademark": 223, "pertain": 223, "wherev": [223, 231], "alongsid": 223, "addendum": 223, "constru": 223, "compli": 223, "submiss": [223, 235], "notwithstand": 223, "herein": 223, "supersed": 223, "agreement": 223, "trade": 223, "servic": 223, "customari": 223, "warranti": 223, "law": 223, "AS": 223, "OF": 223, "merchant": 223, "liabil": 223, "theori": [223, 242], "tort": 223, "neglig": 223, "grossli": 223, "liabl": 223, "damag": 223, "incident": 223, "consequenti": 223, "inabl": 223, "loss": 223, "goodwil": 223, "stoppag": 223, "malfunct": 223, "fee": 223, "indemn": 223, "oblig": 223, "indemnifi": 223, "defend": 223, "incur": 223, "gplv2": 223, "court": 223, "compet": 223, "jurisdict": 223, "provis": 223, "retroact": 223, "deem": 223, "waiv": 223, "entireti": 223, "BY": 223, "BUT": 223, "exemplari": 223, "procur": [223, 231], "substitut": 223, "profit": 223, "busi": 223, "interrupt": 223, "strict": 223, "IF": 223, "SUCH": 223, "crtrott": 223, "gov": 223, "lebrungrandt": 223, "introduct": [225, 235, 247], "jump": 226, "sdk": 226, "uncom": 226, "zip": 226, "tar": 226, "unzip": 226, "xzf": 226, "gz": 226, "dcmake_build_typ": 226, "dkokkos_enable_hip": 226, "hipcc": 226, "kokkos_root": 226, "rocm_path": 226, "git": [226, 233], "clone": [226, 233, 235], "build_cmake_instal": 226, "ramp": [226, 231], "unawar": 227, "appleclang": 227, "intelllvm": 227, "2023": 227, "pthread": [227, 233, 235], "wall": [227, 233], "wunus": 227, "wshadow": [227, 233], "pedant": [227, 233], "werror": [227, 233], "wsign": [227, 233], "wtype": [227, 233], "wignor": 227, "wempti": 227, "wclobber": 227, "wuniniti": 227, "master": [227, 233, 235], "rigor": 227, "some_var": 228, "frobrnic": 228, "foobat": 228, "frobnic": 228, "pencil": 229, "button": 229, "workflow": [230, 234, 237], "overarch": 231, "outdat": 231, "facto": 231, "month": [231, 233], "phase": [231, 234], "defect": 231, "upcom": 231, "seamless": 231, "anticip": 231, "soon": 231, "deploy": [231, 234], "engag": 231, "fund": [231, 234], "agenc": [231, 234], "monitor": 231, "hpe": 231, "kit": 231, "research": 231, "hackathon": 231, "chanel": 231, "bi": 231, "annual": 231, "usergroup": [231, 232], "influenc": 231, "sustain": 231, "mainten": [231, 235], "proven": 231, "committe": 231, "greatest": 231, "matur": 231, "train": 231, "bump": 231, "leadership": 231, "prioriti": [231, 232], "thrust": 231, "refin": 231, "unassign": 231, "aren": 231, "weekli": [231, 232], "reassign": 231, "obsolet": 231, "avenu": 231, "week": [231, 234], "mondai": 231, "urgent": 231, "triag": 231, "preliminari": 231, "agenda": 231, "kept": 231, "nucleu": 231, "ongo": 231, "ephemer": 231, "dai": [231, 233], "unpaid": 231, "longer": 231, "nda": 231, "wednesdai": 231, "2pm": 231, "pm": 231, "mt": 231, "00": [231, 233], "utc": 231, "zoom": 231, "six": 231, "candid": [231, 234], "cherri": 231, "nearing": 231, "delai": 231, "creation": 231, "ship": 231, "partner": [231, 232], "onto": 231, "regress": 231, "unaddress": 231, "approxim": 231, "overview": [231, 239], "enhanc": [232, 233, 244], "priorit": 232, "mileston": 232, "slot": 232, "15feb18": 233, "043": 233, "196": 233, "128": 233, "pgi": 233, "103": 233, "174": 233, "cygwin": 233, "64bit": 233, "test_all_sandia": [233, 235], "trilino": [233, 234, 235, 239], "atdm": 233, "lammp": [233, 234], "sparc": 233, "master_histori": 233, "snapshot": [233, 235], "nohup": 233, "tail": 233, "watch": 233, "white": [233, 235], "shepard": [233, 235], "shepard_jenkins_run_script_serial_intel": [233, 235], "pristin": [233, 235], "rerun": 233, "token": [233, 247], "oldtag": 233, "newtag": 233, "04": 233, "rubi": 233, "gitthub_changelog_gener": 233, "indevelop": 233, "cat": 233, "commit": [233, 235], "clariti": [233, 244], "noteworthi": 233, "checkout": [233, 235], "majornumb": 233, "minornumb": 233, "weekssinceminornumberupd": 233, "sha1": 233, "append": [233, 245], "03": 233, "27": 233, "da314444": 233, "29ccb58a": 233, "amend": 233, "mm": [233, 238], "dd": 233, "yyyi": 233, "sem": [233, 235], "checkin": [233, 235], "disk": [233, 242], "ram": 233, "ceerws1113": 233, "trilinos_path": 233, "pwd": 233, "untrack": 233, "py": [233, 235], "backtrack": 233, "server": [234, 235], "approv": [234, 235], "jenkin": [234, 235], "travi": 234, "durat": 234, "pipelin": 234, "verif": 234, "offici": [234, 235], "judg": 234, "thorough": 234, "wider": 234, "poc": 234, "arborx": 234, "million": 234, "nnsa": 234, "offic": 234, "empir": 234, "sparta": 234, "cabana": [234, 236], "petsc": 234, "advertis": 234, "role": 235, "databas": 235, "fork": 235, "privileg": 235, "865": 235, "begun": 235, "conclus": 235, "haap": 235, "secondari": 235, "outag": 235, "scroll": 235, "ohpc": 235, "srn": 235, "apollo": 235, "bowman": 235, "elli": 235, "hansen": 235, "e5": 235, "2698": 235, "kokkos_dev": 235, "ride": 235, "p8": 235, "tuleta": 235, "fireston": 235, "garrison": 235, "tesla": 235, "36": 235, "sullivan": 235, "mac": 235, "bed": 235, "connect": 235, "webcar": 235, "intranet": 235, "staff": 235, "leader": 235, "assist": 235, "csri": 235, "csu": 235, "administ": 235, "daili": 235, "regimen": 235, "suit": 235, "job": 235, "dashboard": 235, "identif": 235, "terminolog": 235, "joint": 235, "simul": [235, 240, 243, 244], "qthread": 235, "briefli": 235, "generate_makefil": 235, "bash": 235, "makefil": 235, "spot": 235, "jenkins_test_driv": 235, "testing_script": 235, "sha": 235, "accomplish": [235, 239], "prepare_trilinos_repo": 235, "shepard_jenkins_run_script_pthread_intel": 235, "white_run_jenkins_script_cuda": 235, "white_run_jenkins_script_omp": 235, "test_kokkos_master_develop_promot": 235, "checkintest": 235, "flavor": 235, "speed": 235, "central": 235, "equat": 235, "viz": 235, "accuraci": 235, "replica": 235, "nearli": 235, "hundr": 235, "unit_test": 235, "performance_test": 235, "perf_test": 235, "scrutini": 235, "inadequaci": 235, "defici": 235, "halo": 236, "averag": 236, "interop": [236, 247], "window": 236, "demonstr": [237, 238, 239, 242], "quantiti": 237, "ratio": 237, "ultim": 237, "count_adjacent_el": 237, "elements_to_nod": 237, "number_of_nod": 237, "elements_per_nod": 237, "scatter_elements_per_nod": 237, "create_scatter_view": 237, "access_elements_per_nod": 237, "node_of_el": 237, "sum_to_nod": 237, "element_valu": 237, "node_valu": 237, "scatter_node_valu": 237, "access_node_valu": 237, "average_to_nod": 237, "flcl": 238, "daxpi": 238, "ndarrai": 238, "flcl_ndarray_t": 238, "dope": 238, "flatten": [238, 239], "_flcl_nd_array_t": 238, "flcl_ndarray_max_rank": 238, "f90": 238, "nd_array_t": 238, "c_size_t": 238, "nd_array_max_rank": 238, "c_ptr": 238, "procedur": 238, "to_nd_arrai": 238, "to_nd_array_l_1d": 238, "to_nd_array_i32_1d": 238, "to_nd_array_i64_1d": 238, "to_nd_array_r32_1d": 238, "to_nd_array_r64_1d": 238, "to_nd_array_l_2d": 238, "to_nd_array_i32_2d": 238, "to_nd_array_i64_2d": 238, "to_nd_array_r32_2d": 238, "to_nd_array_r64_2d": 238, "to_nd_array_l_3d": 238, "to_nd_array_i32_3d": 238, "to_nd_array_i64_3d": 238, "to_nd_array_r32_3d": 238, "to_nd_array_r64_3d": 238, "view_from_ndarrai": 238, "axpi": 238, "flcl_mod": 238, "c_doubl": 238, "allocat": 238, "f_y": 238, "c_y": 238, "alpha": 238, "subroutin": 238, "iso_c_bind": 238, "inout": 238, "f_axpi": 238, "nd_arrai": 238, "earlier": 238, "c_axpi": 238, "nd_array_i": 238, "nd_array_x": 238, "tensor": 239, "pde": 239, "inputdata": 239, "inputfield": 239, "outputfield": 239, "tripl": 239, "paral": 239, "for_all_cel": 239, "merit": 239, "notion": 239, "natur": 239, "mdr_for_all_cel": 239, "wiki": 239, "intrepid2": 239, "intrepid2_arraytoolsdef": 239, "intrepid": 239, "complementari": 240, "scalabl": 240, "walk": 240, "source_rank": 240, "destination_rank": 240, "number_of_doubl": 240, "my_rank": 240, "mpi_comm": 240, "comm": 240, "mpi_comm_world": 240, "mpi_comm_rank": 240, "mpi_send": 240, "mpi_doubl": 240, "mpi_recv": 240, "quit": 240, "pcie": 240, "unstructur": 240, "redudantli": 240, "filter": 240, "subset_scann": 240, "keys_in": 240, "desired_key_in": 240, "subset_indices_in": 240, "m_kei": 240, "m_desired_kei": 240, "m_subset_indic": 240, "final_pass": 240, "is_in": 240, "find_subset": 240, "desired_kei": 240, "subset_s": 240, "local_sum": 240, "subset_indic": 240, "transmit": 240, "pack_messag": 240, "all_element_data": 240, "tediou": 241, "appar": 241, "acess": 241, "myview": 241, "c_style_memori": 241, "c_style_alloc": 241, "concur": 242, "stagger": 242, "littl": 242, "hostexecspac": 242, "deviceexecspac": 242, "device_range_polici": 242, "host_range_polici": 242, "viewvectortyp": 242, "viewmatrixtyp": 242, "xval": 242, "init_src_view": 242, "p_x": 242, "p_a": 242, "init_a": 242, "init_x": 242, "h_x": 242, "h_y": 242, "nrepeat": 242, "synch": 242, "yax": 242, "temp2": 242, "ini_src_view": 242, "occupi": 242, "attent": 242, "paid": 242, "opportun": [242, 244], "range_polici": 242, "v_r": 242, "v_r1": 242, "h_v": 242, "get_initial_st": 242, "get_rhs_func": 242, "serialize_st": 242, "view_r": 242, "exhibit": 243, "cabana_soa": 243, "vectorlength": 243, "membertyp": 243, "cabana_aosoa": 243, "memorymanag": 243, "evolut": 244, "particleinteract": 244, "particleposit": 244, "po": 244, "particleforc": 244, "particleneighbor": 244, "pairforc": 244, "parallelis": 244, "rectifi": 244, "qualiti": 244, "plai": 244, "tagphase1": 244, "tagphase2": 244, "compute1": 244, "compute2": 244, "prescrib": 245, "predetermin": 245, "surrog": 245, "roll": 245, "b1": 245, "b2": 245, "b3": 245, "fib": 245, "wait_list": 245, "a_f1": 245, "b_f1": 245, "b_f2": 245, "a_f2": 245, "tm": 245, "vertex": 245, "subteam": 245, "visit": 245, "vertic": 245, "exce": 245, "threshold": 245, "unvisit": 245, "edg": 245, "greatli": 245, "nominmax": 246, "uninterpret": 246, "redefin": 246, "dnominmax": 246, "intro": 247, "multidim": 247, "safeti": 247, "pga": 247, "analysi": 247, "linear": 247, "algebra": 247, "solver": 247}, "objects": {"": [[74, 0, 1, "_CPPv4I0E6Bitset", "Bitset"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_FORWARD_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_FORWARD_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_FORWARD"], [74, 1, 1, "_CPPv4N6Bitset16BIT_SCAN_REVERSEE", "Bitset::BIT_SCAN_REVERSE"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_REVERSE_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_REVERSE_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_FORWARD"], [74, 2, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset"], [74, 3, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset::arg_size"], [74, 4, 1, "_CPPv4I0E6Bitset", "Bitset::Device"], [74, 1, 1, "_CPPv4N6Bitset18MOVE_HINT_BACKWARDE", "Bitset::MOVE_HINT_BACKWARD"], [74, 2, 1, "_CPPv4N6Bitset5clearEv", "Bitset::clear"], [74, 2, 1, "_CPPv4NK6Bitset5countEv", "Bitset::count"], [74, 2, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset12is_allocatedEv", "Bitset::is_allocated"], [74, 2, 1, "_CPPv4NK6Bitset8max_hintEv", "Bitset::max_hint"], [74, 2, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset"], [74, 2, 1, "_CPPv4N6Bitset5resetEv", "Bitset::reset"], [74, 3, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset::i"], [74, 2, 1, "_CPPv4N6Bitset3setEj", "Bitset::set"], [74, 2, 1, "_CPPv4N6Bitset3setEv", "Bitset::set"], [74, 3, 1, "_CPPv4N6Bitset3setEj", "Bitset::set::i"], [74, 2, 1, "_CPPv4NK6Bitset4sizeEv", "Bitset::size"], [74, 2, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test"], [74, 3, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test::i"], [74, 0, 1, "_CPPv4I0E11ConstBitset", "ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetEv", "ConstBitset::ConstBitset"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset::rhs"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset::rhs"], [74, 4, 1, "_CPPv4I0E11ConstBitset", "ConstBitset::Device"], [74, 2, 1, "_CPPv4NK11ConstBitset5countEv", "ConstBitset::count"], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator="], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator="], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator=::rhs"], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator=::rhs"], [74, 2, 1, "_CPPv4NK11ConstBitset4sizeEv", "ConstBitset::size"], [74, 2, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test"], [74, 3, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test::i"], [188, 5, 1, "_CPPv410HostMirror", "HostMirror"], [148, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [148, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [148, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [148, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [148, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [148, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [148, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [148, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [148, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::name"], [148, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [148, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [150, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [150, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [150, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [150, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [150, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [150, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [150, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [150, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [150, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [150, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [150, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [150, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [150, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [150, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [150, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [150, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [150, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [150, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [150, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::name"], [150, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::name"], [150, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [150, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [150, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [150, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [150, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [150, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [184, 0, 1, "_CPPv412LayoutStride", "LayoutStride"], [134, 0, 1, "_CPPv410ScopeGuard", "ScopeGuard"], [134, 2, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard"], [134, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK10ScopeGuard", "ScopeGuard::ScopeGuard"], [134, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard"], [134, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERR10ScopeGuard", "ScopeGuard::ScopeGuard"], [134, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard"], [134, 4, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::Args"], [134, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argc"], [134, 3, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::args"], [134, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard::arguments"], [134, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argv"], [134, 2, 1, "_CPPv4N10ScopeGuardaSERK10ScopeGuard", "ScopeGuard::operator="], [134, 2, 1, "_CPPv4N10ScopeGuardaSERR10ScopeGuard", "ScopeGuard::operator="], [134, 2, 1, "_CPPv4N10ScopeGuardD0Ev", "ScopeGuard::~ScopeGuard"], [188, 5, 1, "_CPPv412array_layout", "array_layout"], [188, 5, 1, "_CPPv415const_data_type", "const_data_type"], [188, 5, 1, "_CPPv423const_scalar_array_type", "const_scalar_array_type"], [188, 5, 1, "_CPPv410const_type", "const_type"], [188, 5, 1, "_CPPv416const_value_type", "const_value_type"], [188, 5, 1, "_CPPv49data_type", "data_type"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::src"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::src"], [188, 5, 1, "_CPPv411device_type", "device_type"], [188, 5, 1, "_CPPv49dimension", "dimension"], [188, 5, 1, "_CPPv415execution_space", "execution_space"], [188, 5, 1, "_CPPv417host_mirror_space", "host_mirror_space"], [188, 5, 1, "_CPPv412memory_space", "memory_space"], [188, 5, 1, "_CPPv413memory_traits", "memory_traits"], [188, 5, 1, "_CPPv419non_const_data_type", "non_const_data_type"], [188, 5, 1, "_CPPv427non_const_scalar_array_type", "non_const_scalar_array_type"], [188, 5, 1, "_CPPv414non_const_type", "non_const_type"], [188, 5, 1, "_CPPv420non_const_value_type", "non_const_value_type"], [188, 5, 1, "_CPPv412pointer_type", "pointer_type"], [188, 5, 1, "_CPPv414reference_type", "reference_type"], [188, 5, 1, "_CPPv417scalar_array_type", "scalar_array_type"], [188, 5, 1, "_CPPv49size_type", "size_type"], [188, 5, 1, "_CPPv410specialize", "specialize"], [188, 5, 1, "_CPPv410value_type", "value_type"], [189, 6, 1, "_CPPv410ALLOC_PROP", "ALLOC_PROP"], [110, 7, 1, "_CPPv4I00E4BAnd", "BAnd"], [110, 8, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd"], [110, 8, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd"], [110, 9, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd::value_"], [110, 9, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd::value_"], [110, 10, 1, "_CPPv4I00E4BAnd", "BAnd::Scalar"], [110, 10, 1, "_CPPv4I00E4BAnd", "BAnd::Space"], [110, 8, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init"], [110, 9, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init::val"], [110, 8, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join"], [110, 9, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::dest"], [110, 9, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::src"], [110, 6, 1, "_CPPv4N4BAnd7reducerE", "BAnd::reducer"], [110, 8, 1, "_CPPv4NK4BAnd9referenceEv", "BAnd::reference"], [110, 6, 1, "_CPPv4N4BAnd16result_view_typeE", "BAnd::result_view_type"], [110, 6, 1, "_CPPv4N4BAnd10value_typeE", "BAnd::value_type"], [110, 8, 1, "_CPPv4NK4BAnd4viewEv", "BAnd::view"], [111, 7, 1, "_CPPv4I00E3BOr", "BOr"], [111, 8, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr"], [111, 8, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr"], [111, 9, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr::value_"], [111, 9, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr::value_"], [111, 10, 1, "_CPPv4I00E3BOr", "BOr::Scalar"], [111, 10, 1, "_CPPv4I00E3BOr", "BOr::Space"], [111, 8, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init"], [111, 9, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init::val"], [111, 8, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join"], [111, 9, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::dest"], [111, 9, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::src"], [111, 6, 1, "_CPPv4N3BOr7reducerE", "BOr::reducer"], [111, 8, 1, "_CPPv4NK3BOr9referenceEv", "BOr::reference"], [111, 6, 1, "_CPPv4N3BOr16result_view_typeE", "BOr::result_view_type"], [111, 6, 1, "_CPPv4N3BOr10value_typeE", "BOr::value_type"], [111, 8, 1, "_CPPv4NK3BOr4viewEv", "BOr::view"], [154, 11, 1, "_CPPv49ChunkSizei", "ChunkSize"], [154, 9, 1, "_CPPv49ChunkSizei", "ChunkSize::value_"], [228, 7, 1, "_CPPv4I0DpE10CoolerView", "CoolerView"], [228, 11, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView"], [228, 9, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView::rhs"], [228, 10, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::DataType"], [228, 10, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::Traits"], [228, 6, 1, "_CPPv4N10CoolerView9data_typeE", "CoolerView::data_type"], [228, 11, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo"], [228, 10, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::U"], [228, 9, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::x"], [228, 6, 1, "_CPPv4N10CoolerView6foobarE", "CoolerView::foobar"], [228, 6, 1, "_CPPv4N10CoolerView6foobatE", "CoolerView::foobat"], [228, 12, 1, "_CPPv4N10CoolerView8some_varE", "CoolerView::some_var"], [228, 11, 1, "_CPPv4N10CoolerViewD0Ev", "CoolerView::~CoolerView"], [75, 7, 1, "_CPPv4I0000E8DualView", "DualView"], [75, 10, 1, "_CPPv4I0000E8DualView", "DualView::Arg1Type"], [75, 10, 1, "_CPPv4I0000E8DualView", "DualView::Arg2Type"], [75, 10, 1, "_CPPv4I0000E8DualView", "DualView::Arg3Type"], [75, 10, 1, "_CPPv4I0000E8DualView", "DualView::DataType"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewEv", "DualView::DualView"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::arg0"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::arg_prop"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::args"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::d_view_"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::h_view_"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::label"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK10ALLOC_PROPK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 9, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::src"], [75, 9, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView::src"], [75, 11, 1, "_CPPv4N8DualView16clear_sync_stateEv", "DualView::clear_sync_state"], [75, 12, 1, "_CPPv4N8DualView6d_viewE", "DualView::d_view"], [75, 8, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent"], [75, 10, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::iType"], [75, 9, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::r"], [75, 8, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int"], [75, 10, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::iType"], [75, 9, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::r"], [75, 11, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side"], [75, 10, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side::Device"], [75, 12, 1, "_CPPv4N8DualView6h_viewE", "DualView::h_view"], [75, 6, 1, "_CPPv4N8DualView17host_mirror_spaceE", "DualView::host_mirror_space"], [75, 11, 1, "_CPPv4NK8DualView12is_allocatedEv", "DualView::is_allocated"], [75, 12, 1, "_CPPv4N8DualView15modified_deviceE", "DualView::modified_device"], [75, 12, 1, "_CPPv4N8DualView14modified_flagsE", "DualView::modified_flags"], [75, 12, 1, "_CPPv4N8DualView13modified_hostE", "DualView::modified_host"], [75, 11, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify"], [75, 10, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify::Device"], [75, 11, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync"], [75, 10, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync::Device"], [75, 11, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n0"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n1"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n2"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n3"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n4"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n5"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n6"], [75, 9, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n7"], [75, 11, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n0"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n1"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n2"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n3"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n4"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n5"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n6"], [75, 9, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n7"], [75, 8, 1, "_CPPv4NK8DualView4spanEv", "DualView::span"], [75, 8, 1, "_CPPv4N8DualView18span_is_contiguousEv", "DualView::span_is_contiguous"], [75, 11, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride"], [75, 10, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::iType"], [75, 9, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::stride_"], [75, 11, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 11, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 10, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 10, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 6, 1, "_CPPv4N8DualView5t_devE", "DualView::t_dev"], [75, 6, 1, "_CPPv4N8DualView11t_dev_constE", "DualView::t_dev_const"], [75, 6, 1, "_CPPv4N8DualView22t_dev_const_randomreadE", "DualView::t_dev_const_randomread"], [75, 6, 1, "_CPPv4N8DualView25t_dev_const_randomread_umE", "DualView::t_dev_const_randomread_um"], [75, 6, 1, "_CPPv4N8DualView14t_dev_const_umE", "DualView::t_dev_const_um"], [75, 6, 1, "_CPPv4N8DualView8t_dev_umE", "DualView::t_dev_um"], [75, 6, 1, "_CPPv4N8DualView6t_hostE", "DualView::t_host"], [75, 6, 1, "_CPPv4N8DualView12t_host_constE", "DualView::t_host_const"], [75, 6, 1, "_CPPv4N8DualView23t_host_const_randomreadE", "DualView::t_host_const_randomread"], [75, 6, 1, "_CPPv4N8DualView26t_host_const_randomread_umE", "DualView::t_host_const_randomread_um"], [75, 6, 1, "_CPPv4N8DualView15t_host_const_umE", "DualView::t_host_const_um"], [75, 6, 1, "_CPPv4N8DualView9t_host_umE", "DualView::t_host_um"], [75, 6, 1, "_CPPv4N8DualView15t_modified_flagE", "DualView::t_modified_flag"], [75, 6, 1, "_CPPv4N8DualView16t_modified_flagsE", "DualView::t_modified_flags"], [75, 6, 1, "_CPPv4N8DualView6traitsE", "DualView::traits"], [75, 8, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view"], [75, 10, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view::Device"], [76, 7, 1, "_CPPv4I0000E11DynRankView", "DynRankView"], [76, 10, 1, "_CPPv4I0000E11DynRankView", "DynRankView::DataType"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewEv", "DynRankView::DynRankView"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::args"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::layout"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::layout"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::layout"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::layout"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::name"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::name"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::prop"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::prop"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::ptr"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::ptr"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView::rhs"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::rhs"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView::rhs"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView::rhs"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::space"], [76, 9, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::space"], [76, 6, 1, "_CPPv4N11DynRankView10HostMirrorE", "DynRankView::HostMirror"], [76, 10, 1, "_CPPv4I0000E11DynRankView", "DynRankView::LayoutType"], [76, 10, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemorySpace"], [76, 10, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemoryTraits"], [76, 11, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access"], [76, 9, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i0"], [76, 9, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i1"], [76, 9, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i2"], [76, 9, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i3"], [76, 9, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i4"], [76, 9, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i5"], [76, 9, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i6"], [76, 6, 1, "_CPPv4N11DynRankView12array_layoutE", "DynRankView::array_layout"], [76, 6, 1, "_CPPv4N11DynRankView15const_data_typeE", "DynRankView::const_data_type"], [76, 6, 1, "_CPPv4N11DynRankView23const_scalar_array_typeE", "DynRankView::const_scalar_array_type"], [76, 6, 1, "_CPPv4N11DynRankView10const_typeE", "DynRankView::const_type"], [76, 6, 1, "_CPPv4N11DynRankView16const_value_typeE", "DynRankView::const_value_type"], [76, 11, 1, "_CPPv4NK11DynRankView4dataEv", "DynRankView::data"], [76, 6, 1, "_CPPv4N11DynRankView9data_typeE", "DynRankView::data_type"], [76, 6, 1, "_CPPv4N11DynRankView11device_typeE", "DynRankView::device_type"], [76, 6, 1, "_CPPv4N11DynRankView9dimensionE", "DynRankView::dimension"], [76, 6, 1, "_CPPv4N11DynRankView15execution_spaceE", "DynRankView::execution_space"], [76, 11, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::dim"], [76, 10, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::iType"], [76, 11, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int"], [76, 9, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::dim"], [76, 10, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::iType"], [76, 6, 1, "_CPPv4N11DynRankView17host_mirror_spaceE", "DynRankView::host_mirror_space"], [76, 11, 1, "_CPPv4NK11DynRankView12is_allocatedEv", "DynRankView::is_allocated"], [76, 11, 1, "_CPPv4NK11DynRankView5labelEv", "DynRankView::label"], [76, 11, 1, "_CPPv4NK11DynRankView6layoutEv", "DynRankView::layout"], [76, 6, 1, "_CPPv4N11DynRankView12memory_spaceE", "DynRankView::memory_space"], [76, 6, 1, "_CPPv4N11DynRankView13memory_traitsE", "DynRankView::memory_traits"], [76, 6, 1, "_CPPv4N11DynRankView19non_const_data_typeE", "DynRankView::non_const_data_type"], [76, 6, 1, "_CPPv4N11DynRankView27non_const_scalar_array_typeE", "DynRankView::non_const_scalar_array_type"], [76, 6, 1, "_CPPv4N11DynRankView14non_const_typeE", "DynRankView::non_const_type"], [76, 6, 1, "_CPPv4N11DynRankView20non_const_value_typeE", "DynRankView::non_const_value_type"], [76, 11, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()"], [76, 9, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()::indices"], [76, 6, 1, "_CPPv4N11DynRankView12pointer_typeE", "DynRankView::pointer_type"], [76, 11, 1, "_CPPv4NK11DynRankView4rankEv", "DynRankView::rank"], [76, 6, 1, "_CPPv4N11DynRankView14reference_typeE", "DynRankView::reference_type"], [76, 11, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size"], [76, 11, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N0"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N1"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N2"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N3"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N4"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N5"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N6"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N7"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N8"], [76, 9, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size::layout"], [76, 6, 1, "_CPPv4N11DynRankView17scalar_array_typeE", "DynRankView::scalar_array_type"], [76, 6, 1, "_CPPv4N11DynRankView9size_typeE", "DynRankView::size_type"], [76, 11, 1, "_CPPv4NK11DynRankView4spanEv", "DynRankView::span"], [76, 11, 1, "_CPPv4NK11DynRankView18span_is_contiguousEv", "DynRankView::span_is_contiguous"], [76, 6, 1, "_CPPv4N11DynRankView10specializeE", "DynRankView::specialize"], [76, 11, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::dim"], [76, 10, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::iType"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_0Ev", "DynRankView::stride_0"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_1Ev", "DynRankView::stride_1"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_2Ev", "DynRankView::stride_2"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_3Ev", "DynRankView::stride_3"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_4Ev", "DynRankView::stride_4"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_5Ev", "DynRankView::stride_5"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_6Ev", "DynRankView::stride_6"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_7Ev", "DynRankView::stride_7"], [76, 11, 1, "_CPPv4NK11DynRankView9use_countEv", "DynRankView::use_count"], [76, 6, 1, "_CPPv4N11DynRankView10value_typeE", "DynRankView::value_type"], [77, 7, 1, "_CPPv4I0DpE11DynamicView", "DynamicView"], [77, 10, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::DataType"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewEv", "DynamicView::DynamicView"], [77, 9, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::arg_label"], [77, 9, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::max_extent"], [77, 9, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::min_chunk_size"], [77, 9, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView::rhs"], [77, 9, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView::rhs"], [77, 6, 1, "_CPPv4N11DynamicView10HostMirrorE", "DynamicView::HostMirror"], [77, 10, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::P"], [77, 8, 1, "_CPPv4NK11DynamicView17allocation_extentEv", "DynamicView::allocation_extent"], [77, 6, 1, "_CPPv4N11DynamicView10array_typeE", "DynamicView::array_type"], [77, 8, 1, "_CPPv4NK11DynamicView10chunk_sizeEv", "DynamicView::chunk_size"], [77, 6, 1, "_CPPv4N11DynamicView10const_typeE", "DynamicView::const_type"], [77, 8, 1, "_CPPv4NK11DynamicView4dataEv", "DynamicView::data"], [77, 8, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::dim"], [77, 10, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::iType"], [77, 8, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int"], [77, 9, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::dim"], [77, 10, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::iType"], [77, 11, 1, "_CPPv4NK11DynamicView12is_allocatedEv", "DynamicView::is_allocated"], [77, 11, 1, "_CPPv4N11DynamicView5labelEv", "DynamicView::label"], [77, 6, 1, "_CPPv4N11DynamicView14non_const_typeE", "DynamicView::non_const_type"], [77, 8, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()"], [77, 9, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::args"], [77, 9, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::i0"], [77, 6, 1, "_CPPv4N11DynamicView12pointer_typeE", "DynamicView::pointer_type"], [77, 6, 1, "_CPPv4N11DynamicView14reference_typeE", "DynamicView::reference_type"], [77, 12, 1, "_CPPv4N11DynamicView34reference_type_is_lvalue_referenceE", "DynamicView::reference_type_is_lvalue_reference"], [77, 11, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial"], [77, 10, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::IntType"], [77, 9, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::n"], [77, 8, 1, "_CPPv4NK11DynamicView4sizeEv", "DynamicView::size"], [77, 8, 1, "_CPPv4NK11DynamicView4spanEv", "DynamicView::span"], [77, 8, 1, "_CPPv4NK11DynamicView18span_is_contiguousEv", "DynamicView::span_is_contiguous"], [77, 8, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::dim"], [77, 10, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::iType"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_0Ev", "DynamicView::stride_0"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_1Ev", "DynamicView::stride_1"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_2Ev", "DynamicView::stride_2"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_3Ev", "DynamicView::stride_3"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_4Ev", "DynamicView::stride_4"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_5Ev", "DynamicView::stride_5"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_6Ev", "DynamicView::stride_6"], [77, 8, 1, "_CPPv4NK11DynamicView8stride_7Ev", "DynamicView::stride_7"], [77, 6, 1, "_CPPv4N11DynamicView6traitsE", "DynamicView::traits"], [77, 8, 1, "_CPPv4NK11DynamicView9use_countEv", "DynamicView::use_count"], [132, 7, 1, "_CPPv413InitArguments", "InitArguments"], [132, 11, 1, "_CPPv4N13InitArguments13InitArgumentsEv", "InitArguments::InitArguments"], [132, 12, 1, "_CPPv4N13InitArguments9device_idE", "InitArguments::device_id"], [132, 12, 1, "_CPPv4N13InitArguments16disable_warningsE", "InitArguments::disable_warnings"], [132, 12, 1, "_CPPv4N13InitArguments8ndevicesE", "InitArguments::ndevices"], [132, 12, 1, "_CPPv4N13InitArguments8num_numaE", "InitArguments::num_numa"], [132, 12, 1, "_CPPv4N13InitArguments11num_threadsE", "InitArguments::num_threads"], [132, 12, 1, "_CPPv4N13InitArguments11skip_deviceE", "InitArguments::skip_device"], [133, 7, 1, "_CPPv422InitializationSettings", "InitializationSettings"], [133, 11, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings"], [133, 11, 1, "_CPPv4N22InitializationSettings22InitializationSettingsEv", "InitializationSettings::InitializationSettings"], [133, 9, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings::arguments"], [133, 11, 1, "_CPPv4NK22InitializationSettings18get_PARAMETER_NAMEEv", "InitializationSettings::get_PARAMETER_NAME"], [133, 11, 1, "_CPPv4NK22InitializationSettings18has_PARAMETER_NAMEEv", "InitializationSettings::has_PARAMETER_NAME"], [133, 11, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME"], [133, 9, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME::value"], [181, 11, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [181, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [181, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [181, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [181, 11, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [181, 11, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [181, 10, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [181, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ExecSpace"], [181, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [181, 10, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [181, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [181, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [181, 10, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [181, 10, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [181, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [181, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [181, 10, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [181, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [181, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [181, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [181, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [181, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [181, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [181, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::exec_space"], [181, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::exec_space"], [181, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::exec_space"], [181, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [181, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [181, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [181, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [181, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [181, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [112, 7, 1, "_CPPv4I00E4LAnd", "LAnd"], [112, 8, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd"], [112, 8, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd"], [112, 9, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd::value_"], [112, 9, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd::value_"], [112, 10, 1, "_CPPv4I00E4LAnd", "LAnd::Scalar"], [112, 10, 1, "_CPPv4I00E4LAnd", "LAnd::Space"], [112, 8, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init"], [112, 9, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init::val"], [112, 8, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join"], [112, 9, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::dest"], [112, 9, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::src"], [112, 6, 1, "_CPPv4N4LAnd7reducerE", "LAnd::reducer"], [112, 8, 1, "_CPPv4NK4LAnd9referenceEv", "LAnd::reference"], [112, 6, 1, "_CPPv4N4LAnd16result_view_typeE", "LAnd::result_view_type"], [112, 6, 1, "_CPPv4N4LAnd10value_typeE", "LAnd::value_type"], [112, 8, 1, "_CPPv4NK4LAnd4viewEv", "LAnd::view"], [113, 7, 1, "_CPPv4I00E3LOr", "LOr"], [113, 8, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr"], [113, 8, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr"], [113, 9, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr::value_"], [113, 9, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr::value_"], [113, 10, 1, "_CPPv4I00E3LOr", "LOr::Scalar"], [113, 10, 1, "_CPPv4I00E3LOr", "LOr::Space"], [113, 8, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init"], [113, 9, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init::val"], [113, 8, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join"], [113, 9, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::dest"], [113, 9, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::src"], [113, 6, 1, "_CPPv4N3LOr7reducerE", "LOr::reducer"], [113, 8, 1, "_CPPv4NK3LOr9referenceEv", "LOr::reference"], [113, 6, 1, "_CPPv4N3LOr16result_view_typeE", "LOr::result_view_type"], [113, 6, 1, "_CPPv4N3LOr10value_typeE", "LOr::value_type"], [113, 8, 1, "_CPPv4NK3LOr4viewEv", "LOr::view"], [182, 7, 1, "_CPPv410LayoutLeft", "LayoutLeft"], [182, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftERK10LayoutLeft", "LayoutLeft::LayoutLeft"], [182, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftERR10LayoutLeft", "LayoutLeft::LayoutLeft"], [182, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft"], [182, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N0"], [182, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N1"], [182, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N2"], [182, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N3"], [182, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N4"], [182, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N5"], [182, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N6"], [182, 9, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N7"], [182, 6, 1, "_CPPv4N10LayoutLeft12array_layoutE", "LayoutLeft::array_layout"], [182, 12, 1, "_CPPv4N10LayoutLeft9dimensionE", "LayoutLeft::dimension"], [182, 12, 1, "_CPPv4N10LayoutLeft23is_extent_constructibleE", "LayoutLeft::is_extent_constructible"], [182, 11, 1, "_CPPv4N10LayoutLeftaSERK10LayoutLeft", "LayoutLeft::operator="], [182, 11, 1, "_CPPv4N10LayoutLeftaSERR10LayoutLeft", "LayoutLeft::operator="], [183, 7, 1, "_CPPv411LayoutRight", "LayoutRight"], [183, 11, 1, "_CPPv4N11LayoutRight11LayoutRightERK11LayoutRight", "LayoutRight::LayoutRight"], [183, 11, 1, "_CPPv4N11LayoutRight11LayoutRightERR11LayoutRight", "LayoutRight::LayoutRight"], [183, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight"], [183, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N0"], [183, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N1"], [183, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N2"], [183, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N3"], [183, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N4"], [183, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N5"], [183, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N6"], [183, 9, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N7"], [183, 6, 1, "_CPPv4N11LayoutRight12array_layoutE", "LayoutRight::array_layout"], [183, 12, 1, "_CPPv4N11LayoutRight9dimensionE", "LayoutRight::dimension"], [183, 12, 1, "_CPPv4N11LayoutRight23is_extent_constructibleE", "LayoutRight::is_extent_constructible"], [183, 11, 1, "_CPPv4N11LayoutRightaSERK11LayoutRight", "LayoutRight::operator="], [183, 11, 1, "_CPPv4N11LayoutRightaSERR11LayoutRight", "LayoutRight::operator="], [184, 11, 1, "_CPPv412LayoutStrideRK12LayoutStride", "LayoutStride"], [184, 11, 1, "_CPPv412LayoutStrideRR12LayoutStride", "LayoutStride"], [184, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N0"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N1"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N2"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N3"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N4"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N5"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N6"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N7"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S0"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S1"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S2"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S3"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S4"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S5"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S6"], [184, 9, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S7"], [152, 11, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [152, 11, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [152, 11, 1, "_CPPv413MDRangePolicyv", "MDRangePolicy"], [152, 11, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy"], [152, 11, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy"], [152, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::IT"], [152, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::IT"], [152, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::OT"], [152, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::OT"], [152, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::TT"], [152, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::TT"], [152, 9, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [152, 9, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [152, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::begin"], [152, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::begin"], [152, 9, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [152, 9, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [152, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::end"], [152, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::end"], [152, 9, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::tiling"], [152, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::tiling"], [114, 7, 1, "_CPPv4I00E3Max", "Max"], [114, 8, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max"], [114, 8, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max"], [114, 9, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max::value_"], [114, 9, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max::value_"], [114, 10, 1, "_CPPv4I00E3Max", "Max::Scalar"], [114, 10, 1, "_CPPv4I00E3Max", "Max::Space"], [114, 8, 1, "_CPPv4NK3Max4initER10value_type", "Max::init"], [114, 9, 1, "_CPPv4NK3Max4initER10value_type", "Max::init::val"], [114, 8, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join"], [114, 9, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::dest"], [114, 9, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::src"], [114, 6, 1, "_CPPv4N3Max7reducerE", "Max::reducer"], [114, 8, 1, "_CPPv4NK3Max9referenceEv", "Max::reference"], [114, 6, 1, "_CPPv4N3Max16result_view_typeE", "Max::result_view_type"], [114, 6, 1, "_CPPv4N3Max10value_typeE", "Max::value_type"], [114, 8, 1, "_CPPv4NK3Max4viewEv", "Max::view"], [115, 7, 1, "_CPPv4I000E6MaxLoc", "MaxLoc"], [115, 10, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Index"], [115, 8, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc"], [115, 8, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc"], [115, 9, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc::value_"], [115, 9, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc::value_"], [115, 10, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Scalar"], [115, 10, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Space"], [115, 8, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init"], [115, 9, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init::val"], [115, 8, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join"], [115, 9, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::dest"], [115, 9, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::src"], [115, 6, 1, "_CPPv4N6MaxLoc7reducerE", "MaxLoc::reducer"], [115, 8, 1, "_CPPv4NK6MaxLoc9referenceEv", "MaxLoc::reference"], [115, 6, 1, "_CPPv4N6MaxLoc16result_view_typeE", "MaxLoc::result_view_type"], [115, 6, 1, "_CPPv4N6MaxLoc10value_typeE", "MaxLoc::value_type"], [115, 8, 1, "_CPPv4NK6MaxLoc4viewEv", "MaxLoc::view"], [116, 7, 1, "_CPPv4I00E3Min", "Min"], [116, 8, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min"], [116, 8, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min"], [116, 9, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min::value_"], [116, 9, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min::value_"], [116, 10, 1, "_CPPv4I00E3Min", "Min::Scalar"], [116, 10, 1, "_CPPv4I00E3Min", "Min::Space"], [116, 8, 1, "_CPPv4NK3Min4initER10value_type", "Min::init"], [116, 9, 1, "_CPPv4NK3Min4initER10value_type", "Min::init::val"], [116, 8, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join"], [116, 9, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::dest"], [116, 9, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::src"], [116, 6, 1, "_CPPv4N3Min7reducerE", "Min::reducer"], [116, 8, 1, "_CPPv4NK3Min9referenceEv", "Min::reference"], [116, 6, 1, "_CPPv4N3Min16result_view_typeE", "Min::result_view_type"], [116, 6, 1, "_CPPv4N3Min10value_typeE", "Min::value_type"], [116, 8, 1, "_CPPv4NK3Min4viewEv", "Min::view"], [117, 7, 1, "_CPPv4I000E6MinLoc", "MinLoc"], [117, 10, 1, "_CPPv4I000E6MinLoc", "MinLoc::Index"], [117, 8, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc"], [117, 8, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc"], [117, 9, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc::value_"], [117, 9, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc::value_"], [117, 10, 1, "_CPPv4I000E6MinLoc", "MinLoc::Scalar"], [117, 10, 1, "_CPPv4I000E6MinLoc", "MinLoc::Space"], [117, 8, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init"], [117, 9, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init::val"], [117, 8, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join"], [117, 9, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::dest"], [117, 9, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::src"], [117, 6, 1, "_CPPv4N6MinLoc7reducerE", "MinLoc::reducer"], [117, 8, 1, "_CPPv4NK6MinLoc9referenceEv", "MinLoc::reference"], [117, 6, 1, "_CPPv4N6MinLoc16result_view_typeE", "MinLoc::result_view_type"], [117, 6, 1, "_CPPv4N6MinLoc10value_typeE", "MinLoc::value_type"], [117, 8, 1, "_CPPv4NK6MinLoc4viewEv", "MinLoc::view"], [118, 7, 1, "_CPPv4I00E6MinMax", "MinMax"], [118, 8, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax"], [118, 8, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax"], [118, 9, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax::value_"], [118, 9, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax::value_"], [118, 10, 1, "_CPPv4I00E6MinMax", "MinMax::Scalar"], [118, 10, 1, "_CPPv4I00E6MinMax", "MinMax::Space"], [118, 8, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init"], [118, 9, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init::val"], [118, 8, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join"], [118, 9, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::dest"], [118, 9, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::src"], [118, 6, 1, "_CPPv4N6MinMax7reducerE", "MinMax::reducer"], [118, 8, 1, "_CPPv4NK6MinMax9referenceEv", "MinMax::reference"], [118, 6, 1, "_CPPv4N6MinMax16result_view_typeE", "MinMax::result_view_type"], [118, 6, 1, "_CPPv4N6MinMax10value_typeE", "MinMax::value_type"], [118, 8, 1, "_CPPv4NK6MinMax4viewEv", "MinMax::view"], [119, 7, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc"], [119, 8, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc"], [119, 8, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc"], [119, 9, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc::value_"], [119, 9, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc::value_"], [119, 10, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Scalar"], [119, 10, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Space"], [119, 8, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init"], [119, 9, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init::val"], [119, 8, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join"], [119, 9, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::dest"], [119, 9, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::src"], [119, 6, 1, "_CPPv4N9MinMaxLoc7reducerE", "MinMaxLoc::reducer"], [119, 8, 1, "_CPPv4NK9MinMaxLoc9referenceEv", "MinMaxLoc::reference"], [119, 6, 1, "_CPPv4N9MinMaxLoc16result_view_typeE", "MinMaxLoc::result_view_type"], [119, 6, 1, "_CPPv4N9MinMaxLoc10value_typeE", "MinMaxLoc::value_type"], [119, 8, 1, "_CPPv4NK9MinMaxLoc4viewEv", "MinMaxLoc::view"], [120, 7, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar"], [120, 10, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Index"], [120, 10, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Scalar"], [120, 12, 1, "_CPPv4N15MinMaxLocScalar7max_locE", "MinMaxLocScalar::max_loc"], [120, 12, 1, "_CPPv4N15MinMaxLocScalar7max_valE", "MinMaxLocScalar::max_val"], [120, 12, 1, "_CPPv4N15MinMaxLocScalar7min_locE", "MinMaxLocScalar::min_loc"], [120, 12, 1, "_CPPv4N15MinMaxLocScalar7min_valE", "MinMaxLocScalar::min_val"], [120, 11, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator="], [120, 9, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator=::rhs"], [121, 7, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar"], [121, 10, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar::Scalar"], [121, 12, 1, "_CPPv4N12MinMaxScalar7max_valE", "MinMaxScalar::max_val"], [121, 12, 1, "_CPPv4N12MinMaxScalar7min_valE", "MinMaxScalar::min_val"], [121, 11, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator="], [121, 9, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator=::rhs"], [153, 11, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam"], [153, 9, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam::team"], [153, 11, 1, "_CPPv49PerThread14TeamMemberType", "PerThread"], [153, 9, 1, "_CPPv49PerThread14TeamMemberType", "PerThread::team"], [122, 7, 1, "_CPPv4I00E4Prod", "Prod"], [122, 8, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod"], [122, 8, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod"], [122, 9, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod::value_"], [122, 9, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod::value_"], [122, 10, 1, "_CPPv4I00E4Prod", "Prod::Scalar"], [122, 10, 1, "_CPPv4I00E4Prod", "Prod::Space"], [122, 8, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init"], [122, 9, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init::val"], [122, 8, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join"], [122, 9, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::dest"], [122, 9, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::src"], [122, 6, 1, "_CPPv4N4Prod7reducerE", "Prod::reducer"], [122, 8, 1, "_CPPv4NK4Prod9referenceEv", "Prod::reference"], [122, 6, 1, "_CPPv4N4Prod16result_view_typeE", "Prod::result_view_type"], [122, 6, 1, "_CPPv4N4Prod10value_typeE", "Prod::value_type"], [122, 8, 1, "_CPPv4NK4Prod4viewEv", "Prod::view"], [163, 11, 1, "_CPPv416ProfilingSectionRKNSt6stringE", "ProfilingSection"], [163, 9, 1, "_CPPv416ProfilingSectionRKNSt6stringE", "ProfilingSection::sectionName"], [154, 11, 1, "_CPPv411RangePolicy7int64_t7int64_t", "RangePolicy"], [154, 11, 1, "_CPPv411RangePolicy7int64_t7int64_t9ChunkSize", "RangePolicy"], [154, 11, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t", "RangePolicy"], [154, 11, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy"], [154, 11, 1, "_CPPv411RangePolicyv", "RangePolicy"], [154, 9, 1, "_CPPv411RangePolicy7int64_t7int64_t", "RangePolicy::begin"], [154, 9, 1, "_CPPv411RangePolicy7int64_t7int64_t9ChunkSize", "RangePolicy::begin"], [154, 9, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t", "RangePolicy::begin"], [154, 9, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy::begin"], [154, 9, 1, "_CPPv411RangePolicy7int64_t7int64_t9ChunkSize", "RangePolicy::chunk_size"], [154, 9, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy::chunk_size"], [154, 9, 1, "_CPPv411RangePolicy7int64_t7int64_t", "RangePolicy::end"], [154, 9, 1, "_CPPv411RangePolicy7int64_t7int64_t9ChunkSize", "RangePolicy::end"], [154, 9, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t", "RangePolicy::end"], [154, 9, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy::end"], [154, 9, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t", "RangePolicy::space"], [154, 9, 1, "_CPPv411RangePolicyRK14ExecutionSpace7int64_t7int64_t9ChunkSize", "RangePolicy::space"], [123, 8, 1, "_CPPv47ReducerR10value_type", "Reducer"], [123, 8, 1, "_CPPv47ReducerRK16result_view_type", "Reducer"], [123, 9, 1, "_CPPv47ReducerR10value_type", "Reducer::value_"], [123, 9, 1, "_CPPv47ReducerRK16result_view_type", "Reducer::value_"], [79, 7, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView"], [79, 10, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::DataType"], [79, 10, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::ExecSpace"], [79, 10, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Layout"], [79, 10, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Op"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERK10ALLOC_PROPDp4Dims", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERK4ViewI2RTDp2RPE", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewEv", "ScatterView::ScatterView"], [79, 9, 1, "_CPPv4N11ScatterView11ScatterViewERK10ALLOC_PROPDp4Dims", "ScatterView::ScatterView::arg_prop"], [79, 9, 1, "_CPPv4N11ScatterView11ScatterViewERK10ALLOC_PROPDp4Dims", "ScatterView::ScatterView::dims"], [79, 9, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::dims"], [79, 9, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::name"], [79, 11, 1, "_CPPv4NK11ScatterView6accessEv", "ScatterView::access"], [79, 11, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into"], [79, 9, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into::dest"], [79, 10, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::contribution"], [79, 6, 1, "_CPPv4N11ScatterView14data_type_infoE", "ScatterView::data_type_info"], [79, 6, 1, "_CPPv4N11ScatterView18internal_data_typeE", "ScatterView::internal_data_type"], [79, 6, 1, "_CPPv4N11ScatterView18internal_view_typeE", "ScatterView::internal_view_type"], [79, 11, 1, "_CPPv4NK11ScatterView12is_allocatedEv", "ScatterView::is_allocated"], [79, 6, 1, "_CPPv4N11ScatterView23original_reference_typeE", "ScatterView::original_reference_type"], [79, 6, 1, "_CPPv4N11ScatterView19original_value_typeE", "ScatterView::original_value_type"], [79, 6, 1, "_CPPv4N11ScatterView18original_view_typeE", "ScatterView::original_view_type"], [79, 11, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n0"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n1"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n2"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n3"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n4"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n5"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n6"], [79, 9, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n7"], [79, 11, 1, "_CPPv4N11ScatterView5resetEv", "ScatterView::reset"], [79, 11, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except"], [79, 9, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except::view"], [79, 11, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n0"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n1"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n2"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n3"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n4"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n5"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n6"], [79, 9, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n7"], [79, 11, 1, "_CPPv4NK11ScatterView7subviewEv", "ScatterView::subview"], [164, 11, 1, "_CPPv412ScopedRegionRKNSt6stringE", "ScopedRegion"], [164, 9, 1, "_CPPv412ScopedRegionRKNSt6stringE", "ScopedRegion::regionName"], [189, 6, 1, "_CPPv418SequentialHostInit", "SequentialHostInit"], [125, 7, 1, "_CPPv4I00E3Sum", "Sum"], [125, 10, 1, "_CPPv4I00E3Sum", "Sum::Scalar"], [125, 10, 1, "_CPPv4I00E3Sum", "Sum::Space"], [125, 8, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum"], [125, 8, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum"], [125, 9, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum::value_"], [125, 9, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum::value_"], [125, 8, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init"], [125, 9, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init::val"], [125, 8, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join"], [125, 9, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::dest"], [125, 9, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::src"], [125, 6, 1, "_CPPv4N3Sum7reducerE", "Sum::reducer"], [125, 8, 1, "_CPPv4NK3Sum9referenceEv", "Sum::reference"], [125, 6, 1, "_CPPv4N3Sum16result_view_typeE", "Sum::result_view_type"], [125, 6, 1, "_CPPv4N3Sum10value_typeE", "Sum::value_type"], [125, 8, 1, "_CPPv4NK3Sum4viewEv", "Sum::view"], [155, 7, 1, "_CPPv417TeamHandleConcept", "TeamHandleConcept"], [155, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERK17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [155, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERR17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [155, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptEv", "TeamHandleConcept::TeamHandleConcept"], [155, 6, 1, "_CPPv4N17TeamHandleConcept15execution_spaceE", "TeamHandleConcept::execution_space"], [155, 8, 1, "_CPPv4NK17TeamHandleConcept11league_rankEv", "TeamHandleConcept::league_rank"], [155, 8, 1, "_CPPv4NK17TeamHandleConcept11league_sizeEv", "TeamHandleConcept::league_size"], [155, 11, 1, "_CPPv4N17TeamHandleConceptaSERK17TeamHandleConcept", "TeamHandleConcept::operator="], [155, 11, 1, "_CPPv4N17TeamHandleConceptaSERR17TeamHandleConcept", "TeamHandleConcept::operator="], [155, 6, 1, "_CPPv4N17TeamHandleConcept20scratch_memory_spaceE", "TeamHandleConcept::scratch_memory_space"], [155, 8, 1, "_CPPv4NK17TeamHandleConcept12team_barrierEv", "TeamHandleConcept::team_barrier"], [155, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast"], [155, 8, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast"], [155, 10, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::Closure"], [155, 10, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::T"], [155, 10, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::T"], [155, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::f"], [155, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [155, 9, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [155, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::value"], [155, 9, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::value"], [155, 8, 1, "_CPPv4NK17TeamHandleConcept9team_rankEv", "TeamHandleConcept::team_rank"], [155, 8, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce"], [155, 10, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::ReducerType"], [155, 9, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::reducer"], [155, 8, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan"], [155, 10, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::T"], [155, 9, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::global"], [155, 9, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::value"], [155, 8, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch"], [155, 9, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch::level"], [155, 8, 1, "_CPPv4NK17TeamHandleConcept10team_shmemEv", "TeamHandleConcept::team_shmem"], [155, 8, 1, "_CPPv4NK17TeamHandleConcept9team_sizeEv", "TeamHandleConcept::team_size"], [155, 8, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch"], [155, 9, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch::level"], [155, 11, 1, "_CPPv4N17TeamHandleConceptD0Ev", "TeamHandleConcept::~TeamHandleConcept"], [156, 7, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy"], [156, 10, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy::Args"], [156, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [156, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [156, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [156, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [156, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyERK10TeamPolicy", "TeamPolicy::TeamPolicy"], [156, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyERR10TeamPolicy", "TeamPolicy::TeamPolicy"], [156, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyEv", "TeamPolicy::TeamPolicy"], [156, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [156, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [156, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [156, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [156, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::space"], [156, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::space"], [156, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [156, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [156, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [156, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [156, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [156, 9, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [156, 11, 1, "_CPPv4NK10TeamPolicy10chunk_sizeEv", "TeamPolicy::chunk_size"], [156, 6, 1, "_CPPv4N10TeamPolicy15execution_spaceE", "TeamPolicy::execution_space"], [156, 6, 1, "_CPPv4N10TeamPolicy10index_typeE", "TeamPolicy::index_type"], [156, 6, 1, "_CPPv4N10TeamPolicy17iteration_patternE", "TeamPolicy::iteration_pattern"], [156, 6, 1, "_CPPv4N10TeamPolicy13launch_boundsE", "TeamPolicy::launch_bounds"], [156, 11, 1, "_CPPv4NK10TeamPolicy11league_sizeEv", "TeamPolicy::league_size"], [156, 6, 1, "_CPPv4N10TeamPolicy11member_typeE", "TeamPolicy::member_type"], [156, 6, 1, "_CPPv4N10TeamPolicy13schedule_typeE", "TeamPolicy::schedule_type"], [156, 11, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size"], [156, 9, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::level"], [156, 9, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::team_size_"], [156, 11, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max"], [156, 9, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max::level"], [156, 11, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size"], [156, 9, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size::chunk"], [156, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [156, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [156, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [156, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [156, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [156, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [156, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [156, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [156, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [156, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_team"], [156, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [156, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [156, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [156, 9, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_thread"], [156, 11, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size"], [156, 9, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size::level"], [156, 11, 1, "_CPPv4NK10TeamPolicy9team_sizeEv", "TeamPolicy::team_size"], [156, 11, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max"], [156, 11, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max"], [156, 10, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::FunctorType"], [156, 10, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::FunctorType"], [156, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::f"], [156, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::f"], [156, 11, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended"], [156, 11, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended"], [156, 10, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::FunctorType"], [156, 10, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::FunctorType"], [156, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::f"], [156, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::f"], [156, 11, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size"], [156, 9, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size::level"], [156, 11, 1, "_CPPv4N10TeamPolicy17vector_length_maxEv", "TeamPolicy::vector_length_max"], [156, 6, 1, "_CPPv4N10TeamPolicy8work_tagE", "TeamPolicy::work_tag"], [157, 7, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange"], [157, 10, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::Rank"], [157, 10, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::TeamHandle"], [157, 11, 1, "_CPPv4N17TeamThreadMDRange17TeamThreadMDRangeE4team8extent_18extent_2z", "TeamThreadMDRange::TeamThreadMDRange"], [153, 11, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange"], [153, 11, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange"], [153, 9, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::begin"], [153, 9, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::count"], [153, 9, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::end"], [153, 9, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::team"], [153, 9, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::team"], [159, 7, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange"], [159, 10, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::Rank"], [159, 10, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::TeamHandle"], [159, 11, 1, "_CPPv4N17TeamVectorMDRange17TeamVectorMDRangeE4team8extent_18extent_2z", "TeamVectorMDRange::TeamVectorMDRange"], [161, 7, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange"], [161, 10, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::Rank"], [161, 10, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::TeamHandle"], [161, 11, 1, "_CPPv4N19ThreadVectorMDRange19ThreadVectorMDRangeE4team8extent_18extent_2z", "ThreadVectorMDRange::ThreadVectorMDRange"], [153, 11, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange"], [153, 11, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange"], [153, 9, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::begin"], [153, 9, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::count"], [153, 9, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::end"], [153, 9, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::team"], [153, 9, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::team"], [81, 7, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap"], [81, 10, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Device"], [81, 10, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Key"], [81, 11, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap"], [81, 9, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap::capacity_hint"], [81, 10, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Value"], [81, 11, 1, "_CPPv4N12UnorderedMap13allocate_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::allocate_view"], [81, 9, 1, "_CPPv4N12UnorderedMap13allocate_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::allocate_view::src"], [81, 8, 1, "_CPPv4NK12UnorderedMap8capacityEv", "UnorderedMap::capacity"], [81, 11, 1, "_CPPv4N12UnorderedMap5clearEv", "UnorderedMap::clear"], [81, 11, 1, "_CPPv4N12UnorderedMap16create_copy_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::create_copy_view"], [81, 9, 1, "_CPPv4N12UnorderedMap16create_copy_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::create_copy_view::src"], [81, 11, 1, "_CPPv4N12UnorderedMap13create_mirrorERK12UnorderedMapI3Key9ValueType6Device6Hasher7EqualToE", "UnorderedMap::create_mirror"], [81, 9, 1, "_CPPv4N12UnorderedMap13create_mirrorERK12UnorderedMapI3Key9ValueType6Device6Hasher7EqualToE", "UnorderedMap::create_mirror::src"], [81, 11, 1, "_CPPv4N12UnorderedMap9deep_copyER12UnorderedMapI4DKey2DT7DDevice6Hasher7EqualToERK12UnorderedMapI4SKey2ST7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy"], [81, 9, 1, "_CPPv4N12UnorderedMap9deep_copyER12UnorderedMapI4DKey2DT7DDevice6Hasher7EqualToERK12UnorderedMapI4SKey2ST7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy::dst"], [81, 9, 1, "_CPPv4N12UnorderedMap9deep_copyER12UnorderedMapI4DKey2DT7DDevice6Hasher7EqualToERK12UnorderedMapI4SKey2ST7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy::src"], [81, 11, 1, "_CPPv4N12UnorderedMap14deep_copy_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy_view"], [81, 9, 1, "_CPPv4N12UnorderedMap14deep_copy_viewERK12UnorderedMapI4SKey6SValue7SDevice6Hasher7EqualToE", "UnorderedMap::deep_copy_view::src"], [81, 8, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists"], [81, 9, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists::key"], [81, 8, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find"], [81, 9, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find::key"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3key", "UnorderedMap::insert"], [81, 9, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::key"], [81, 9, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::op"], [81, 9, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::value"], [81, 8, 1, "_CPPv4NK12UnorderedMap12is_allocatedEv", "UnorderedMap::is_allocated"], [81, 8, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at"], [81, 9, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at::index"], [81, 11, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash"], [81, 9, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash::requested_capacity"], [81, 11, 1, "_CPPv4NK12UnorderedMap4sizeEv", "UnorderedMap::size"], [81, 8, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at"], [81, 9, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at::index"], [81, 8, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at"], [81, 9, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at::index"], [81, 7, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes"], [81, 7, 1, "_CPPv4N25UnorderedMapInsertOpTypes9AtomicAddE", "UnorderedMapInsertOpTypes::AtomicAdd"], [81, 7, 1, "_CPPv4N25UnorderedMapInsertOpTypes4NoOpE", "UnorderedMapInsertOpTypes::NoOp"], [81, 10, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValueTypeView"], [81, 10, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValuesIdxType"], [81, 7, 1, "_CPPv424UnorderedMapInsertResult", "UnorderedMapInsertResult"], [81, 8, 1, "_CPPv4NK24UnorderedMapInsertResult8existingEv", "UnorderedMapInsertResult::existing"], [81, 8, 1, "_CPPv4NK24UnorderedMapInsertResult6failedEv", "UnorderedMapInsertResult::failed"], [81, 8, 1, "_CPPv4NK24UnorderedMapInsertResult5indexEv", "UnorderedMapInsertResult::index"], [81, 8, 1, "_CPPv4NK24UnorderedMapInsertResult7successEv", "UnorderedMapInsertResult::success"], [188, 11, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View"], [188, 11, 1, "_CPPv44View12pointer_typeRK12array_layout", "View"], [188, 11, 1, "_CPPv44ViewRK10ALLOC_PROPDpRK7IntType", "View"], [188, 11, 1, "_CPPv44ViewRK10ALLOC_PROPRK12array_layout", "View"], [188, 11, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View"], [188, 11, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View"], [188, 11, 1, "_CPPv44ViewRK19NATURAL_MDSPAN_TYPE", "View"], [188, 11, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View"], [188, 11, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View"], [188, 11, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View"], [188, 11, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View"], [188, 11, 1, "_CPPv44ViewRR4View", "View"], [188, 11, 1, "_CPPv44Viewv", "View"], [188, 11, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View"], [188, 10, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::AccessorType"], [188, 10, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::ElementType"], [188, 10, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::ExtentsType"], [188, 10, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::LayoutType"], [188, 9, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::args"], [188, 9, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::indices"], [188, 9, 1, "_CPPv44ViewRK10ALLOC_PROPDpRK7IntType", "View::indices"], [188, 9, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::indices"], [188, 9, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::indices"], [188, 9, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::layout"], [188, 9, 1, "_CPPv44ViewRK10ALLOC_PROPRK12array_layout", "View::layout"], [188, 9, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::layout"], [188, 9, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::layout"], [188, 9, 1, "_CPPv44ViewRK19NATURAL_MDSPAN_TYPE", "View::mds"], [188, 9, 1, "_CPPv4I0000E4ViewRK6mdspanI11ElementType11ExtentsType10LayoutType12AccessorTypeE", "View::mds"], [188, 9, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::name"], [188, 9, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::name"], [188, 9, 1, "_CPPv44ViewRK10ALLOC_PROPDpRK7IntType", "View::prop"], [188, 9, 1, "_CPPv44ViewRK10ALLOC_PROPRK12array_layout", "View::prop"], [188, 9, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::ptr"], [188, 9, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::ptr"], [188, 9, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View::rhs"], [188, 9, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::rhs"], [188, 9, 1, "_CPPv44ViewRR4View", "View::rhs"], [188, 9, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::space"], [188, 9, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::space"], [189, 6, 1, "_CPPv419WithoutInitializing", "WithoutInitializing"], [188, 11, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access"], [188, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i0"], [188, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i1"], [188, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i2"], [188, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i3"], [188, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i4"], [188, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i5"], [188, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i6"], [188, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i7"], [184, 6, 1, "_CPPv412array_layout", "array_layout"], [188, 11, 1, "_CPPv411assign_data12pointer_type", "assign_data"], [188, 9, 1, "_CPPv411assign_data12pointer_type", "assign_data::arg_data"], [106, 11, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add"], [106, 10, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::T"], [106, 9, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::ptr_to_value"], [106, 9, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::value"], [107, 11, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch"], [107, 10, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::T"], [107, 9, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::ptr_to_value"], [107, 9, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::value"], [106, 11, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and"], [106, 10, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::T"], [106, 9, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::ptr_to_value"], [106, 9, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::value"], [107, 11, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch"], [107, 10, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::T"], [107, 9, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::ptr_to_value"], [107, 9, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::value"], [100, 11, 1, "_CPPv4I0E13atomic_assignvP1TNSt15type_identity_tI1TEE", "atomic_assign"], [100, 10, 1, "_CPPv4I0E13atomic_assignvP1TNSt15type_identity_tI1TEE", "atomic_assign::T"], [100, 9, 1, "_CPPv4I0E13atomic_assignvP1TNSt15type_identity_tI1TEE", "atomic_assign::ptr"], [100, 9, 1, "_CPPv4I0E13atomic_assignvP1TNSt15type_identity_tI1TEE", "atomic_assign::val"], [101, 11, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange"], [101, 10, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange::T"], [101, 9, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange::desired"], [101, 9, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange::expected"], [101, 9, 1, "_CPPv4I0E23atomic_compare_exchange1TP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange::ptr"], [102, 11, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong"], [102, 10, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong::T"], [102, 9, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong::desired"], [102, 9, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong::expected"], [102, 9, 1, "_CPPv4I0E30atomic_compare_exchange_strongbP1TNSt15type_identity_tI1TEENSt15type_identity_tI1TEE", "atomic_compare_exchange_strong::ptr"], [106, 11, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement"], [106, 10, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::T"], [106, 9, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::ptr_to_value"], [107, 11, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch"], [107, 10, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::T"], [107, 9, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::ptr_to_value"], [107, 9, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::value"], [103, 11, 1, "_CPPv4I0E15atomic_exchange1TP1TNSt15type_identity_tI1TEE", "atomic_exchange"], [103, 10, 1, "_CPPv4I0E15atomic_exchange1TP1TNSt15type_identity_tI1TEE", "atomic_exchange::T"], [103, 9, 1, "_CPPv4I0E15atomic_exchange1TP1TNSt15type_identity_tI1TEE", "atomic_exchange::ptr"], [103, 9, 1, "_CPPv4I0E15atomic_exchange1TP1TNSt15type_identity_tI1TEE", "atomic_exchange::val"], [104, 11, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::T"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::ptr_to_value"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::value"], [104, 11, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::T"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::ptr_to_value"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::value"], [104, 11, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::T"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::ptr_to_value"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::value"], [104, 11, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift"], [104, 10, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::T"], [104, 9, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::ptr_to_value"], [104, 9, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::shift"], [104, 11, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::T"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::ptr_to_value"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::value"], [104, 11, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::T"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::ptr_to_value"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::value"], [104, 11, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::T"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::ptr_to_value"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::value"], [104, 11, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::T"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::ptr_to_value"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::value"], [104, 11, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or"], [104, 10, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::T"], [104, 9, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::ptr_to_value"], [104, 9, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::value"], [104, 11, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift"], [104, 10, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::T"], [104, 9, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::ptr_to_value"], [104, 9, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::shift"], [104, 11, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::T"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::ptr_to_value"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::value"], [104, 11, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor"], [104, 10, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::T"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::ptr_to_value"], [104, 9, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::value"], [106, 11, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment"], [106, 10, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::T"], [106, 9, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::ptr_to_value"], [105, 11, 1, "_CPPv4I0E11atomic_load1TP1T", "atomic_load"], [105, 10, 1, "_CPPv4I0E11atomic_load1TP1T", "atomic_load::T"], [105, 9, 1, "_CPPv4I0E11atomic_load1TP1T", "atomic_load::ptr"], [107, 11, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch"], [107, 10, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::T"], [107, 9, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::ptr_to_value"], [107, 9, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::shift"], [106, 11, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max"], [106, 10, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::T"], [106, 9, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::ptr_to_value"], [106, 9, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::value"], [107, 11, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch"], [107, 10, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::T"], [107, 9, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::ptr_to_value"], [107, 9, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::value"], [106, 11, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min"], [106, 10, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::T"], [106, 9, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::ptr_to_value"], [106, 9, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::value"], [107, 11, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch"], [107, 10, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::T"], [107, 9, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::ptr_to_value"], [107, 9, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::value"], [107, 11, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch"], [107, 10, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::T"], [107, 9, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::ptr_to_value"], [107, 9, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::value"], [107, 11, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch"], [107, 10, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::T"], [107, 9, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::ptr_to_value"], [107, 9, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::value"], [106, 11, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or"], [106, 10, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::T"], [106, 9, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::ptr_to_value"], [106, 9, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::value"], [107, 11, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch"], [107, 10, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::T"], [107, 9, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::ptr_to_value"], [107, 9, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::value"], [107, 11, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch"], [107, 10, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::T"], [107, 9, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::ptr_to_value"], [107, 9, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::shift"], [108, 11, 1, "_CPPv4I0E12atomic_storevP1TNSt15type_identity_tI1TEE", "atomic_store"], [108, 10, 1, "_CPPv4I0E12atomic_storevP1TNSt15type_identity_tI1TEE", "atomic_store::T"], [108, 9, 1, "_CPPv4I0E12atomic_storevP1TNSt15type_identity_tI1TEE", "atomic_store::ptr"], [108, 9, 1, "_CPPv4I0E12atomic_storevP1TNSt15type_identity_tI1TEE", "atomic_store::val"], [106, 11, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub"], [106, 10, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::T"], [106, 9, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::ptr_to_value"], [106, 9, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::value"], [107, 11, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch"], [107, 10, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::T"], [107, 9, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::ptr_to_value"], [107, 9, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::value"], [107, 11, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch"], [107, 10, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::T"], [107, 9, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::ptr_to_value"], [107, 9, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::value"], [4, 8, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin"], [4, 10, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::DataType"], [4, 10, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::Properties"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::view"], [4, 8, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin"], [4, 10, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::DataType"], [4, 10, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::Properties"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::view"], [4, 8, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend"], [4, 10, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::DataType"], [4, 10, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::Properties"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::view"], [170, 7, 1, "_CPPv4I0E7complex", "complex"], [170, 10, 1, "_CPPv4I0E7complex", "complex::Scalar"], [170, 11, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex"], [170, 8, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex"], [170, 8, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex"], [170, 8, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex"], [170, 8, 1, "_CPPv4N7complex7complexEv", "complex::complex"], [170, 10, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::T"], [170, 10, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::T"], [170, 10, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T1"], [170, 10, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T2"], [170, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::imag"], [170, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::real"], [170, 9, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::real"], [170, 9, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::src"], [170, 9, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex::src"], [170, 12, 1, "_CPPv4N7complex2imE", "complex::im"], [170, 8, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag"], [170, 8, 1, "_CPPv4N7complex4imagEv", "complex::imag"], [170, 8, 1, "_CPPv4NK7complex4imagEv", "complex::imag"], [170, 9, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag::v"], [170, 11, 1, "_CPPv4NK7complexcvNSt7complexI10value_typeEEEv", "complex::operator std::complex&lt;value_type&gt;"], [170, 11, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!="], [170, 8, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!="], [170, 8, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!="], [170, 10, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::T"], [170, 10, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::T"], [170, 10, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::T"], [170, 9, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::real"], [170, 9, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::src"], [170, 9, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::src"], [170, 11, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*="], [170, 8, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*="], [170, 8, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*="], [170, 10, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::T"], [170, 10, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::T"], [170, 10, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::T"], [170, 9, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::real"], [170, 9, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::src"], [170, 9, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::src"], [170, 11, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+="], [170, 8, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+="], [170, 8, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+="], [170, 10, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::T"], [170, 10, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::T"], [170, 10, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::T"], [170, 9, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::real"], [170, 9, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::src"], [170, 9, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::src"], [170, 11, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-="], [170, 8, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-="], [170, 8, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-="], [170, 10, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::T"], [170, 10, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::T"], [170, 10, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::T"], [170, 9, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::real"], [170, 9, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::src"], [170, 9, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::src"], [170, 11, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/="], [170, 8, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/="], [170, 8, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/="], [170, 10, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::T"], [170, 10, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::T"], [170, 10, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::T"], [170, 9, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::real"], [170, 9, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::src"], [170, 9, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::src"], [170, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator="], [170, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator="], [170, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator="], [170, 10, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::T"], [170, 10, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::T"], [170, 10, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::T"], [170, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::re"], [170, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::src"], [170, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::src"], [170, 11, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator=="], [170, 8, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator=="], [170, 8, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator=="], [170, 10, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::T"], [170, 10, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::T"], [170, 10, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::T"], [170, 9, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::real"], [170, 9, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::src"], [170, 9, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::src"], [170, 12, 1, "_CPPv4N7complex2reE", "complex::re"], [170, 8, 1, "_CPPv4N7complex4realE8RealType", "complex::real"], [170, 8, 1, "_CPPv4N7complex4realEv", "complex::real"], [170, 8, 1, "_CPPv4NK7complex4realEv", "complex::real"], [170, 9, 1, "_CPPv4N7complex4realE8RealType", "complex::real::v"], [170, 6, 1, "_CPPv4N7complex10value_typeE", "complex::value_type"], [79, 11, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute"], [79, 9, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::dest"], [79, 9, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::src"], [180, 11, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror"], [180, 11, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror"], [180, 11, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror"], [180, 11, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror"], [180, 11, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror"], [180, 10, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror::ALLOC_PROP"], [180, 10, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::Space"], [180, 10, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::Space"], [180, 10, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::ViewType"], [180, 10, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::ViewType"], [180, 10, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror::ViewType"], [180, 10, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::ViewType"], [180, 10, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::ViewType"], [180, 9, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror::arg_prop"], [180, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::space"], [180, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::space"], [180, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::src"], [180, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::src"], [180, 9, 1, "_CPPv4I00E13create_mirrorDaRK10ALLOC_PROPRK8ViewType", "create_mirror::src"], [180, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::src"], [180, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::src"], [180, 11, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view"], [180, 11, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view"], [180, 11, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view"], [180, 11, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view"], [180, 11, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view"], [180, 10, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view::ALLOC_PROP"], [180, 10, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::Space"], [180, 10, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::Space"], [180, 10, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [180, 10, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [180, 10, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view::ViewType"], [180, 10, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::ViewType"], [180, 10, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::ViewType"], [180, 9, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view::arg_prop"], [180, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::space"], [180, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::space"], [180, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::src"], [180, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::src"], [180, 9, 1, "_CPPv4I00E18create_mirror_viewDaRK10ALLOC_PROPRK8ViewType", "create_mirror_view::src"], [180, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::src"], [180, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::src"], [180, 11, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy"], [180, 11, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy"], [180, 10, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy::ALLOC_PROP"], [180, 10, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::Space"], [180, 10, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy::ViewType"], [180, 10, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::ViewType"], [180, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy::arg_prop"], [180, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::space"], [180, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK10ALLOC_PROPRK8ViewType", "create_mirror_view_and_copy::src"], [180, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::src"], [188, 11, 1, "_CPPv4NK4dataEv", "data"], [184, 12, 1, "_CPPv49dimension", "dimension"], [4, 8, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance"], [4, 10, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::IteratorType"], [4, 9, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::first"], [4, 9, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::last"], [4, 8, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end"], [4, 10, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::DataType"], [4, 10, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::Properties"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::view"], [188, 11, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent"], [188, 9, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::dim"], [188, 10, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::iType"], [188, 11, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int"], [188, 9, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::dim"], [188, 10, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::iType"], [123, 8, 1, "_CPPv4NK5finalER10value_type", "final"], [123, 9, 1, "_CPPv4NK5finalER10value_type", "final::val"], [228, 11, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator"], [228, 9, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator::v"], [123, 8, 1, "_CPPv4NK4initER10value_type", "init"], [123, 9, 1, "_CPPv4NK4initER10value_type", "init::val"], [188, 11, 1, "_CPPv4NK12is_allocatedEv", "is_allocated"], [188, 11, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable"], [188, 9, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable::rhs"], [184, 12, 1, "_CPPv423is_extent_constructible", "is_extent_constructible"], [4, 11, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap"], [4, 10, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::IteratorType"], [4, 9, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::first"], [4, 9, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::last"], [123, 8, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [123, 9, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [123, 9, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [128, 11, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free"], [128, 10, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::MemorySpace"], [128, 9, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::ptr"], [129, 11, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc"], [129, 11, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc"], [129, 10, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::MemorySpace"], [129, 10, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::MemorySpace"], [129, 9, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::label"], [129, 9, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::size"], [129, 9, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::size"], [130, 11, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc"], [130, 10, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::MemorySpace"], [130, 9, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::new_size"], [130, 9, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::ptr"], [188, 11, 1, "_CPPv4NK5labelEv", "label"], [188, 11, 1, "_CPPv4NK6layoutEv", "layout"], [152, 11, 1, "_CPPv4NK19max_total_tile_sizeEv", "max_total_tile_size"], [188, 11, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;"], [188, 10, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;::OtherAccessor"], [188, 10, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;::OtherElementType"], [188, 10, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;::OtherExtents"], [188, 10, 1, "_CPPv4I0000Ecv6mdspanI16OtherElementType12OtherExtents17OtherLayoutPolicy13OtherAccessorEv", "operator mdspan&lt;OtherElementType, OtherExtents, OtherLayoutPolicy, OtherAccessor&gt;::OtherLayoutPolicy"], [188, 11, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!="], [188, 10, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewDst"], [188, 10, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewSrc"], [188, 11, 1, "_CPPv4NKclEDpRK7IntType", "operator()"], [188, 9, 1, "_CPPv4NKclEDpRK7IntType", "operator()::indices"], [184, 11, 1, "_CPPv4aSRK12LayoutStride", "operator="], [184, 11, 1, "_CPPv4aSRR12LayoutStride", "operator="], [188, 11, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator=="], [228, 11, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator=="], [188, 10, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewDst"], [188, 10, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewSrc"], [228, 10, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator==::ViewSrc"], [184, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions"], [184, 9, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::dimen"], [184, 9, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::order"], [184, 9, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::rank"], [165, 11, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space"], [165, 11, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space"], [165, 10, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::Args"], [165, 10, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::ExecSpace"], [165, 10, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::ExecSpace"], [165, 10, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::T"], [165, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::args"], [165, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::space"], [165, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::space"], [165, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::weights"], [137, 11, 1, "_CPPv418push_finalize_hookNSt8functionIFvvEEE", "push_finalize_hook"], [137, 9, 1, "_CPPv418push_finalize_hookNSt8functionIFvvEEE", "push_finalize_hook::func"], [188, 11, 1, "_CPPv44rankv", "rank"], [188, 11, 1, "_CPPv412rank_dynamicv", "rank_dynamic"], [123, 8, 1, "_CPPv4NK9referenceEv", "reference"], [188, 11, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size"], [188, 11, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size"], [188, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N0"], [188, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N1"], [188, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N2"], [188, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N3"], [188, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N4"], [188, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N5"], [188, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N6"], [188, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N7"], [188, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N8"], [188, 9, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size::layout"], [188, 11, 1, "_CPPv4NK4sizeEv", "size"], [188, 11, 1, "_CPPv4NK4spanEv", "span"], [188, 11, 1, "_CPPv4NK18span_is_contiguousEv", "span_is_contiguous"], [163, 11, 1, "_CPPv45startv", "start"], [163, 11, 1, "_CPPv44stopv", "stop"], [188, 11, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride"], [188, 11, 1, "_CPPv4I0ENK6strideEvP5iType", "stride"], [184, 12, 1, "_CPPv46stride", "stride"], [188, 9, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::dim"], [188, 10, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::iType"], [188, 10, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::iType"], [188, 9, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::strides"], [188, 11, 1, "_CPPv4NK8stride_0Ev", "stride_0"], [188, 11, 1, "_CPPv4NK8stride_1Ev", "stride_1"], [188, 11, 1, "_CPPv4NK8stride_2Ev", "stride_2"], [188, 11, 1, "_CPPv4NK8stride_3Ev", "stride_3"], [188, 11, 1, "_CPPv4NK8stride_4Ev", "stride_4"], [188, 11, 1, "_CPPv4NK8stride_5Ev", "stride_5"], [188, 11, 1, "_CPPv4NK8stride_6Ev", "stride_6"], [188, 11, 1, "_CPPv4NK8stride_7Ev", "stride_7"], [187, 11, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview"], [187, 10, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::Args"], [187, 10, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::ViewType"], [187, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::args"], [187, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::v"], [152, 11, 1, "_CPPv4NK21tile_size_recommendedEv", "tile_size_recommended"], [188, 11, 1, "_CPPv4I0E9to_mdspanDaRK17OtherAccessorType", "to_mdspan"], [188, 10, 1, "_CPPv4I0E9to_mdspanDaRK17OtherAccessorType", "to_mdspan::OtherAccessorType"], [188, 9, 1, "_CPPv4I0E9to_mdspanDaRK17OtherAccessorType", "to_mdspan::other_accessor"], [188, 11, 1, "_CPPv4NK9use_countEv", "use_count"], [82, 7, 1, "_CPPv4I00E6vector", "vector"], [82, 10, 1, "_CPPv4I00E6vector", "vector::Arg1Type"], [82, 10, 1, "_CPPv4I00E6vector", "vector::Scalar"], [82, 11, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign"], [82, 9, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::n"], [82, 9, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::val"], [82, 11, 1, "_CPPv4N6vector4backEv", "vector::back"], [82, 11, 1, "_CPPv4NK6vector4backEv", "vector::back"], [82, 11, 1, "_CPPv4NK6vector5beginEv", "vector::begin"], [82, 11, 1, "_CPPv4N6vector5clearEv", "vector::clear"], [82, 6, 1, "_CPPv4N6vector14const_iteratorE", "vector::const_iterator"], [82, 6, 1, "_CPPv4N6vector13const_pointerE", "vector::const_pointer"], [82, 6, 1, "_CPPv4N6vector15const_referenceE", "vector::const_reference"], [82, 11, 1, "_CPPv4NK6vector4dataEv", "vector::data"], [82, 11, 1, "_CPPv4N6vector14device_to_hostEv", "vector::device_to_host"], [82, 11, 1, "_CPPv4NK6vector5emptyEv", "vector::empty"], [82, 11, 1, "_CPPv4NK6vector3endEv", "vector::end"], [82, 11, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find"], [82, 9, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find::val"], [82, 11, 1, "_CPPv4N6vector5frontEv", "vector::front"], [82, 11, 1, "_CPPv4NK6vector5frontEv", "vector::front"], [82, 11, 1, "_CPPv4NK6vector14host_to_deviceEv", "vector::host_to_device"], [82, 11, 1, "_CPPv4NK6vector12is_allocatedEv", "vector::is_allocated"], [82, 11, 1, "_CPPv4N6vector9is_sortedEv", "vector::is_sorted"], [82, 6, 1, "_CPPv4N6vector8iteratorE", "vector::iterator"], [82, 11, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound"], [82, 9, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::comp_val"], [82, 9, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::start"], [82, 9, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::theEnd"], [82, 11, 1, "_CPPv4NK6vector8max_sizeEv", "vector::max_size"], [82, 11, 1, "_CPPv4N6vector9on_deviceEv", "vector::on_device"], [82, 11, 1, "_CPPv4N6vector7on_hostEv", "vector::on_host"], [82, 8, 1, "_CPPv4NK6vectorclEi", "vector::operator()"], [82, 9, 1, "_CPPv4NK6vectorclEi", "vector::operator()::i"], [82, 8, 1, "_CPPv4NK6vectorixEi", "vector::operator[]"], [82, 9, 1, "_CPPv4NK6vectorixEi", "vector::operator[]::i"], [82, 6, 1, "_CPPv4N6vector7pointerE", "vector::pointer"], [82, 11, 1, "_CPPv4N6vector8pop_backEv", "vector::pop_back"], [82, 11, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back"], [82, 9, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back::val"], [82, 6, 1, "_CPPv4N6vector9referenceE", "vector::reference"], [82, 11, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve"], [82, 9, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve::n"], [82, 11, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize"], [82, 11, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize"], [82, 9, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize::n"], [82, 9, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::n"], [82, 9, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::val"], [82, 11, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation"], [82, 9, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation::extra"], [82, 11, 1, "_CPPv4NK6vector4sizeEv", "vector::size"], [82, 11, 1, "_CPPv4NK6vector4spanEv", "vector::span"], [82, 6, 1, "_CPPv4N6vector10value_typeE", "vector::value_type"], [82, 11, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector"], [82, 11, 1, "_CPPv4N6vector6vectorEv", "vector::vector"], [82, 9, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::n"], [82, 9, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::val"], [123, 8, 1, "_CPPv4NK4viewEv", "view"], [189, 11, 1, "_CPPv4IDpE10view_alloc10ALLOC_PROPDpRK4Args", "view_alloc"], [189, 10, 1, "_CPPv4IDpE10view_alloc10ALLOC_PROPDpRK4Args", "view_alloc::Args"], [189, 9, 1, "_CPPv4IDpE10view_alloc10ALLOC_PROPDpRK4Args", "view_alloc::args"], [189, 11, 1, "_CPPv4IDpE9view_wrap10ALLOC_PROPDpRK4Args", "view_wrap"], [189, 10, 1, "_CPPv4IDpE9view_wrap10ALLOC_PROPDpRK4Args", "view_wrap::Args"], [189, 9, 1, "_CPPv4IDpE9view_wrap10ALLOC_PROPDpRK4Args", "view_wrap::args"], [163, 11, 1, "_CPPv4D0v", "~ProfilingSection"], [164, 11, 1, "_CPPv4D0v", "~ScopedRegion"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:member", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:templateParam", "5": "cpp:type", "6": "cppkokkos:type", "7": "cppkokkos:class", "8": "cppkokkos:kokkosinlinefunction", "9": "cppkokkos:functionParam", "10": "cppkokkos:templateParam", "11": "cppkokkos:function", "12": "cppkokkos:member"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "member", "C++ member"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "templateParam", "C++ template parameter"], "5": ["cpp", "type", "C++ type"], "6": ["cppkokkos", "type", "C++ type"], "7": ["cppkokkos", "class", "C++ class"], "8": ["cppkokkos", "kokkosinlinefunction", "C++ kokkosinlinefunction"], "9": ["cppkokkos", "functionParam", "C++ function parameter"], "10": ["cppkokkos", "templateParam", "C++ template parameter"], "11": ["cppkokkos", "function", "C++ function"], "12": ["cppkokkos", "member", "C++ member"]}, "titleterms": {"api": [0, 72, 73, 83, 84, 191, 196, 231], "algorithm": [0, 3, 72, 216, 245], "random": [1, 212], "number": [1, 237], "rand": 1, "gener": [1, 32, 88, 131, 152, 153, 154, 197, 221, 234], "synopsi": [1, 2, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 131, 139, 144, 145, 146, 153, 154, 158, 160, 162, 166, 178], "exampl": [1, 2, 4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 53, 56, 76, 77, 79, 81, 84, 117, 123, 132, 133, 134, 135, 136, 137, 141, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 168, 169, 174, 176, 178, 179, 181, 184, 185, 186, 187, 188, 192, 193, 194, 200, 201, 203, 207, 208, 210, 228, 236, 242, 245], "sort": [2, 10], "nest": [2, 84, 85, 202], "polici": [2, 85, 90, 95, 202, 209], "team": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 90, 196, 202, 209], "thread": [2, 131, 202, 204, 207], "level": [2, 85], "addit": [2, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125], "inform": [2, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 197], "sampl": 2, "output": 2, "std": [3, 204], "iter": [4, 81], "kokko": [4, 86, 87, 91, 95, 131, 139, 153, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 196, 197, 204, 206, 207, 212, 213, 214, 216, 220, 226, 227, 230, 231, 233, 234, 235, 238, 239, 245, 246], "experiment": [4, 172, 192, 193, 194], "begin": 4, "cbegin": 4, "end": 4, "cend": 4, "note": [4, 87, 134, 140, 141, 142, 152, 167, 169, 173, 174, 176, 177], "paramet": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 136, 147, 148, 149, 150, 152, 154, 181, 188, 192, 193, 194, 243], "requir": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 123, 135, 136, 147, 148, 149, 150, 152, 165, 179, 181, 227, 231, 232, 241], "distanc": 4, "return": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71], "iter_swap": 4, "minimum": [5, 173], "maximum": [5, 173], "modifi": [6, 7], "sequenc": [6, 7, 245], "non": [7, 74, 131, 139, 204, 228, 243], "numer": [8, 89, 143], "partit": 9, "adjacent_differ": 11, "descript": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 81, 82, 100, 101, 102, 103, 104, 105, 106, 107, 108, 128, 129, 130, 134, 153, 155, 156, 157, 158, 159, 160, 161, 162, 170, 179, 180, 182, 183, 184, 185, 186, 187, 189, 218, 228], "adjacent_find": 12, "interfac": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 74, 78, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 132, 133, 135, 136, 137, 147, 148, 149, 150, 152, 157, 159, 161, 165, 179, 181, 188, 192, 193, 194, 218, 228], "overload": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71], "set": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 88], "accept": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71], "execut": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 85, 88, 90, 131, 197, 202, 207, 208, 209, 212, 242], "space": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 88, 93, 94, 131, 139, 197, 207, 208, 209, 212], "handl": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71], "valu": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 28, 29, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 49, 50, 51, 52, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 192, 193, 206, 237], "all_of": 13, "any_of": 14, "copi": [15, 131, 147, 181, 212], "copy_backward": 16, "copy_if": 17, "copy_n": 18, "count": [19, 212], "count_if": 20, "equal": 21, "detail": [21, 26, 27], "exclusive_scan": 22, "fill": 23, "fill_n": 24, "find": 25, "find_end": 26, "find_first_of": 27, "find_if": 28, "find_if_not": 29, "for_each": 30, "for_each_n": 31, "generate_n": 33, "inclusive_scan": 34, "is_partit": 35, "is_sort": 36, "is_sorted_until": 37, "lexicographical_compar": 38, "max_el": 39, "min_el": 40, "minmax_el": 41, "mismatch": 42, "move": [43, 241], "move_backward": 44, "none_of": 45, "partition_copi": 46, "partition_point": 47, "reduc": [48, 109, 123, 199, 200, 201, 208], "remov": 49, "remove_copi": 50, "remove_copy_if": 51, "remove_if": 52, "replac": 53, "replace_copi": 54, "replace_copy_if": 55, "replace_if": 56, "revers": 57, "reverse_copi": 58, "rotat": 59, "rotate_copi": 60, "search": 61, "search_n": 62, "shift_left": 63, "shift_right": 64, "swap_rang": 65, "transform": 66, "transform_exclusive_scan": 67, "transform_inclusive_scan": 68, "transform_reduc": 69, "uniqu": 70, "unique_copi": 71, "alphabet": 72, "order": 72, "contain": [72, 73, 212, 216], "core": [72, 83, 216], "bitset": 74, "class": [74, 123, 144, 145, 146, 152, 154, 166, 178, 188, 216], "constbitset": 74, "member": [74, 123, 126, 131, 139, 144, 145, 146, 152, 154, 166, 178, 188, 216, 228, 243], "function": [74, 88, 123, 127, 131, 138, 139, 142, 144, 145, 146, 151, 152, 166, 188, 192, 194, 195, 206, 208, 212, 216, 222, 228, 243], "dualview": 75, "usag": [75, 76, 80, 82, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 134, 137, 144, 145, 146, 149, 150, 152, 153, 154, 156, 158, 160, 163, 164, 165, 170, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 239, 242, 245], "dynrankview": 76, "assign": [76, 126, 166, 188, 194, 210], "rule": [76, 188, 212], "dynamicview": 77, "offsetview": 78, "construct": [78, 131, 212], "scatterview": [79, 195, 237], "staticcrsgraph": 80, "unorderedmap": 81, "insert": 81, "us": [81, 131, 147, 197, 208, 212, 213, 236, 238, 239, 241, 245], "default": [81, 131, 212], "unorderedmapinsertoptyp": 81, "noop": 81, "atomicadd": 81, "vector": [82, 202, 204, 210], "deprec": [82, 196, 216], "detect": [84, 131], "idiom": [84, 212], "an": [84, 151, 208, 210, 232], "express": 84, "typedef": [84, 123, 131, 139, 144, 145, 146, 166, 188, 192, 193], "top": [85, 245], "common": [85, 142], "argument": [85, 152, 203], "all": [85, 131, 168], "initi": [86, 136, 203, 212, 239], "final": [86, 135, 203], "scopeguard": [86, 134], "concept": 87, "introduct": [87, 205], "approach": [87, 206], "overview": 87, "The": [87, 206, 210, 220, 241], "executionspac": 87, "implement": [87, 218, 239], "some": [87, 181], "de": 87, "facto": 87, "memoryspac": 87, "executionpolici": [87, 151], "teammemb": 87, "functor": [87, 95, 208, 245], "A": [87, 211, 233], "deleg": 87, "macro": [88, 138, 196, 216], "markup": 88, "version": [88, 227], "backend": [88, 221, 235], "option": [88, 221], "c": [88, 127, 196, 204, 211, 220, 231, 244], "standard": [88, 212, 220], "third": [88, 221], "parti": [88, 221], "librari": [88, 204, 210, 220, 221], "architectur": [88, 221], "parallel": [90, 95, 202, 208, 221, 226, 239], "dispatch": [90, 208], "pattern": [90, 95, 209, 242, 245], "tag": [90, 208, 244], "calcul": 90, "profil": [91, 163, 164], "scopedregion": [91, 164], "profilingsect": [91, 163], "stl": 92, "compat": [92, 196, 231], "issu": [92, 213, 222, 231, 232], "access": [93, 188, 192, 193, 212], "task": [95, 245], "Will": 95, "work": [95, 206, 220, 242, 245], "my": 95, "problem": [95, 206, 212, 239], "basic": [95, 202, 210, 226], "predecessor": 95, "schedul": 95, "wait": 95, "aggreg": 95, "prioriti": 95, "trait": [96, 143, 195, 209, 212], "is_array_layout": 96, "is_execution_polici": 96, "is_memory_spac": 96, "is_memory_trait": 96, "is_reduc": 96, "is_spac": 96, "util": 97, "view": [98, 181, 188, 190, 204, 211, 212], "relat": [98, 220], "atom": [99, 195, 212], "atomic_assign": 100, "atomic_compare_exchang": 101, "see": [101, 103, 105, 108, 132, 133, 134, 135, 136, 137, 141, 142, 169, 173], "also": [101, 103, 105, 108, 132, 133, 134, 135, 136, 137, 141, 142, 169, 173], "atomic_compare_exchange_strong": 102, "atomic_exchang": 103, "atomic_fetch_": 104, "op": [104, 106, 107], "atomic_load": 105, "atomic_": [106, 107], "_fetch": 107, "atomic_stor": 108, "built": [109, 123, 199, 200], "band": 110, "bor": 111, "land": 112, "lor": 113, "max": [114, 192], "maxloc": 115, "min": [116, 192], "minloc": 117, "minmax": 118, "minmaxloc": 119, "minmaxlocscalar": 120, "minmaxscalar": 121, "prod": 122, "reducerconcept": 123, "public": [123, 126, 144, 145, 146, 152, 154, 166, 178, 188, 216, 218], "constructor": [123, 131, 139, 144, 145, 146, 152, 154, 166, 178, 188, 192, 193], "In": [123, 199, 200], "reduct": [124, 193, 198, 208, 210], "scalar": [124, 200], "type": [124, 190, 200, 210, 211, 212, 216], "sum": [125, 237], "vallocscalar": 126, "variabl": [126, 203], "oper": [126, 173, 192, 193, 195, 210, 238, 239, 242, 244], "style": 127, "memori": [127, 139, 195, 202, 204, 207, 209, 212], "manag": [127, 204, 212, 235], "kokkos_fre": 128, "kokkos_malloc": 129, "kokkos_realloc": 130, "cuda": [131, 197, 204, 213, 222, 226, 240], "hip": [131, 222, 226], "sycl": [131, 222], "hpx": 131, "openmp": [131, 204, 226], "openmptarget": 131, "serial": [131, 221, 239, 242], "executionspaceconcept": 131, "alias": [131, 216], "base": 131, "configur": [131, 197, 213, 226], "defaultexecutionspac": 131, "defaulthostexecutionspac": 131, "veri": [131, 206], "simplest": 131, "Not": 131, "Being": 131, "more": 131, "facil": [131, 139], "initargu": 132, "initializationset": 133, "semant": [135, 136, 147, 148, 149, 150, 165, 181], "push_finalize_hook": 137, "annot": 138, "kokkos_funct": 138, "kokkos_inline_funct": 138, "kokkos_forceinline_funct": 138, "kokkos_relocatable_funct": 138, "kokkos_lambda": 138, "kokkos_class_lambda": 138, "kokkos_deduction_guid": 138, "cudaspac": 139, "cudahostpinnedspac": 139, "cudauvmspac": 139, "hipspac": 139, "hiphostpinnedspac": 139, "hipmanagedspac": 139, "sycldeviceusmspac": 139, "syclhostusmspac": 139, "syclsharedusmspac": 139, "hostspac": 139, "sharedspac": [139, 241], "sharedhostpinnedspac": 139, "memoryspaceconcept": 139, "bit": 140, "manipul": 140, "mathemat": [141, 222], "constant": [141, 222], "math": 142, "parallelfortag": 144, "parallelreducetag": 145, "parallelscantag": 146, "fenc": 147, "time": 147, "kernel": [147, 202, 242], "asynchron": 147, "deep": [147, 212], "parallel_for": 148, "parallel_reduc": 149, "parallel_scan": 150, "what": [151, 206, 212], "mdrangepolici": [152, 239], "templat": [152, 153, 154, 192, 193, 194, 229, 243, 244], "agument": [152, 153, 154], "specif": [152, 221], "ctad": [152, 154], "sinc": [152, 154], "4": [152, 154, 195, 197, 202, 203, 204, 208, 209, 212, 216, 227], "3": [152, 154, 195, 197, 201, 202, 203, 204, 207, 208, 209, 211, 212, 216, 227, 245], "nestedpolici": 153, "list": [153, 197], "perteam": 153, "perthread": 153, "teamthreadrang": [153, 158], "teamthreadmdrang": [153, 157], "teamvectorrang": [153, 160], "teamvectormdrang": [153, 159], "threadvectorrang": [153, 162], "threadvectormdrang": [153, 161], "rangepolici": [154, 239], "precondit": [154, 242, 245], "teamhandleconcept": 155, "teampolici": 156, "partition_spac": 165, "pair": 166, "convers": [166, 188, 212], "abort": 167, "kokkos_assert": 169, "complex": 170, "device_id": 171, "num_devic": 174, "num_thread": 175, "printf": 176, "kokkos_swap": 177, "timer": 178, "subview": [179, 187, 211], "create_mirror": 180, "_view": 180, "deep_copi": 181, "thing": 181, "you": [181, 212], "can": [181, 212], "cannot": 181, "do": [181, 206, 212], "how": [181, 206, 211, 212], "get": [181, 212, 226], "layout": [181, 188, 209, 212], "incompat": 181, "layoutleft": 182, "layoutright": 183, "layoutstrid": 184, "realloc": 185, "resiz": [186, 212], "enum": 188, "data": [188, 204, 212], "dimens": [188, 211, 212], "stride": [188, 212], "other": [188, 196, 212, 216], "mdspan": 188, "nonmemb": 188, "natur": 188, "view_alloc": 189, "like": 190, "simd": [191, 192, 194, 210], "width": [192, 193], "load": [192, 194], "store": [192, 194], "method": [192, 193, 194], "flag": [192, 194], "arithmet": 192, "comparison": [192, 193], "round": 192, "cmath": 192, "global": [192, 193], "simd_mask": 193, "boolean": 193, "where_express": 194, "where": 194, "gather": [194, 231], "scatter": 194, "10": 195, "1": [195, 197, 199, 202, 203, 204, 205, 207, 208, 209, 211, 212, 216, 242], "write": 195, "conflict": 195, "Their": 195, "resolut": 195, "With": 195, "2": [195, 197, 200, 202, 203, 204, 207, 208, 209, 211, 212, 216, 242], "free": [195, 216], "12": [196, 204], "backward": 196, "futur": [196, 207], "user": 196, "defin": 196, "abi": 196, "header": [196, 203, 216], "right": 196, "reserv": 196, "miscellan": 196, "proof": 196, "compil": [197, 227, 233, 235], "cmake": [197, 213, 221], "build": [197, 213, 226, 227], "system": [197, 227], "instal": [197, 213, 226], "packag": [197, 213], "tree": 197, "spack": [197, 213], "develop": [197, 213, 217, 221, 231], "keyword": [197, 221], "trilino": 197, "branch": 197, "gnu": 197, "makefil": [197, 213], "5": [197, 203, 208, 209, 212, 216], "6": [197, 209, 212], "restrict": [197, 202], "9": [198, 199, 200, 201], "custom": [198, 200, 201, 234], "8": 202, "hierarch": 202, "motiv": [202, 207], "creat": [202, 212], "instanc": [202, 207], "scratch": 202, "pad": 202, "loop": [202, 208], "barrier": 202, "singl": [202, 240], "executor": 202, "0": [203, 216], "includ": 203, "command": 203, "line": 203, "environ": 203, "struct": 203, "code": [203, 204, 210, 241, 242], "13": 204, "interoper": 204, "legaci": 204, "structur": [204, 238, 243], "raw": [204, 212, 213], "alloc": [204, 238], "through": [204, 245], "extern": 204, "fundament": 204, "own": 204, "call": 204, "14": 206, "virtual": 206, "vtabl": 206, "vpointer": 206, "annoi": 206, "gpu": [206, 221], "Then": 206, "why": [206, 212], "doesn": 206, "t": [206, 212], "straightforward": 206, "make": [206, 212], "i": [206, 208, 212], "need": [206, 212], "setter": 206, "host": [206, 221, 242], "But": 206, "realli": [206, 212], "devic": [206, 221, 242], "side": 206, "thi": [206, 212, 231], "portabl": [206, 220], "case": [206, 236, 238, 239, 245], "doe": 206, "nvcc": 206, "solv": 206, "question": [206, 220], "follow": 206, "up": 206, "machin": 207, "model": [207, 209, 220, 231], "abstract": 207, "figur": 207, "conceptu": 207, "high": 207, "perform": [207, 210, 220, 235, 242], "comput": [207, 235, 237, 242], "node": [207, 237], "program": [207, 209, 220, 225, 231, 238], "safeti": 207, "7": [208, 212, 216], "specifi": [208, 212], "bodi": 208, "lambda": 208, "should": 208, "join": 208, "init": 208, "arrai": [208, 212, 238, 239, 243], "result": 208, "scan": 208, "name": [208, 213], "rang": 209, "15": 210, "background": 210, "idea": 210, "deal": [210, 244], "remaind": 210, "condit": [210, 245], "ternari": 210, "11": 211, "slice": 211, "take": 211, "deduct": 211, "degener": 211, "obtain": 211, "multidimension": [212, 238], "mai": 212, "probabl": 212, "don": 212, "want": 212, "s": 212, "const": 212, "entri": 212, "index": 212, "refer": [212, 239], "lifetim": 212, "depend": 212, "explicitli": 212, "placement": 212, "hostmirror": 212, "pointer": 212, "unmanag": 212, "special": 212, "philosophi": 213, "known": [213, 222], "knownissu": 213, "crai": 213, "fortran": [213, 238], "inlin": 213, "vs": 213, "uvm": 213, "cite": 214, "contribut": 215, "document": [215, 229], "x": [216, 227], "namespac": 216, "updat": 216, "guid": [217, 225], "pr": 218, "review": 218, "intern": [218, 234], "test": [218, 230, 234, 235], "behavior": 218, "faq": 219, "websit": 220, "content": 220, "select": 221, "debug": 221, "tpl": 221, "cpu": [221, 226], "amd": 221, "arm": 221, "ibm": 221, "intel": 221, "risc": 221, "v": 221, "nvidia": 221, "licens": 223, "quick": 226, "start": 226, "download": 226, "latest": 226, "recip": 226, "link": 226, "hello": 226, "world": 226, "help": 226, "coolerview": 228, "plan": [230, 231], "project": 231, "stabil": 231, "activ": 231, "support": [231, 233], "platform": [231, 235], "capabl": 231, "iso": 231, "releas": [231, 234], "priorit": 231, "coordin": 231, "process": [231, 234], "feedback": 232, "report": 232, "attach": 233, "identif": 233, "b": 233, "file": 233, "promot": 233, "txt": 233, "chang": 234, "pull": 234, "request": 234, "nightli": 234, "integr": 234, "prefer": 234, "commun": 234, "workflow": 235, "compon": 235, "softwar": 235, "git": 235, "repositori": 235, "batch": 235, "queue": 235, "account": 235, "script": 235, "unit": 235, "averag": 237, "element": 237, "adjac": 237, "full": 237, "interop": 238, "multi": 239, "dimension": 239, "formul": 239, "mpi": 240, "halo": 240, "exchang": 240, "send": 240, "messag": 240, "awar": 240, "separ": 240, "out": 240, "identifi": 240, "subset": 240, "indic": 240, "extract": 240, "from": 241, "kokkos_enable_cuda_uvm": 241, "altern": 241, "transit": 241, "overlap": 242, "actor": [242, 245], "subject": [242, 245], "assumpt": [242, 245], "constraint": [242, 245], "while": 242, "cabana": 243, "soa": 243, "aosoa": 243, "pre": 244, "17": 244, "post": 245, "recurs": 245, "fibonacci": 245, "flow": 245, "n": 245, "divid": 245, "graph": 245, "down": 245, "bf": 245, "window": 246, "h": 246, "video": 247, "lectur": 247, "slide": 247}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "cppkokkos": 6, "sphinx": 56}})